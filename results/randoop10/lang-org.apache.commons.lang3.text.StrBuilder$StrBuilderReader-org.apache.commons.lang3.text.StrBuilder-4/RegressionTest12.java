import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test06001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06001");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator("100.01210\n");
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        int int28 = strTokenizer25.previousIndex();
        char[] charArray35 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        int int46 = strBuilder36.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher51, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer25.setIgnoredMatcher(strMatcher55);
        int int59 = strBuilder2.indexOf(strMatcher55, (int) '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder2.appendln("zinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder2.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer66, "0\n4444444444#4#a4#");
        java.lang.String str69 = strTokenizer66.previous();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = strTokenizer66.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str69, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test06002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06002");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        int int17 = strBuilder14.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln((double) 49);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.replace(strMatcher33, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[#4#a4#]", strMatcher33, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher49);
        java.lang.String str52 = strTokenizer51.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer51.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\njava.io.IOException: 10.0\nStrTokenizer[#4#a4#]\n", strMatcher44, strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder19.deleteAll(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test06003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06003");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.write(0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
    }

    @Test
    public void test06004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06004");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.ensureCapacity(2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.setCharAt(34, '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test06005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06005");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.appendln(strBuilder9);
        java.lang.String str14 = strBuilder2.leftString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendln(false);
        java.lang.String str17 = strBuilder2.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test06006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06006");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(20);
    }

    @Test
    public void test06007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06007");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append(false);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setDelimiterString("hi!");
        boolean boolean80 = strTokenizer77.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder64.appendFixedWidthPadRight((java.lang.Object) strTokenizer77, 10, ' ');
        int int84 = strTokenizer77.previousIndex();
        boolean boolean85 = strTokenizer77.isIgnoreEmptyTokens();
        java.lang.String[] strArray86 = strTokenizer77.getTokenArray();
        java.lang.String str87 = strTokenizer77.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder57.appendAll((java.util.Iterator<java.lang.String>) strTokenizer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder57.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder57.deleteAll("#4#a4#java.io.IOException: 10.0\n-1        ");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder57.replaceAll('f', '4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test06008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06008");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder14.asTokenizer();
        int int16 = strBuilder14.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(true);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterString("hi!");
        boolean boolean48 = strTokenizer45.isIgnoreEmptyTokens();
        java.lang.String str49 = strTokenizer45.next();
        int int50 = strList35.indexOf((java.lang.Object) strTokenizer45);
        java.util.stream.Stream<java.lang.String> strStream51 = strList35.stream();
        strList35.add((int) (short) 0, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder28.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList35, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        java.lang.String str60 = strBuilder59.getNullText();
        char[] charArray62 = new char[] { 'a' };
        char[] charArray63 = strBuilder59.getChars(charArray62);
        char[] charArray68 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray69 = strBuilder59.getChars(charArray68);
        java.io.Reader reader70 = strBuilder59.asReader();
        reader70.mark(10);
        reader70.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.clear();
        char[] charArray83 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder76.appendln(charArray83);
        int int86 = reader70.read(charArray83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray83);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray83);
        char[] charArray92 = strBuilder56.getChars(charArray83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder14.appendln(charArray92, 109, (int) '3');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7 + "'", int16 == 7);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "#4#a4#" + "'", str49, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "10\ntrue\n0\nzinekoTrtSeslaf \n\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "10\ntrue\n0\nzinekoTrtSeslaf \n\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[1, 0, \n, t, r, u, e, \n, 0, \n, z, i, n, e, k, o, T, r, t, S, e, s, l, a, f,  , \n, \n, \n]");
    }

    @Test
    public void test06009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06009");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        java.lang.Throwable throwable62 = null;
        java.io.IOException iOException63 = new java.io.IOException("", throwable62);
        java.io.IOException iOException64 = new java.io.IOException("#4#a4#", throwable62);
        java.io.IOException iOException65 = new java.io.IOException(throwable62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1.0f, iOException65, false, 100, strBuilder68 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.appendWithSeparators(objArray69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.appendln(10L);
        int int87 = strBuilder81.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder81.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder78.appendln(strBuilder90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.ensureCapacity(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strBuilder93.asTokenizer();
        java.io.Writer writer95 = writer37.append((java.lang.CharSequence) strBuilder93);
        writer37.close();
        writer37.write(" a0\ntrue\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(writer95);
    }

    @Test
    public void test06010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06010");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        java.lang.String str33 = strTokenizer32.nextToken();
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        boolean boolean36 = strList34.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str39 = strTokenizer38.getContent();
        boolean boolean40 = strList34.equals((java.lang.Object) strTokenizer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean42 = strList34.equals((java.lang.Object) strMatcher41);
        java.util.stream.Stream<java.lang.String> strStream43 = strList34.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.insert(0, (double) (byte) 100);
        java.io.Reader reader51 = strBuilder50.asReader();
        boolean boolean52 = strList34.remove((java.lang.Object) reader51);
        strList34.clear();
        boolean boolean54 = strList4.addAll((java.util.Collection<java.lang.String>) strList34);
        java.util.stream.Stream<java.lang.String> strStream55 = strList4.parallelStream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strStream55);
    }

    @Test
    public void test06011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06011");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.reverse();
        int int17 = strBuilder14.indexOf('0', 74);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n 10", 65, 109);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test06012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06012");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        int int30 = reader13.read();
        boolean boolean31 = reader13.markSupported();
        int int32 = reader13.read();
        reader13.close();
        long long35 = reader13.skip(15L);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test06013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06013");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.String str5 = strTokenizer1.getContent();
        java.lang.String[] strArray6 = strTokenizer1.getTokenArray();
        boolean boolean7 = strTokenizer1.hasNext();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06014");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer18.getIgnoredMatcher();
        boolean boolean28 = strTokenizer18.hasNext();
        int int29 = strTokenizer18.previousIndex();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test06015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06015");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, " ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer16.set(" falsezinekoTrtSeslaf \n10.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test06016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06016");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(true);
        int int11 = strBuilder5.lastIndexOf("", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendSeparator("0java.io.IOExceptionfalse100", 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.trim();
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("hi!");
        java.lang.String str27 = strTokenizer26.nextToken();
        java.util.List<java.lang.String> strList28 = strTokenizer26.getTokenList();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        boolean boolean43 = strList41.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str46 = strTokenizer45.getContent();
        boolean boolean47 = strList41.equals((java.lang.Object) strTokenizer45);
        boolean boolean48 = strList28.addAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strList41);
        boolean boolean50 = strList41.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = strList41.set(20, " 10\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 20, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#a4#" + "'", str27, "#4#a4#");
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test06017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06017");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        java.util.stream.IntStream intStream16 = strBuilder2.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendSeparator('#');
        boolean boolean19 = strBuilder18.isEmpty();
        char[] charArray20 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendFixedWidthPadRight(16, 9, '\000');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = strBuilder27.substring(44);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test06018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06018");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendSeparator(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strBuilder23.asTokenizer();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        java.lang.String str44 = strTokenizer43.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setDelimiterChar('a');
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        int int60 = strTokenizer58.size();
        java.lang.String str61 = strTokenizer58.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer58.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer58.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer43.setTrimmerMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer43.getDelimiterMatcher();
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer43.reset(charArray73);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder23.append(charArray73, 70, 95);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 95");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#4#" + "'", str61, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test06019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06019");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        strList27.add((int) (byte) 1, "0.012true104444444444444444444444444444444444444444444444  \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.appendln(strBuilder71, 1, (int) (short) 100);
        boolean boolean75 = strList27.equals((java.lang.Object) 1);
        boolean boolean77 = strList27.add("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList80 = strList27.subList(190, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test06020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06020");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        java.lang.String str14 = strBuilder2.toString();
        java.lang.StringBuffer stringBuffer15 = strBuilder2.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder2.append('.');
        // The following exception was thrown during execution in test generation
        try {
            char char19 = strBuilder17.charAt(66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 66");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test06021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06021");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        boolean boolean60 = strList27.retainAll((java.util.Collection<java.lang.String>) strList57);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("hi!");
        java.lang.String str72 = strTokenizer71.nextToken();
        java.util.List<java.lang.String> strList73 = strTokenizer71.getTokenList();
        boolean boolean75 = strList73.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str78 = strTokenizer77.getContent();
        boolean boolean79 = strList73.equals((java.lang.Object) strTokenizer77);
        java.lang.String str81 = strList73.remove((int) (byte) 0);
        boolean boolean82 = strList57.addAll((java.util.Collection<java.lang.String>) strList73);
        boolean boolean83 = strList73.isEmpty();
        java.util.Iterator<java.lang.String> strItor84 = strList73.iterator();
        java.util.stream.Stream<java.lang.String> strStream85 = strList73.parallelStream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "#4#a4#" + "'", str72, "#4#a4#");
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "#4#a4#" + "'", str81, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strItor84);
        org.junit.Assert.assertNotNull(strStream85);
    }

    @Test
    public void test06022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06022");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int6 = strBuilder3.indexOf(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(false);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        boolean boolean24 = strTokenizer21.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.appendFixedWidthPadRight((java.lang.Object) strTokenizer21, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((int) (short) 10);
        boolean boolean38 = strBuilder8.equalsIgnoreCase(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(false);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        java.lang.String str55 = strTokenizer54.nextToken();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        java.lang.String str60 = strBuilder59.getNullText();
        char[] charArray62 = new char[] { 'a' };
        char[] charArray63 = strBuilder59.getChars(charArray62);
        char[] charArray68 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray69 = strBuilder59.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray69);
        int int71 = strList56.indexOf((java.lang.Object) charArray69);
        char[] charArray72 = strBuilder43.getChars(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.setIgnoreEmptyTokens(false);
        java.lang.String str81 = strTokenizer78.nextToken();
        boolean boolean82 = strTokenizer78.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer78.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer2.setDelimiterMatcher(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList88 = strTokenizer85.getTokenList();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator89 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList88.replaceAll(strUnaryOperator89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#4#a4#" + "'", str55, "#4#a4#");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strList88);
    }

    @Test
    public void test06023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06023");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder5.appendFixedWidthPadRight(48, (int) '1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder5.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln('I');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        java.lang.String str51 = strBuilder49.rightString((int) (short) -1);
        java.lang.String str53 = strBuilder49.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setIgnoreEmptyTokens(false);
        int int60 = strTokenizer57.previousIndex();
        java.lang.Object obj61 = strTokenizer57.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder49.append((java.lang.Object) strTokenizer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer67.setTrimmerMatcher(strMatcher69);
        int int72 = strBuilder63.lastIndexOf(strMatcher69, 48);
        int int73 = strBuilder43.lastIndexOf(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 22 + "'", int72 == 22);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test06024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06024");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendln((long) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder5.setLength(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendSeparator("10\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        java.lang.String str39 = strBuilder38.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendFixedWidthPadLeft((java.lang.Object) 100, (int) (short) 0, ' ');
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendln(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder35.replace(strMatcher57, "0\nfalse32.0", 2, 13, 32);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test06025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06025");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append("#4#a4#");
        java.lang.String str20 = strBuilder13.leftString((int) (short) 100);
        int int22 = strBuilder13.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder13.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder13.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int41 = strBuilder38.lastIndexOf(strMatcher39, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder13.replaceFirst(strMatcher39, "#4#a4#");
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        int int55 = strBuilder43.lastIndexOf(strMatcher53, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 15 + "'", int55 == 15);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
    }

    @Test
    public void test06026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06026");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        boolean boolean20 = strList18.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str23 = strTokenizer22.getContent();
        boolean boolean24 = strList18.equals((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean26 = strList18.equals((java.lang.Object) strMatcher25);
        boolean boolean27 = strList4.addAll((java.util.Collection<java.lang.String>) strList18);
        java.util.ListIterator<java.lang.String> strItor28 = strList18.listIterator();
        boolean boolean29 = strItor28.hasNext();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test06027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06027");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoredChar('4');
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setQuoteChar('a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer17.add(" \nStrTokenizer[#4#a4#]1.0java.io.IOExceptionfalse1001.035.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str14, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test06028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06028");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" 10\n\n0\nzinekoTrtSeslaf ");
    }

    @Test
    public void test06029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06029");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        int int9 = strBuilder3.lastIndexOf("1false0\n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.replace((int) (byte) 0, 0, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        int int16 = strBuilder13.lastIndexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln("100.0false\n");
        // The following exception was thrown during execution in test generation
        try {
            char char20 = strBuilder18.charAt(21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 21");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test06030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06030");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setDelimiterString("hi!");
        java.lang.String str18 = strTokenizer17.nextToken();
        java.util.List<java.lang.String> strList19 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        char[] charArray31 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray32 = strBuilder22.getChars(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray32);
        int int34 = strList19.indexOf((java.lang.Object) charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, '#', ' ');
        boolean boolean38 = strTokenizer37.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder4.appendln((java.lang.Object) boolean38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append("#4#a4#");
        java.lang.String str47 = strBuilder40.leftString((int) (short) 100);
        int int49 = strBuilder40.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int68 = strBuilder65.lastIndexOf(strMatcher66, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder40.replaceFirst(strMatcher66, "#4#a4#");
        java.lang.String str73 = strBuilder70.midString((int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.insert(0, ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder4.append(strBuilder70, 39, 20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test06031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06031");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append(stringBuffer10);
        int int13 = strBuilder9.indexOf("a4 4");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        java.lang.Throwable throwable21 = null;
        java.io.IOException iOException22 = new java.io.IOException("", throwable21);
        java.io.IOException iOException23 = new java.io.IOException("#4#a4#", throwable21);
        java.io.IOException iOException24 = new java.io.IOException(throwable21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1.0f, iOException24, false, 100, strBuilder27 };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.appendWithSeparators(objArray28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendln(10L);
        int int46 = strBuilder40.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder37.appendln(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str57 = strTokenizer56.getContent();
        char[] charArray63 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer56.reset(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, "a");
        java.lang.String[] strArray68 = strTokenizer67.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder54.appendAll((java.lang.Object[]) strArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder9.appendAll((java.lang.Object[]) strArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]", '4');
        boolean boolean74 = strTokenizer73.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer73, "lse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.insert(35, (long) 60);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test06032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06032");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.reverse();
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder7.append(stringBuffer52, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append(stringBuffer52);
        int int59 = strBuilder0.indexOf("StrTokenizer[not tokenized yet]", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder0.insert((int) (byte) 10, (float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder0.appendSeparator('a', 39);
        int int67 = strBuilder65.lastIndexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.deleteFirst('\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.replace(44, 16, "#4#a4#1false0\nfalse");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 24 + "'", int67 == 24);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test06033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06033");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.lang.String str20 = strTokenizer14.toString();
        java.lang.String str21 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer14.setIgnoreEmptyTokens(true);
        boolean boolean24 = strTokenizer14.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer14.set("OExceptionfalse");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str20, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str21, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test06034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06034");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        int int19 = strTokenizer16.previousIndex();
        boolean boolean20 = strTokenizer16.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str29 = strTokenizer28.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        char[] charArray43 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray44 = strBuilder34.getChars(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder34.appendln("java.io.IOException: ");
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder46.replaceFirst(strMatcher57, "#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer31.setTrimmerMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("100.0false", strMatcher26, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer16.setDelimiterMatcher(strMatcher26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = strTokenizer16.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
    }

    @Test
    public void test06035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06035");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.replaceAll('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator("", "java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln((double) 19);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test06036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06036");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        java.io.Writer writer92 = writer37.append(' ');
        writer92.write("1false0\nfalse");
        writer92.flush();
        writer92.write(20);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(writer92);
    }

    @Test
    public void test06037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06037");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(".0java.io.IOExceptionfalse1000", "0");
        java.lang.String str3 = strTokenizer2.next();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "." + "'", str3, ".");
    }

    @Test
    public void test06038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06038");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.insert(0, (int) (byte) 100);
        int int14 = strBuilder11.indexOf("1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce", (int) (byte) 100);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06039");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        char[] charArray25 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray26 = strBuilder16.getChars(charArray25);
        int int30 = strMatcher13.isMatch(charArray25, (int) (short) 100, (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str36 = strTokenizer35.getContent();
        char[] charArray42 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer35.reset(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setIgnoredChar('a');
        boolean boolean52 = strTokenizer49.isIgnoreEmptyTokens();
        java.lang.String str53 = strTokenizer49.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer33.setQuoteMatcher(strMatcher54);
        int int56 = strTokenizer55.previousIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "4" + "'", str53, "4");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test06040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06040");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.setNewLineText("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('1');
        int int10 = strBuilder7.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.replaceFirst('1', '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test06041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06041");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("eptionfalse1001.0\n35.0\n1false0\n\n");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test06042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06042");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert(4, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln("0\nfalse32.0");
        boolean boolean32 = strBuilder30.contains("1false0\nzinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test06043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06043");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder30.appendSeparator('4', ' ');
        java.util.stream.IntStream intStream46 = strBuilder45.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.append(false);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setDelimiterString("hi!");
        boolean boolean68 = strTokenizer65.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.appendFixedWidthPadRight((java.lang.Object) strTokenizer65, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int75 = strBuilder72.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.appendln((int) (short) 10);
        boolean boolean82 = strBuilder52.equalsIgnoreCase(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder77.insert((int) (byte) 1, 'a');
        char char87 = strBuilder77.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder77.deleteAll("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder45.appendln(strBuilder77);
        java.util.stream.IntStream intStream91 = strBuilder45.chars();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + char87 + "' != '" + ' ' + "'", char87 == ' ');
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(intStream91);
    }

    @Test
    public void test06044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06044");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int10 = strBuilder0.indexOf('\000', 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendln("##########################110\n\ni###############################################################################################", 66, 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.reverse();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test06045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06045");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendln(10L);
        int int36 = strBuilder30.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append("#4#a4#");
        java.lang.String str47 = strBuilder40.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.append(false);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("hi!");
        boolean boolean69 = strTokenizer66.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder53.appendFixedWidthPadRight((java.lang.Object) strTokenizer66, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int76 = strBuilder73.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendln((int) (short) 10);
        boolean boolean83 = strBuilder53.equalsIgnoreCase(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder53.reverse();
        java.lang.StringBuffer stringBuffer85 = strBuilder84.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder40.append(stringBuffer85, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder39.append(stringBuffer85);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder27.appendln(stringBuffer85, 2, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder27.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder94.setNullText("0\n1false0\n\n#");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(stringBuffer85);
        org.junit.Assert.assertEquals(stringBuffer85.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test06046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06046");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendln(false);
        char[] charArray18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder10.append(charArray18, 95, 33);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        java.lang.Throwable throwable29 = null;
        java.io.IOException iOException30 = new java.io.IOException("", throwable29);
        java.io.IOException iOException31 = new java.io.IOException("#4#a4#", throwable29);
        java.io.IOException iOException32 = new java.io.IOException(throwable29);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1.0f, iOException32, false, 100, strBuilder35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.appendWithSeparators(objArray36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.append(true);
        int int51 = strBuilder48.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendSeparator(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str59 = strBuilder58.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteAll('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder61.asTokenizer();
        boolean boolean65 = strBuilder54.equalsIgnoreCase(strBuilder61);
        boolean boolean66 = strBuilder21.equals(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 4 + "'", int51 == 4);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test06047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06047");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int38 = strBuilder35.lastIndexOf(strMatcher36, (int) (short) 10);
        boolean boolean39 = strBuilder14.contains(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendln(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder14.replaceFirst("001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111", "0\nfalse32.0");
        int int45 = strBuilder14.indexOf('4');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test06048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06048");
        java.io.IOException iOException1 = new java.io.IOException("");
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException("", throwable4);
        java.io.IOException iOException6 = new java.io.IOException("hi!", throwable4);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        iOException1.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException11 = new java.io.IOException("");
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("", throwable14);
        java.io.IOException iOException16 = new java.io.IOException("hi!", throwable14);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        iOException11.addSuppressed((java.lang.Throwable) iOException16);
        iOException1.addSuppressed((java.lang.Throwable) iOException11);
        java.lang.String[] strArray23 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("hi!");
        boolean boolean37 = strTokenizer34.isIgnoreEmptyTokens();
        java.lang.String str38 = strTokenizer34.next();
        int int39 = strList24.indexOf((java.lang.Object) strTokenizer34);
        java.util.ListIterator<java.lang.String> strItor41 = strList24.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor42 = strList24.iterator();
        java.lang.String[] strArray46 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("hi!");
        boolean boolean60 = strTokenizer57.isIgnoreEmptyTokens();
        java.lang.String str61 = strTokenizer57.next();
        int int62 = strList47.indexOf((java.lang.Object) strTokenizer57);
        boolean boolean63 = strList24.addAll((java.util.Collection<java.lang.String>) strList47);
        java.util.ListIterator<java.lang.String> strItor64 = strList47.listIterator();
        boolean boolean66 = strList47.add("");
        int int67 = strList47.size();
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setDelimiterString("hi!");
        boolean boolean79 = strTokenizer76.hasNext();
        java.util.List<java.lang.String> strList80 = strTokenizer76.getTokenList();
        boolean boolean81 = strList47.removeAll((java.util.Collection<java.lang.String>) strList80);
        java.lang.Throwable throwable83 = null;
        java.io.IOException iOException84 = new java.io.IOException("", throwable83);
        java.io.IOException iOException86 = new java.io.IOException("0.012true104444444444444444444444444444444444444444444444  \n");
        iOException84.addSuppressed((java.lang.Throwable) iOException86);
        boolean boolean88 = strList47.contains((java.lang.Object) iOException84);
        java.io.IOException iOException90 = new java.io.IOException("StrTokenizer[not tokenized yet]");
        java.io.IOException iOException91 = new java.io.IOException((java.lang.Throwable) iOException90);
        iOException84.addSuppressed((java.lang.Throwable) iOException90);
        java.io.IOException iOException93 = new java.io.IOException((java.lang.Throwable) iOException90);
        iOException1.addSuppressed((java.lang.Throwable) iOException93);
        java.io.IOException iOException95 = new java.io.IOException((java.lang.Throwable) iOException93);
        java.lang.Throwable[] throwableArray96 = iOException93.getSuppressed();
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "#4#a4#" + "'", str38, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertNotNull(strItor42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#4#a4#" + "'", str61, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(throwableArray96);
    }

    @Test
    public void test06049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06049");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(".0jva.io.IOExceptionfalse1001.0jav\n");
    }

    @Test
    public void test06050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06050");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("a4 4", '4', '#');
    }

    @Test
    public void test06051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06051");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append("#4#a4#");
        boolean boolean32 = strBuilder25.equals(strBuilder31);
        int int35 = strBuilder31.indexOf('a', 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.append((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        char[] charArray40 = strBuilder39.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #, 1, 0, 0, ., 0]");
    }

    @Test
    public void test06052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06052");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasNext();
        java.util.List<java.lang.String> strList12 = strTokenizer8.getTokenList();
        boolean boolean13 = strTokenizer8.hasNext();
        boolean boolean14 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('e');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer8.setTrimmerMatcher(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        java.lang.String str21 = strBuilder20.getNullText();
        char[] charArray23 = new char[] { 'a' };
        char[] charArray24 = strBuilder20.getChars(charArray23);
        char[] charArray29 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray30 = strBuilder20.getChars(charArray29);
        java.io.Reader reader31 = strBuilder20.asReader();
        reader31.mark(10);
        reader31.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.clear();
        char[] charArray44 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.appendln(charArray44);
        int int47 = reader31.read(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray44);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = strMatcher16.isMatch(charArray44, 112, 112, 45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
    }

    @Test
    public void test06053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06053");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '0', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setQuoteChar('0');
        boolean boolean39 = strTokenizer38.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06054");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        int int38 = strList23.indexOf((java.lang.Object) strTokenizer33);
        int int39 = strTokenizer33.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer33);
        java.lang.String str41 = strTokenizer33.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer33.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset(".0java.io.IOExceptionfalse1000");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
    }

    @Test
    public void test06055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06055");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator("1.0java.", "  \nStrTokenizer[#4#a4#0]1.0java.io.IOExceptionfalse1001.035.04");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln((long) 100);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test06056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06056");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1.0java.io.IOExceptionfalse1001.0\n35.0\n100.012true\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test06057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06057");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        java.lang.String str6 = strBuilder5.getNullText();
        char[] charArray8 = new char[] { 'a' };
        char[] charArray9 = strBuilder5.getChars(charArray8);
        int int13 = strMatcher2.isMatch(charArray9, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer1.setTrimmerMatcher(strMatcher2);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        java.lang.String str16 = strTokenizer14.nextToken();
        java.lang.Object obj17 = strTokenizer14.clone();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test06058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06058");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        int int17 = strBuilder14.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder20.appendSeparator('4', 0);
        boolean boolean34 = strBuilder14.equals(strBuilder33);
        int int35 = strBuilder33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder38.appendAll((java.util.Iterator<java.lang.String>) strTokenizer50);
        int int54 = strBuilder51.lastIndexOf("", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendSeparator(" \n", (int) '1');
        char[] charArray64 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int74 = strBuilder71.indexOf(strMatcher73);
        int int75 = strBuilder65.indexOf(strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher73);
        boolean boolean77 = strBuilder57.contains(strMatcher73);
        int int78 = strBuilder37.lastIndexOf(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 6 + "'", int35 == 6);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 5 + "'", int78 == 5);
    }

    @Test
    public void test06059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06059");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln((double) '\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.append("1.0java.io.IOExceptionfalse1001.0\n35.0\n", 64, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test06060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06060");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln((double) 10.0f);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        java.lang.String str39 = strTokenizer38.nextToken();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer38.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendln((java.lang.Object) strTokenizer38);
        java.lang.String str45 = strBuilder44.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.delete(66, (int) (short) 100);
        int int49 = strBuilder48.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#4#a4#" + "'", str39, "#4#a4#");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\njava.io.IOException: 10.0\nStrTokenizer[#4#a4#]\n" + "'", str45, "1.0java.io.IOExceptionfalse1001.0\n35.0\njava.io.IOException: 10.0\nStrTokenizer[#4#a4#]\n");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 66 + "'", int49 == 66);
    }

    @Test
    public void test06061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06061");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.String str5 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer1.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer1.setIgnoreEmptyTokens(false);
        int int9 = strTokenizer1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test06062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06062");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write("0java.io.IOExceptionfalse100", 0, 0);
        writer37.flush();
        java.io.Writer writer61 = writer37.append('#');
        writer61.write(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int67 = strBuilder64.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteAll("java.io.IOException: StrTokenizer[#4#a4#]");
        boolean boolean73 = strBuilder69.startsWith(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        java.io.Writer writer74 = writer61.append((java.lang.CharSequence) strBuilder69);
        writer74.write(2);
        // The following exception was thrown during execution in test generation
        try {
            writer74.write("TrtSeslaf ", 64, 33);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(writer74);
    }

    @Test
    public void test06063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06063");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        int int9 = strBuilder3.lastIndexOf("1false0\n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.replace((int) (byte) 0, 0, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.insert(0, "ionfalse1001.0\n\n4\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test06064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06064");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        boolean boolean17 = reader13.ready();
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray24);
        int int29 = reader13.read(charArray24);
        reader13.mark(1);
        boolean boolean32 = reader13.ready();
        reader13.reset();
        long long35 = reader13.skip(38L);
        long long37 = reader13.skip((long) 66);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test06065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06065");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        java.lang.String str4 = strBuilder3.getNullText();
        char[] charArray6 = new char[] { 'a' };
        char[] charArray7 = strBuilder3.getChars(charArray6);
        char[] charArray12 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray13 = strBuilder3.getChars(charArray12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int27 = strBuilder24.lastIndexOf(strMatcher25, (int) (short) 10);
        boolean boolean28 = strBuilder3.contains(strMatcher25);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        int int55 = strMatcher42.isMatch(charArray50, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher25, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getDelimiterMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer56.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strMatcher57);
    }

    @Test
    public void test06066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06066");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        java.lang.String str6 = strBuilder4.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.append((java.lang.Object) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.append((java.lang.CharSequence) strBuilder17);
        int int21 = strBuilder17.indexOf(" falseStrTokeniz", 9);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test06067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06067");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(false);
        boolean boolean14 = strBuilder11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append("io.IOExceptionfalse1001.0\n35.0\n466.0", 3, (int) '\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.insert(10, (float) 6);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test06068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06068");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        java.lang.Throwable throwable47 = null;
        java.io.IOException iOException48 = new java.io.IOException("", throwable47);
        java.io.IOException iOException49 = new java.io.IOException("#4#a4#", throwable47);
        java.io.IOException iOException50 = new java.io.IOException(throwable47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 1.0f, iOException50, false, 100, strBuilder53 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendWithSeparators(objArray54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.String str62 = strBuilder60.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder43.append((java.lang.CharSequence) str62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder39.appendln(strBuilder67, 0, 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder39.appendSeparator('1');
        int int74 = strBuilder39.lastIndexOf("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder39.appendln('\000');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = strBuilder39.substring(23, 33);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test06069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06069");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(false);
        boolean boolean33 = strBuilder31.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.clear();
        java.lang.Throwable throwable41 = null;
        java.io.IOException iOException42 = new java.io.IOException("", throwable41);
        java.io.IOException iOException43 = new java.io.IOException("#4#a4#", throwable41);
        java.io.IOException iOException44 = new java.io.IOException(throwable41);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 1.0f, iOException44, false, 100, strBuilder47 };
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder37.appendWithSeparators(objArray48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendln(10L);
        int int66 = strBuilder60.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder57.appendln(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean76 = strBuilder70.startsWith("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int80 = strBuilder77.indexOf(strMatcher79);
        char[] charArray87 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder77.appendAll((java.util.Iterator<java.lang.String>) strTokenizer89);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int93 = strBuilder90.indexOf(strMatcher92);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder70.deleteFirst(strMatcher92);
        int int95 = strBuilder31.indexOf(strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer21.setIgnoredMatcher(strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer21.reset("a10\n");
        java.lang.String str99 = strTokenizer98.next();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strTokenizer98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "10\n" + "'", str99, "10\n");
    }

    @Test
    public void test06070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06070");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        strList27.add((int) (byte) 1, "0.012true104444444444444444444444444444444444444444444444  \n");
        boolean boolean65 = strList27.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.clear();
        java.lang.String str71 = strBuilder69.rightString((int) (short) -1);
        java.lang.String str73 = strBuilder69.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setIgnoreEmptyTokens(false);
        int int80 = strTokenizer77.previousIndex();
        java.lang.Object obj81 = strTokenizer77.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder69.append((java.lang.Object) strTokenizer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.reverse();
        boolean boolean84 = strList27.remove((java.lang.Object) strBuilder83);
        int int87 = strBuilder83.indexOf("1false0\n", 32);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test06071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06071");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.write("#4#a4#", 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        writer9.write(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray57 = strBuilder49.getChars(charArray55);
        writer9.write(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer59.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
    }

    @Test
    public void test06072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06072");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        boolean boolean19 = strTokenizer18.isIgnoreEmptyTokens();
        java.lang.String[] strArray20 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strMatcher21);
    }

    @Test
    public void test06073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06073");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln(false);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("hi!");
        java.lang.String str67 = strTokenizer66.nextToken();
        java.util.List<java.lang.String> strList68 = strTokenizer66.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        java.lang.String str72 = strBuilder71.getNullText();
        char[] charArray74 = new char[] { 'a' };
        char[] charArray75 = strBuilder71.getChars(charArray74);
        char[] charArray80 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray81 = strBuilder71.getChars(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray81);
        int int83 = strList68.indexOf((java.lang.Object) charArray81);
        char[] charArray84 = strBuilder55.getChars(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray84);
        int int91 = strMatcher14.isMatch(charArray84, 0, (int) (short) -1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer("4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer93.setDelimiterString("a10");
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strTokenizer95.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, strMatcher96);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer97.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#4#a4#" + "'", str67, "#4#a4#");
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strMatcher96);
    }

    @Test
    public void test06074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06074");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("java.io.IOException: StrTokenizer[#4#a4#]");
        boolean boolean9 = strBuilder5.startsWith(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln(false);
        java.lang.String str20 = strBuilder19.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(66);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        java.lang.String str26 = strBuilder25.getNullText();
        char[] charArray28 = new char[] { 'a' };
        char[] charArray29 = strBuilder25.getChars(charArray28);
        char[] charArray34 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray35 = strBuilder25.getChars(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder19.appendln((java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder36, 49, '.');
        int int40 = strBuilder36.capacity();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "100.0false\n" + "'", str20, "100.0false\n");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
    }

    @Test
    public void test06075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06075");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        java.lang.String str24 = strTokenizer23.nextToken();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        boolean boolean27 = strList25.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str30 = strTokenizer29.getContent();
        boolean boolean31 = strList25.equals((java.lang.Object) strTokenizer29);
        boolean boolean32 = strList12.addAll((java.util.Collection<java.lang.String>) strList25);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        java.lang.String str44 = strTokenizer43.nextToken();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str49 = strBuilder48.getNullText();
        char[] charArray51 = new char[] { 'a' };
        char[] charArray52 = strBuilder48.getChars(charArray51);
        char[] charArray57 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray58 = strBuilder48.getChars(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray58);
        int int60 = strList45.indexOf((java.lang.Object) charArray58);
        boolean boolean61 = strList12.retainAll((java.util.Collection<java.lang.String>) strList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList64 = strList45.subList(2, 27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 27");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test06076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06076");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.setNullText("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test06077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06077");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.appendln((float) 53);
        char[] charArray25 = strBuilder16.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "1.0java.io.IOExceptionfalse1001.0\n\n453.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "1.0java.io.IOExceptionfalse1001.0\n\n453.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, \n, 4, 5, 3, ., 0, \n]");
    }

    @Test
    public void test06078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06078");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("hi!");
        boolean boolean34 = strTokenizer31.isIgnoreEmptyTokens();
        java.lang.String str35 = strTokenizer31.next();
        boolean boolean36 = strList4.equals((java.lang.Object) strTokenizer31);
        java.lang.Object[] objArray37 = strList4.toArray();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList4.replaceAll(strUnaryOperator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#4#a4#" + "'", str35, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[, , ]");
    }

    @Test
    public void test06079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06079");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.stringMatcher(" a10\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\n10.0\n", strMatcher2);
        int int4 = strTokenizer3.nextIndex();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test06080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06080");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        char[] charArray48 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray49 = strBuilder39.getChars(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder30.appendln(charArray48, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder24.append(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer58.reset();
        boolean boolean60 = strTokenizer59.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test06081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06081");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteFirst(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        char[] charArray31 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder23.replace(strMatcher40, "", 2, (int) (short) 100, 10);
        char[] charArray51 = strBuilder23.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        java.lang.String str56 = strBuilder55.getNullText();
        char[] charArray58 = new char[] { 'a' };
        char[] charArray59 = strBuilder55.getChars(charArray58);
        int int63 = strMatcher52.isMatch(charArray59, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder5.append(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder5.append(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.insert(6, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendln(10L);
        int int80 = strBuilder74.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder74.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder74.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder74.insert((int) (byte) 0, false);
        java.util.Iterator<java.lang.String> strItor88 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder74.appendWithSeparators(strItor88, " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.append('a');
        boolean boolean93 = strBuilder71.equalsIgnoreCase(strBuilder92);
        java.lang.String str95 = strBuilder92.rightString((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder92.appendSeparator("35.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder97.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "a" + "'", str95, "a");
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test06082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06082");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        java.lang.String str5 = strBuilder2.leftString((int) (short) -1);
        int int7 = strBuilder2.indexOf("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        char[] charArray31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(charArray31);
        boolean boolean33 = strBuilder30.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.clear();
        boolean boolean39 = strBuilder38.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        java.lang.String str45 = strBuilder44.getNullText();
        char[] charArray47 = new char[] { 'a' };
        char[] charArray48 = strBuilder44.getChars(charArray47);
        int int50 = strMatcher41.isMatch(charArray48, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder38.append(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.insert((int) (byte) 1, charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        java.lang.String str71 = strBuilder55.midString((int) (byte) 1, (-1));
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder55.replaceFirst(strMatcher84, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer54.setQuoteMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\n", strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer20.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder2.replaceFirst(strMatcher84, " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder91.replaceFirst('I', '4');
        java.lang.Class<?> wildcardClass95 = strBuilder91.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test06083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06083");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.deleteAll(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.append((float) (byte) 0);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int57 = strBuilder52.indexOf(strMatcher55, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.replaceFirst(strMatcher55, "100.0false\n");
        int int62 = strBuilder28.lastIndexOf(strMatcher55, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder18.replaceAll(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterChar(' ');
        boolean boolean69 = strTokenizer68.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer68.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder18.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder18.append("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendSeparator('.', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendSeparator('3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test06084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06084");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getIgnoredMatcher();
        int int64 = strBuilder45.indexOf(strMatcher62, (int) (byte) 1);
        boolean boolean65 = strBuilder39.contains(strMatcher62);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder39.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer77, "0\nfalse32.0");
        int int84 = strTokenizer77.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
    }

    @Test
    public void test06085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06085");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        int int24 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, (int) '4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder11.replaceAll(" ", "1false0\n");
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher44, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.replaceFirst(strMatcher48, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadLeft(33, 30, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("hi!");
        java.lang.String str60 = strBuilder58.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        java.lang.String str64 = strBuilder63.getNullText();
        char[] charArray66 = new char[] { 'a' };
        char[] charArray67 = strBuilder63.getChars(charArray66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder58.append((java.lang.Object) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.replaceAll('#', ' ');
        java.util.stream.IntStream intStream72 = strBuilder58.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder58.appendSeparator('#');
        boolean boolean75 = strBuilder74.isEmpty();
        char[] charArray76 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendln(charArray76);
        char[] charArray80 = strBuilder51.getChars(charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder51.insert((int) 'I', (float) 27);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: StrTokenizer[");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder83.replace(strMatcher85, "1.0java.", (int) '.', (int) (short) 100, 46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(intStream72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]111111111111111111111111111133");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]111111111111111111111111111133");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[3, 5, ., 0, \n, 4, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t, 1, f, a, l, s, e, 0, \n, t, o, k, e, n, i, z, e, d, 1, f, a, l, s, e, 0, \n, y, e, t, ], 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher85);
    }

    @Test
    public void test06086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06086");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder17.replace(strMatcher22, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        java.util.stream.IntStream intStream28 = strBuilder17.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.deleteAll('4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder9.append((java.lang.CharSequence) strBuilder17, 7, (int) 'c');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test06087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06087");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator("100.01210\n");
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        int int28 = strTokenizer25.previousIndex();
        char[] charArray35 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        int int46 = strBuilder36.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher51, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer25.setIgnoredMatcher(strMatcher55);
        int int59 = strBuilder2.indexOf(strMatcher55, (int) '0');
        int int60 = strBuilder2.size();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder2.replace((int) '4', 42, "[not ");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 31 + "'", int60 == 31);
    }

    @Test
    public void test06088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06088");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        boolean boolean46 = reader13.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        char[] charArray58 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray59 = strBuilder49.getChars(charArray58);
        java.io.Reader reader60 = strBuilder49.asReader();
        reader60.mark(10);
        reader60.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        char[] charArray73 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder66.appendln(charArray73);
        int int76 = reader60.read(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        java.lang.String str80 = strBuilder79.getNullText();
        char[] charArray82 = new char[] { 'a' };
        char[] charArray83 = strBuilder79.getChars(charArray82);
        char[] charArray88 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray89 = strBuilder79.getChars(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray88);
        int int92 = reader60.read(charArray88);
        int int93 = reader13.read(charArray88);
        boolean boolean94 = reader13.ready();
        reader13.reset();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test06089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06089");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(' ');
        java.util.stream.IntStream intStream7 = strBuilder6.codePoints();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1false0\nfalse");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        java.lang.String str14 = strBuilder13.getNullText();
        char[] charArray16 = new char[] { 'a' };
        char[] charArray17 = strBuilder13.getChars(charArray16);
        char[] charArray22 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray23 = strBuilder13.getChars(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray31);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher49, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer24.setIgnoredMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer9.setIgnoredMatcher(strMatcher49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder6.replace(strMatcher49, ".0j", 6, 12, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
    }

    @Test
    public void test06090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06090");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        java.lang.String str17 = strTokenizer8.getContent();
        boolean boolean18 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test06091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06091");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer5.reset();
        boolean boolean7 = strTokenizer5.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06092");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append("#4#a4#");
        java.lang.String str24 = strBuilder17.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(false);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) strTokenizer43, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int53 = strBuilder50.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln((int) (short) 10);
        boolean boolean60 = strBuilder30.equalsIgnoreCase(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder30.reverse();
        java.lang.StringBuffer stringBuffer62 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder17.append(stringBuffer62, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder3.append(stringBuffer62, 6, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder3.appendSeparator('e', 'f');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(stringBuffer62);
        org.junit.Assert.assertEquals(stringBuffer62.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test06093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06093");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        int int30 = reader13.read();
        boolean boolean31 = reader13.markSupported();
        reader13.close();
        reader13.reset();
        java.nio.CharBuffer charBuffer34 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int35 = reader13.read(charBuffer34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test06094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06094");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        java.util.stream.IntStream intStream6 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int9 = strBuilder5.lastIndexOf(strMatcher8);
        java.lang.StringBuffer stringBuffer10 = strBuilder5.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator('1');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray15 = strBuilder12.toCharArray(40, (int) 'f');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer10);
        org.junit.Assert.assertEquals(stringBuffer10.toString(), " ");
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test06095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06095");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        reader13.reset();
        boolean boolean18 = reader13.ready();
        long long20 = reader13.skip((long) 21);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test06096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06096");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setQuoteChar('4');
        java.lang.String str34 = strTokenizer31.getContent();
        boolean boolean35 = strTokenizer31.isIgnoreEmptyTokens();
        java.lang.String str36 = strTokenizer31.next();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "a" + "'", str34, "a");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "a" + "'", str36, "a");
    }

    @Test
    public void test06097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06097");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence41 = strBuilder38.subSequence(16, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -16");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test06098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06098");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder6.replaceAll(strMatcher25, "StrTokenizer[#4#a4#]");
        java.lang.CharSequence charSequence29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.append(charSequence29, 15, 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendln((int) '.');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.insert((int) '3', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test06099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06099");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.deleteAll("35\n");
        int int31 = strBuilder25.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder25.insert(16, (double) 48);
        boolean boolean36 = strBuilder25.endsWith("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence39 = strBuilder25.subSequence(34, 112);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 112");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06100");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(stringBuffer5, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.ensureCapacity(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append((double) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.replace(4, 21, "1.0java.io.IOExceptionfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst('#');
        java.lang.String str32 = strBuilder31.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.deleteCharAt((int) (byte) 1);
        boolean boolean39 = strBuilder13.equalsIgnoreCase(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + " " + "'", str32, " ");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06101");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(' ');
        java.util.stream.IntStream intStream64 = strBuilder63.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int67 = strBuilder63.lastIndexOf(strMatcher66);
        boolean boolean68 = strList4.remove((java.lang.Object) strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder71.appendln(strBuilder78);
        boolean boolean82 = strList4.remove((java.lang.Object) strBuilder78);
        boolean boolean84 = strList4.add("a");
        int int85 = strList4.size();
        boolean boolean86 = strList4.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            strList4.add(16, "a.io.IOExceptionfalse1001.0\n35.0\n#4#a4#\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 16, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 4 + "'", int85 == 4);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test06102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06102");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        java.util.List<java.lang.String> strList29 = strTokenizer18.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        char[] charArray42 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray43 = strBuilder33.getChars(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int57 = strBuilder54.lastIndexOf(strMatcher55, (int) (short) 10);
        boolean boolean58 = strBuilder33.contains(strMatcher55);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("hi!");
        java.lang.String str70 = strTokenizer69.nextToken();
        java.util.List<java.lang.String> strList71 = strTokenizer69.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer69.setTrimmerMatcher(strMatcher72);
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray80);
        int int85 = strMatcher72.isMatch(charArray80, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher55, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer18.setQuoteMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer18.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer18.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer18.reset("4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer18.setDelimiterString("#############");
        boolean boolean96 = strTokenizer95.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#4#a4#" + "'", str70, "#4#a4#");
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test06103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06103");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        writer37.write("1false0\nfalse");
        writer37.write(20);
        writer37.write("");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
    }

    @Test
    public void test06104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06104");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.write("#4#a4#", 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        writer9.write(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray57 = strBuilder49.getChars(charArray55);
        writer9.write(charArray55);
        writer9.write("java.");
        writer9.close();
        java.io.Writer writer63 = writer9.append('I');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        java.lang.Throwable throwable71 = null;
        java.io.IOException iOException72 = new java.io.IOException("", throwable71);
        java.io.IOException iOException73 = new java.io.IOException("#4#a4#", throwable71);
        java.io.IOException iOException74 = new java.io.IOException(throwable71);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 1.0f, iOException74, false, 100, strBuilder77 };
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder67.appendWithSeparators(objArray78, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder83.clear();
        java.lang.String str86 = strBuilder84.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder67.append((java.lang.CharSequence) str86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.insert(4, 5);
        java.io.Writer writer93 = writer9.append((java.lang.CharSequence) strBuilder92);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder92.deleteCharAt(34);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(writer93);
    }

    @Test
    public void test06105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06105");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.String str5 = strTokenizer1.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer1.getIgnoredMatcher();
        java.lang.Class<?> wildcardClass7 = strTokenizer1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test06106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06106");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator("100.01210\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        char[] charArray28 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray29 = strBuilder19.getChars(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder16.deleteFirst(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.trim();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.insert(36, 'I');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 36");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test06107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06107");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        java.lang.Throwable throwable21 = null;
        java.io.IOException iOException22 = new java.io.IOException("", throwable21);
        java.io.IOException iOException23 = new java.io.IOException("#4#a4#", throwable21);
        java.io.IOException iOException24 = new java.io.IOException(throwable21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1.0f, iOException24, false, 100, strBuilder27 };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.appendWithSeparators(objArray28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.replaceFirst('1', '1');
        char[] charArray48 = null;
        char[] charArray49 = strBuilder42.getChars(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.appendSeparator('\000');
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        java.lang.String str63 = strTokenizer62.nextToken();
        java.util.List<java.lang.String> strList64 = strTokenizer62.getTokenList();
        boolean boolean66 = strList64.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str69 = strTokenizer68.getContent();
        boolean boolean70 = strList64.equals((java.lang.Object) strTokenizer68);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        java.lang.String str76 = strBuilder75.getNullText();
        char[] charArray78 = new char[] { 'a' };
        char[] charArray79 = strBuilder75.getChars(charArray78);
        int int81 = strMatcher72.isMatch(charArray79, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer68.setDelimiterMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder51.appendFixedWidthPadLeft((java.lang.Object) strTokenizer82, 16, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder11.append((java.lang.CharSequence) strBuilder51);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder88.replace(16, (int) '\n', ".");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "1.0java.io.IOExceptionfalse1001.0\n35.0\ntrue");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "1.0java.io.IOExceptionfalse1001.0\n35.0\ntrue");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, t, r, u, e]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#4#a4#" + "'", str63, "#4#a4#");
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test06108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06108");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        int int24 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, (int) '4', 'a');
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        java.lang.String str39 = strTokenizer38.nextToken();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        boolean boolean42 = strList40.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str45 = strTokenizer44.getContent();
        boolean boolean46 = strList40.equals((java.lang.Object) strTokenizer44);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        java.lang.String str52 = strBuilder51.getNullText();
        char[] charArray54 = new char[] { 'a' };
        char[] charArray55 = strBuilder51.getChars(charArray54);
        int int57 = strMatcher48.isMatch(charArray55, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer44.setDelimiterMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder27.deleteAll(strMatcher48);
        int int62 = strBuilder59.lastIndexOf('1', 6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence65 = strBuilder59.subSequence((int) 'a', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#4#a4#" + "'", str39, "#4#a4#");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test06109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06109");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setIgnoredChar('1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset("se1001.0\n35.0\ntrue");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test06110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06110");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((long) '#');
        java.util.stream.IntStream intStream22 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendSeparator("10\n\n");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        boolean boolean42 = strTokenizer39.isIgnoreEmptyTokens();
        java.lang.String str43 = strTokenizer39.next();
        int int44 = strList29.indexOf((java.lang.Object) strTokenizer39);
        java.util.ListIterator<java.lang.String> strItor46 = strList29.listIterator((int) (byte) 0);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList51.iterator();
        boolean boolean70 = strList29.removeAll((java.util.Collection<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList29, "10\n\n");
        boolean boolean73 = strList12.retainAll((java.util.Collection<java.lang.String>) strList29);
        java.util.Iterator<java.lang.String> strItor74 = strList29.iterator();
        boolean boolean76 = strList29.add("  \n a10\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = strList29.get((int) 'I');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 73, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#4#a4#" + "'", str43, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strItor74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test06111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06111");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        int int20 = strBuilder14.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append("#4#a4#");
        java.lang.String str31 = strBuilder24.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder37.reverse();
        java.lang.StringBuffer stringBuffer69 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.append(stringBuffer69, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder23.append(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder9.appendln(stringBuffer69);
        java.util.stream.IntStream intStream75 = strBuilder74.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendln('4');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test06112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06112");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.appendNewLine();
        java.lang.StringBuffer stringBuffer22 = strBuilder21.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.appendln(stringBuffer22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str28 = strBuilder27.getNullText();
        char[] charArray30 = new char[] { 'a' };
        char[] charArray31 = strBuilder27.getChars(charArray30);
        char[] charArray36 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray37 = strBuilder27.getChars(charArray36);
        java.io.Reader reader38 = strBuilder27.asReader();
        reader38.mark(10);
        reader38.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.clear();
        char[] charArray51 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.appendln(charArray51);
        int int54 = reader38.read(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.insert(17, charArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 17");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(stringBuffer22);
        org.junit.Assert.assertEquals(stringBuffer22.toString(), "100.0\n");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer58);
    }

    @Test
    public void test06113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06113");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        java.util.Iterator<java.lang.String> strItor8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendAll(strItor8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.setNewLineText("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendPadding(2, 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.insert(4, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 4");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test06114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06114");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.String[] strArray8 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        java.lang.String str23 = strTokenizer19.next();
        int int24 = strList9.indexOf((java.lang.Object) strTokenizer19);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        int int47 = strBuilder37.indexOf(strMatcher45);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher45, strMatcher60);
        boolean boolean62 = strList9.equals((java.lang.Object) strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        java.util.stream.IntStream intStream69 = strBuilder68.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int72 = strBuilder68.lastIndexOf(strMatcher71);
        boolean boolean73 = strList9.remove((java.lang.Object) strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer1.setTrimmerMatcher(strMatcher71);
        boolean boolean75 = strTokenizer74.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setDelimiterString(" ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#4#a4#" + "'", str23, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(intStream69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test06115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06115");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.reverse();
        boolean boolean9 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.replaceFirst("0\n", "1truefalse0\nzinekoTrtSeslaf true");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("java.io.IOException");
        java.lang.String str16 = strBuilder14.rightString(95);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "eslf" + "'", str16, "eslf");
    }

    @Test
    public void test06116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06116");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setTrimmerMatcher(strMatcher13);
        java.lang.String str15 = strTokenizer14.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterChar('a');
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        int int31 = strTokenizer29.size();
        java.lang.String str32 = strTokenizer29.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer14.setTrimmerMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer14.getDelimiterMatcher();
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer14.reset(charArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.clear();
        java.lang.Throwable throwable58 = null;
        java.io.IOException iOException59 = new java.io.IOException("", throwable58);
        java.io.IOException iOException60 = new java.io.IOException("#4#a4#", throwable58);
        java.io.IOException iOException61 = new java.io.IOException(throwable58);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray65 = new java.lang.Object[] { 1.0f, iOException61, false, 100, strBuilder64 };
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder54.appendWithSeparators(objArray65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strBuilder74.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setIgnoreEmptyTokens(false);
        boolean boolean78 = strTokenizer75.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer75.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer50.setIgnoredMatcher(strMatcher79);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer50.add("#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#4#a4#" + "'", str15, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#" + "'", str32, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer80);
    }

    @Test
    public void test06117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06117");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("aaaaaaaaaaaaaaaaaaaaaaaa100", '0', '1');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06118");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        boolean boolean46 = reader13.markSupported();
        long long48 = reader13.skip((long) 37);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
    }

    @Test
    public void test06119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06119");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteCharAt(0);
        java.lang.CharSequence charSequence15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.append(charSequence15, 206, 15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.append(false);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strTokenizer37, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int47 = strBuilder44.indexOf(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.appendln((int) (short) 10);
        boolean boolean54 = strBuilder24.equalsIgnoreCase(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.insert((int) (byte) 1, 'a');
        char char59 = strBuilder49.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder49.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder49.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder18.appendln(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + char59 + "' != '" + ' ' + "'", char59 == ' ');
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test06120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06120");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append((double) 1.0f);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer36.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer40.setQuoteChar('0');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer40.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test06121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06121");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder36.deleteFirst(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.clear();
        java.lang.Throwable throwable68 = null;
        java.io.IOException iOException69 = new java.io.IOException("", throwable68);
        java.io.IOException iOException70 = new java.io.IOException("#4#a4#", throwable68);
        java.io.IOException iOException71 = new java.io.IOException(throwable68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray75 = new java.lang.Object[] { 1.0f, iOException71, false, 100, strBuilder74 };
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder64.appendWithSeparators(objArray75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder80.clear();
        java.lang.String str83 = strBuilder81.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder64.append((java.lang.CharSequence) str83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int90 = strBuilder87.indexOf(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder87.append("#4#a4#");
        boolean boolean93 = strBuilder86.equals(strBuilder92);
        boolean boolean94 = strBuilder36.equals(strBuilder92);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder36.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder95.append((double) 21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strBuilder97.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strTokenizer98);
    }

    @Test
    public void test06122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06122");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        int int11 = strTokenizer8.previousIndex();
        char[] charArray18 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        int int29 = strBuilder19.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher34);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher34, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer8.setIgnoredMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer8.setDelimiterChar('0');
        boolean boolean43 = strTokenizer42.isEmptyTokenAsNull();
        java.lang.String str44 = strTokenizer42.getContent();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = strTokenizer42.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
    }

    @Test
    public void test06123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06123");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        java.lang.Throwable throwable10 = null;
        java.io.IOException iOException11 = new java.io.IOException(throwable10);
        java.io.IOException iOException13 = new java.io.IOException("StrTokenizer[#4#a4#]");
        iOException11.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder6.appendWithSeparators((java.lang.Object[]) throwableArray15, ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        int int18 = strBuilder6.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test06124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06124");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert((int) (byte) 0, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteCharAt(2);
        java.lang.String str14 = strBuilder9.midString(51, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.deleteFirst(' ');
        int int20 = strBuilder17.indexOf('1', (int) '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
    }

    @Test
    public void test06125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06125");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.deleteAll(strMatcher30);
        boolean boolean32 = strBuilder5.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder5.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert((int) '\000', 36);
        int int40 = strBuilder37.lastIndexOf("10\n100.0", 15);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test06126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06126");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert((int) (byte) 0, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteCharAt(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteAll("zinekoTrtSeslaf ");
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        int int27 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendln((java.lang.Object) int27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        int int31 = strBuilder28.lastIndexOf(strMatcher29, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.deleteAll("java.io.IOException: java.io.IOException: hi!");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test06127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06127");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '1');
        java.lang.Class<?> wildcardClass3 = strTokenizer2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test06128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06128");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        java.lang.String str52 = strTokenizer51.nextToken();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        char[] charArray65 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray66 = strBuilder56.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        int int68 = strList53.indexOf((java.lang.Object) charArray66);
        char[] charArray69 = strBuilder40.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, "1false0\nfalse");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
    }

    @Test
    public void test06129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06129");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.append(stringBuffer4, (int) '4', 10);
        int int8 = strBuilder3.length();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.insert(91, '0');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 91");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test06130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06130");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(".oi.ava0.0j0.1");
        char[] charArray2 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray2);
        // The following exception was thrown during execution in test generation
        try {
            int int7 = strMatcher1.isMatch(charArray2, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(strMatcher5);
    }

    @Test
    public void test06131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06131");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("hi!");
        boolean boolean62 = strTokenizer59.isIgnoreEmptyTokens();
        java.lang.String str63 = strTokenizer59.next();
        int int64 = strList49.indexOf((java.lang.Object) strTokenizer59);
        boolean boolean65 = strList27.addAll((java.util.Collection<java.lang.String>) strList49);
        java.util.ListIterator<java.lang.String> strItor67 = strList27.listIterator(6);
        strList27.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer72.setTrimmerMatcher(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setIgnoreEmptyTokens(false);
        java.util.List<java.lang.String> strList78 = strTokenizer77.getTokenList();
        boolean boolean79 = strList78.isEmpty();
        boolean boolean80 = strList27.removeAll((java.util.Collection<java.lang.String>) strList78);
        strList27.add(0, "StrTokenizer[#4#, 4#]");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#4#a4#" + "'", str63, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test06132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06132");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert((int) (byte) 0, false);
        java.util.Iterator<java.lang.String> strItor16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendWithSeparators(strItor16, " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.appendNull();
        boolean boolean24 = strBuilder22.equals((java.lang.Object) 100.0d);
        java.lang.String str25 = strBuilder22.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.Throwable throwable33 = null;
        java.io.IOException iOException34 = new java.io.IOException("", throwable33);
        java.io.IOException iOException35 = new java.io.IOException("#4#a4#", throwable33);
        java.io.IOException iOException36 = new java.io.IOException(throwable33);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1.0f, iOException36, false, 100, strBuilder39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendWithSeparators(objArray40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer50 = strBuilder44.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder22.append(stringBuffer50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder2.append(stringBuffer50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder2.appendln((int) 'f');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(stringBuffer50);
        org.junit.Assert.assertEquals(stringBuffer50.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test06133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06133");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.write("#4#a4#", 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        writer9.write(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray57 = strBuilder49.getChars(charArray55);
        writer9.write(charArray55);
        writer9.write("java.");
        writer9.close();
        java.io.Writer writer63 = writer9.append('I');
        writer9.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(writer63);
    }

    @Test
    public void test06134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06134");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        java.lang.Class<?> wildcardClass19 = charArray13.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test06135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06135");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln(strBuilder35, (int) (short) 1, (int) ' ');
        java.io.Writer writer39 = writer9.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.insert(0, (double) (byte) 100);
        java.io.Reader reader47 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendln(false);
        java.lang.String str50 = strBuilder49.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.append(66);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        java.lang.String str56 = strBuilder55.getNullText();
        char[] charArray58 = new char[] { 'a' };
        char[] charArray59 = strBuilder55.getChars(charArray58);
        char[] charArray64 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray65 = strBuilder55.getChars(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder49.appendln((java.lang.Object) charArray65);
        writer9.write(charArray65);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "100.0false\n" + "'", str50, "100.0false\n");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test06136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06136");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append("#4#a4#");
        java.lang.String str9 = strBuilder2.leftString((int) (short) 100);
        int int11 = strBuilder2.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder2.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append("#4#a4#");
        java.lang.String str29 = strBuilder22.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(false);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        boolean boolean51 = strTokenizer48.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strTokenizer48, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln((int) (short) 10);
        boolean boolean65 = strBuilder35.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder35.reverse();
        java.lang.StringBuffer stringBuffer67 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder22.append(stringBuffer67, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder21.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder72.trim();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.insert(36, "0.012true104444444444444444444444444444444444444444444444");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 36");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#4#a4#" + "'", str9, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#4#a4#" + "'", str29, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test06137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06137");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        java.lang.String str6 = strBuilder5.getNullText();
        char[] charArray8 = new char[] { 'a' };
        char[] charArray9 = strBuilder5.getChars(charArray8);
        int int13 = strMatcher2.isMatch(charArray9, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.replaceAll(strMatcher2, "java.io.IOException: ");
        java.util.stream.IntStream intStream16 = strBuilder0.codePoints();
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        java.lang.String[] strArray28 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder0.append((java.lang.Object) strArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str32 = strTokenizer31.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setQuoteChar(' ');
        java.lang.String str35 = strTokenizer31.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer31.setIgnoredChar('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer31, ".0j");
        // The following exception was thrown during execution in test generation
        try {
            char char42 = strBuilder0.charAt((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test06138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06138");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int32 = strBuilder30.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        int int37 = strBuilder30.lastIndexOf(' ', 48);
        java.io.Reader reader38 = strBuilder30.asReader();
        boolean boolean40 = strBuilder30.contains("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.clear();
        java.lang.String str46 = strBuilder44.rightString((int) (short) -1);
        java.lang.String str48 = strBuilder44.rightString((int) (short) 100);
        int int50 = strBuilder44.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder30.appendFixedWidthPadLeft((java.lang.Object) int50, (int) '1', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder30.append((float) 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator("04", 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.clear();
        java.lang.Throwable throwable66 = null;
        java.io.IOException iOException67 = new java.io.IOException("", throwable66);
        java.io.IOException iOException68 = new java.io.IOException("#4#a4#", throwable66);
        java.io.IOException iOException69 = new java.io.IOException(throwable66);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 1.0f, iOException69, false, 100, strBuilder72 };
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder62.appendWithSeparators(objArray73, "");
        java.lang.String str77 = strBuilder62.substring(2);
        int int79 = strBuilder62.indexOf("StrTokenizer[0.012true104444444444444444444444444444444444444444444444]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder55.append(strBuilder62, 102, 55);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str77, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test06139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06139");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar('a');
        boolean boolean18 = strTokenizer15.isIgnoreEmptyTokens();
        java.lang.String str19 = strTokenizer15.next();
        int int20 = strTokenizer15.size();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4" + "'", str19, "4");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test06140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06140");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int10 = strBuilder5.indexOf(strMatcher8, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strBuilder5.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        java.io.Reader reader25 = strBuilder14.asReader();
        java.lang.String str26 = strBuilder14.toString();
        java.lang.StringBuffer stringBuffer27 = strBuilder14.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.append(stringBuffer27);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        java.lang.String str44 = strTokenizer43.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setDelimiterChar('a');
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        int int60 = strTokenizer58.size();
        java.lang.String str61 = strTokenizer58.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer58.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer58.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer43.setTrimmerMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer43.getDelimiterMatcher();
        int int67 = strBuilder28.lastIndexOf(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(stringBuffer27);
        org.junit.Assert.assertEquals(stringBuffer27.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#4#" + "'", str61, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test06141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06141");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int11 = strBuilder6.indexOf(strMatcher9, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder6.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.appendPadding((int) (short) -1, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setDelimiterChar(' ');
        boolean boolean20 = strTokenizer19.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getDelimiterMatcher();
        int int22 = strBuilder6.lastIndexOf(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("eslaf", strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test06142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06142");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor19 = strList12.listIterator();
        int int20 = strList12.size();
        int int21 = strList12.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor23 = strList12.listIterator((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
    }

    @Test
    public void test06143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06143");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        int int30 = reader13.read();
        boolean boolean31 = reader13.markSupported();
        reader13.close();
        reader13.reset();
        int int34 = reader13.read();
        reader13.close();
        reader13.reset();
        int int37 = reader13.read();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test06144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06144");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(strMatcher10, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        int int20 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendln(stringBuffer21, (int) (byte) 1, (int) (byte) 1);
        boolean boolean25 = strBuilder5.equalsIgnoreCase(strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder18.insert((int) (byte) 1, (double) 1L);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test06145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06145");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        char[] charArray40 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll("hi!", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("true\n", strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.replace(strMatcher47, "java.io.IOException: StrTokenizer[not tokenized yet]", 0, 27, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer56.setDelimiterString("#4#a4#");
        java.lang.String str60 = strTokenizer56.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append("#4#a4#");
        java.lang.String str68 = strBuilder61.leftString((int) (short) 100);
        int int70 = strBuilder61.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder61.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder61.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int89 = strBuilder86.lastIndexOf(strMatcher87, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder61.replaceFirst(strMatcher87, "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer56.setIgnoredMatcher(strMatcher87);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder53.replaceAll(strMatcher87, "1false0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder30.replaceAll(strMatcher87, ".0jav");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "#4#a4#" + "'", str68, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test06146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06146");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.deleteFirst(strMatcher20);
        char[] charArray22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append(charArray22, 27, 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.append("4");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.appendln((float) '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.trim();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test06147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06147");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        java.lang.String str17 = strTokenizer8.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.replace(strMatcher41, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int48 = strBuilder30.lastIndexOf(strMatcher41, (int) (short) 100);
        int int50 = strBuilder25.lastIndexOf(strMatcher41, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer18.setDelimiterMatcher(strMatcher41);
        java.lang.String str52 = strTokenizer51.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer53.add("22.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test06148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06148");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        java.lang.String str20 = strList12.remove((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        java.lang.Object[] objArray22 = strList12.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.append(false);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        boolean boolean44 = strTokenizer41.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder28.appendFixedWidthPadRight((java.lang.Object) strTokenizer41, 10, ' ');
        int int48 = strTokenizer41.previousIndex();
        boolean boolean49 = strTokenizer41.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer41.reset("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer41.setIgnoredMatcher(strMatcher53);
        java.lang.String[] strArray55 = strTokenizer41.getTokenArray();
        java.lang.Comparable<java.lang.String>[] strComparableArray56 = strList12.toArray((java.lang.Comparable<java.lang.String>[]) strArray55);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strComparableArray56);
    }

    @Test
    public void test06149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06149");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getIgnoredMatcher();
        java.lang.String str16 = strTokenizer14.getContent();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = strTokenizer14.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#4#a4#" + "'", str16, "#4#a4#");
    }

    @Test
    public void test06150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06150");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder30.appendSeparator('4', ' ');
        java.util.stream.IntStream intStream46 = strBuilder45.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.append(false);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setDelimiterString("hi!");
        boolean boolean68 = strTokenizer65.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.appendFixedWidthPadRight((java.lang.Object) strTokenizer65, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int75 = strBuilder72.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.appendln((int) (short) 10);
        boolean boolean82 = strBuilder52.equalsIgnoreCase(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder77.insert((int) (byte) 1, 'a');
        char char87 = strBuilder77.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder77.deleteAll("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder45.appendln(strBuilder77);
        int int93 = strBuilder77.lastIndexOf("trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n", (int) '1');
        boolean boolean95 = strBuilder77.endsWith("#4#a4#1false0\nfalse");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + char87 + "' != '" + ' ' + "'", char87 == ' ');
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test06151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06151");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.trim();
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("hi!");
        boolean boolean29 = strTokenizer26.isIgnoreEmptyTokens();
        java.lang.String str30 = strTokenizer26.next();
        int int31 = strList16.indexOf((java.lang.Object) strTokenizer26);
        java.util.ListIterator<java.lang.String> strItor33 = strList16.listIterator((int) (byte) 0);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("hi!");
        java.lang.String str45 = strTokenizer44.nextToken();
        java.util.List<java.lang.String> strList46 = strTokenizer44.getTokenList();
        boolean boolean48 = strList46.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str51 = strTokenizer50.getContent();
        boolean boolean52 = strList46.equals((java.lang.Object) strTokenizer50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean54 = strList46.equals((java.lang.Object) strMatcher53);
        java.util.stream.Stream<java.lang.String> strStream55 = strList46.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.insert(0, (double) (byte) 100);
        java.io.Reader reader63 = strBuilder62.asReader();
        boolean boolean64 = strList46.remove((java.lang.Object) reader63);
        strList46.clear();
        boolean boolean66 = strList16.addAll((java.util.Collection<java.lang.String>) strList46);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strBuilder9.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#4#a4#" + "'", str45, "#4#a4#");
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer68);
    }

    @Test
    public void test06152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06152");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setDelimiterString("hi!");
        boolean boolean18 = strTokenizer15.isIgnoreEmptyTokens();
        java.lang.String str19 = strTokenizer15.next();
        int int20 = strList5.indexOf((java.lang.Object) strTokenizer15);
        java.util.ListIterator<java.lang.String> strItor22 = strList5.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor23 = strList5.iterator();
        java.lang.String[] strArray27 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        java.lang.String str42 = strTokenizer38.next();
        int int43 = strList28.indexOf((java.lang.Object) strTokenizer38);
        boolean boolean44 = strList5.addAll((java.util.Collection<java.lang.String>) strList28);
        java.util.ListIterator<java.lang.String> strItor45 = strList28.listIterator();
        boolean boolean47 = strList28.add("");
        int int48 = strList28.size();
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("hi!");
        boolean boolean60 = strTokenizer57.hasNext();
        java.util.List<java.lang.String> strList61 = strTokenizer57.getTokenList();
        boolean boolean62 = strList28.removeAll((java.util.Collection<java.lang.String>) strList61);
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException67 = new java.io.IOException("0.012true104444444444444444444444444444444444444444444444  \n");
        iOException65.addSuppressed((java.lang.Throwable) iOException67);
        boolean boolean69 = strList28.contains((java.lang.Object) iOException65);
        java.io.IOException iOException70 = new java.io.IOException((java.lang.Throwable) iOException65);
        java.io.IOException iOException71 = new java.io.IOException("0\nzinekoTrtSeslaf ", (java.lang.Throwable) iOException70);
        java.lang.Throwable[] throwableArray72 = iOException70.getSuppressed();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#4#a4#" + "'", str42, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test06153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06153");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setDelimiterString("hi!");
        boolean boolean18 = strTokenizer15.isIgnoreEmptyTokens();
        java.lang.String str19 = strTokenizer15.next();
        int int20 = strList5.indexOf((java.lang.Object) strTokenizer15);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        int int43 = strBuilder33.indexOf(strMatcher41);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher41, strMatcher56);
        boolean boolean58 = strList5.equals((java.lang.Object) strMatcher56);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("hi!");
        boolean boolean70 = strTokenizer67.hasNext();
        java.util.List<java.lang.String> strList71 = strTokenizer67.getTokenList();
        java.lang.String[] strArray72 = strTokenizer67.getTokenArray();
        java.lang.CharSequence[] charSequenceArray73 = strList5.toArray((java.lang.CharSequence[]) strArray72);
        java.util.Spliterator<java.lang.String> strSpliterator74 = strList5.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator75 = strList5.spliterator();
        java.io.IOException iOException77 = new java.io.IOException("a10\n");
        java.lang.Throwable[] throwableArray78 = iOException77.getSuppressed();
        boolean boolean79 = strList5.remove((java.lang.Object) iOException77);
        java.io.IOException iOException80 = new java.io.IOException("35.0\n19", (java.lang.Throwable) iOException77);
        java.lang.Throwable[] throwableArray81 = iOException80.getSuppressed();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertNotNull(strSpliterator74);
        org.junit.Assert.assertNotNull(strSpliterator75);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(throwableArray81);
    }

    @Test
    public void test06154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06154");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendSeparator(" a10\n", (int) ' ');
        java.lang.String str26 = strBuilder25.getNewLineText();
        int int28 = strBuilder25.lastIndexOf("");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray31 = strBuilder25.toCharArray(60, 51);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 7 + "'", int28 == 7);
    }

    @Test
    public void test06155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06155");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        int int24 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, (int) '4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder11.replaceAll(" ", "1false0\n");
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher44, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.replaceFirst(strMatcher48, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadLeft(33, 30, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("hi!");
        java.lang.String str60 = strBuilder58.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        java.lang.String str64 = strBuilder63.getNullText();
        char[] charArray66 = new char[] { 'a' };
        char[] charArray67 = strBuilder63.getChars(charArray66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder58.append((java.lang.Object) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.replaceAll('#', ' ');
        java.util.stream.IntStream intStream72 = strBuilder58.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder58.appendSeparator('#');
        boolean boolean75 = strBuilder74.isEmpty();
        char[] charArray76 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendln(charArray76);
        char[] charArray80 = strBuilder51.getChars(charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.deleteFirst("hi!");
        java.lang.String str84 = strBuilder83.getNullText();
        char[] charArray86 = new char[] { 'a' };
        char[] charArray87 = strBuilder83.getChars(charArray86);
        char[] charArray92 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray93 = strBuilder83.getChars(charArray92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray92);
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray92);
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher95, strMatcher96);
        java.lang.String str98 = strTokenizer97.nextToken();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(intStream72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]111111111111111111111111111133");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]111111111111111111111111111133");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[3, 5, ., 0, \n, 4, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t, 1, f, a, l, s, e, 0, \n, t, o, k, e, n, i, z, e, d, 1, f, a, l, s, e, 0, \n, y, e, t, ], 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "35.0\n" + "'", str98, "35.0\n");
    }

    @Test
    public void test06156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06156");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append(false);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("hi!");
        boolean boolean35 = strTokenizer32.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) strTokenizer32, 10, ' ');
        java.lang.String str40 = strBuilder19.leftString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder19.append("aa", (int) (short) 1, 0);
        char[] charArray45 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a');
        int int48 = strTokenizer47.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        boolean boolean50 = strBuilder13.equals(strBuilder44);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder13.appendln("#4#a4#java.io.IOException: 10.0\n-1        ", 100, 63);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test06157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06157");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteCharAt((int) '\000');
        char[] charArray12 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        char[] charArray22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln(charArray22);
        boolean boolean24 = strBuilder21.isEmpty();
        java.lang.String str26 = strBuilder21.rightString((int) 'a');
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder21.replaceAll(strMatcher39, "a");
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        java.lang.String str53 = strTokenizer52.nextToken();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        java.lang.String str58 = strBuilder57.getNullText();
        char[] charArray60 = new char[] { 'a' };
        char[] charArray61 = strBuilder57.getChars(charArray60);
        char[] charArray66 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray67 = strBuilder57.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray67);
        int int69 = strList54.indexOf((java.lang.Object) charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("1.0", strMatcher39, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray12);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "rue");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "rue");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[r, u, e]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10\n\n" + "'", str26, "10\n\n");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
    }

    @Test
    public void test06158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06158");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        boolean boolean60 = strList27.retainAll((java.util.Collection<java.lang.String>) strList57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append("#4#a4#");
        java.lang.String str68 = strBuilder61.leftString((int) (short) 100);
        int int70 = strBuilder61.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder61.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder61.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int89 = strBuilder86.lastIndexOf(strMatcher87, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder61.replaceFirst(strMatcher87, "#4#a4#");
        boolean boolean92 = strList27.remove((java.lang.Object) strBuilder91);
        java.lang.Object[] objArray93 = strList27.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator94 = strList27.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator95 = strList27.spliterator();
        java.lang.Object[] objArray96 = strList27.toArray();
        java.util.stream.Stream<java.lang.String> strStream97 = strList27.parallelStream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "#4#a4#" + "'", str68, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertNotNull(strSpliterator94);
        org.junit.Assert.assertNotNull(strSpliterator95);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]");
        org.junit.Assert.assertNotNull(strStream97);
    }

    @Test
    public void test06159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06159");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        int int54 = strBuilder52.lastIndexOf("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        java.lang.Throwable throwable62 = null;
        java.io.IOException iOException63 = new java.io.IOException("", throwable62);
        java.io.IOException iOException64 = new java.io.IOException("#4#a4#", throwable62);
        java.io.IOException iOException65 = new java.io.IOException(throwable62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1.0f, iOException65, false, 100, strBuilder68 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.appendWithSeparators(objArray69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder73.appendln(100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.deleteAll("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder52.appendFixedWidthPadLeft((java.lang.Object) strBuilder85, (int) (short) -1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder40.appendln(strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder40.insert(8, (double) '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test06160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06160");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendFixedWidthPadLeft(1, 32, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNewLine();
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        char[] charArray52 = strBuilder42.getChars(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder29.appendln(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer55);
    }

    @Test
    public void test06161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06161");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        writer9.write((int) (short) 1);
        writer9.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str18 = strBuilder16.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.append((java.lang.Object) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.append(100L);
        int int31 = strBuilder28.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        java.lang.Throwable throwable39 = null;
        java.io.IOException iOException40 = new java.io.IOException("", throwable39);
        java.io.IOException iOException41 = new java.io.IOException("#4#a4#", throwable39);
        java.io.IOException iOException42 = new java.io.IOException(throwable39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 1.0f, iOException42, false, 100, strBuilder45 };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendWithSeparators(objArray46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.deleteAll('a');
        boolean boolean60 = strBuilder59.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        java.lang.String str76 = strBuilder75.getNullText();
        char[] charArray78 = new char[] { 'a' };
        char[] charArray79 = strBuilder75.getChars(charArray78);
        char[] charArray84 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray85 = strBuilder75.getChars(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder66.appendln(charArray84, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder59.appendln(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder28.appendln(charArray84);
        char[] charArray93 = strBuilder28.toCharArray();
        writer9.write(charArray93);
        java.io.Writer writer96 = writer9.append(' ');
        char[] charArray97 = null;
        writer96.write(charArray97);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "100a4 4\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "100a4 4\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[1, 0, 0, a, 4,  , 4, \n]");
        org.junit.Assert.assertNotNull(writer96);
    }

    @Test
    public void test06162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06162");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendln(10L);
        int int68 = strBuilder62.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder59.appendln(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder59.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder59.insert(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder32.append(strBuilder59);
        java.io.IOException iOException80 = new java.io.IOException("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendFixedWidthPadRight((java.lang.Object) iOException80, 4, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.append((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder78.replace(38, (int) '.', "aa");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder78.setNullText("true10\n\na4 4");
        int int92 = strBuilder91.capacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 206 + "'", int92 == 206);
    }

    @Test
    public void test06163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06163");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        strList27.add((int) (byte) 1, "0.012true104444444444444444444444444444444444444444444444  \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.deleteAll(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder65.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.trim();
        java.lang.Object[] objArray84 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.appendAll(objArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder71.appendAll(objArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.setLength((int) ' ');
        java.io.Reader reader89 = strBuilder86.asReader();
        int int90 = strList27.indexOf((java.lang.Object) strBuilder86);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator91 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList27.replaceAll(strUnaryOperator91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(reader89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test06164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06164");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoreEmptyTokens(false);
        boolean boolean43 = strTokenizer42.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder15.appendAll((java.lang.Object[]) strArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder15.deleteAll("1.0java.io.IOExceptionfalse1001.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder15.setNewLineText("35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln("#");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test06165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06165");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("0.012true104444444444444444444444444444444444444444444444  \n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test06166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06166");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        java.lang.Throwable throwable15 = null;
        java.io.IOException iOException16 = new java.io.IOException("", throwable15);
        java.io.IOException iOException17 = new java.io.IOException("#4#a4#", throwable15);
        java.io.IOException iOException18 = new java.io.IOException(throwable15);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1.0f, iOException18, false, 100, strBuilder21 };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendWithSeparators(objArray22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer32 = strBuilder26.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder7.append(stringBuffer32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) 13);
        java.lang.String str37 = strBuilder35.leftString(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln("java.io.IOException: java.io.IOException: hi!", (int) (byte) 1, 21);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.reverse();
        java.io.Reader reader43 = strBuilder41.asReader();
        int int44 = reader43.read();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(stringBuffer32);
        org.junit.Assert.assertEquals(stringBuffer32.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1.0" + "'", str37, "1.0");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
    }

    @Test
    public void test06167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06167");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt((int) '\000');
        java.lang.String str43 = strBuilder42.getNewLineText();
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        java.lang.String str55 = strTokenizer54.nextToken();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setTrimmerMatcher(strMatcher57);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        int int70 = strMatcher57.isMatch(charArray65, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int76 = strBuilder73.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.setDelimiterString("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder42.appendAll((java.util.Iterator<java.lang.String>) strTokenizer78);
        int int82 = strBuilder42.size();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#4#a4#" + "'", str55, "#4#a4#");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 16 + "'", int82 == 16);
    }

    @Test
    public void test06168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06168");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(false);
        java.io.Writer writer23 = strBuilder22.asWriter();
        writer23.write(52);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder31.appendln(charArray49, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "0\nzinekoTrtSeslaf ");
        writer23.write(charArray49, 0, (int) '\000');
        java.io.Writer writer62 = writer23.append('3');
        writer62.write("\nzinekoTrtSeslaf \n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer62);
    }

    @Test
    public void test06169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06169");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        java.lang.String str8 = strBuilder5.leftString((int) '4');
        java.lang.String str9 = strBuilder5.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) '#');
        java.util.stream.IntStream intStream17 = strBuilder14.chars();
        boolean boolean19 = strBuilder14.contains('1');
        java.lang.String str21 = strBuilder14.substring((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.append((java.lang.Object) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNewLine();
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        char[] charArray43 = strBuilder33.getChars(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.clear();
        java.lang.Throwable throwable51 = null;
        java.io.IOException iOException52 = new java.io.IOException("", throwable51);
        java.io.IOException iOException53 = new java.io.IOException("#4#a4#", throwable51);
        java.io.IOException iOException54 = new java.io.IOException(throwable51);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray58 = new java.lang.Object[] { 1.0f, iOException54, false, 100, strBuilder57 };
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder47.appendWithSeparators(objArray58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int76 = strBuilder74.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder22.append(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, "zer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "false" + "'", str9, "false");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "35\n" + "'", str21, "35\n");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher83);
    }

    @Test
    public void test06170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06170");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder9.setNullText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendFixedWidthPadLeft(60, 39, 'a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test06171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06171");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator("100.01210\n");
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        int int28 = strTokenizer25.previousIndex();
        char[] charArray35 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        int int46 = strBuilder36.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher51, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer25.setIgnoredMatcher(strMatcher55);
        int int59 = strBuilder2.indexOf(strMatcher55, (int) '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder2.appendln("zinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.setCharAt(37, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int78 = strBuilder75.indexOf(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder74.appendln(strBuilder82);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.deleteAll(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.appendSeparator(" a10\n", (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.deleteCharAt((int) (byte) 1);
        boolean boolean93 = strBuilder64.equalsIgnoreCase(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test06172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06172");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.replaceAll("1false0\n", " ");
        java.lang.String str17 = strBuilder16.toString();
        java.lang.StringBuffer stringBuffer18 = strBuilder16.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strBuilder20.asTokenizer();
        boolean boolean22 = strTokenizer21.hasNext();
        java.lang.String str23 = strTokenizer21.nextToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer21.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(stringBuffer18);
        org.junit.Assert.assertEquals(stringBuffer18.toString(), "1");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1true" + "'", str23, "1true");
    }

    @Test
    public void test06173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06173");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.append(stringBuffer24);
        java.io.Writer writer26 = strBuilder25.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        java.lang.String str30 = strBuilder29.getNullText();
        char[] charArray32 = new char[] { 'a' };
        char[] charArray33 = strBuilder29.getChars(charArray32);
        char[] charArray38 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray39 = strBuilder29.getChars(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        writer26.write(charArray38);
        writer26.close();
        writer26.close();
        java.io.Writer writer45 = writer26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) writer45, 49, ' ');
        java.lang.Object obj49 = null;
        boolean boolean50 = strBuilder48.equals(obj49);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test06174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06174");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.replace(strMatcher20, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll(' ');
        boolean boolean36 = strBuilder27.equals((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder27.deleteAll("100.0false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[no", ".0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test06175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06175");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int8 = strBuilder5.indexOf(strMatcher7);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        java.lang.String str21 = strBuilder5.midString((int) (byte) 1, (-1));
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.replaceFirst(strMatcher34, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendSeparator("", "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.deleteAll(strMatcher43);
        int int46 = strBuilder5.lastIndexOf(strMatcher43, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer2.setQuoteMatcher(strMatcher43);
        boolean boolean48 = strTokenizer2.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer2.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
    }

    @Test
    public void test06176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06176");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(true);
        int int11 = strBuilder5.lastIndexOf("java.io.IOException: StrTokenizer[#4#a4#]", 4);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        java.lang.String str23 = strTokenizer22.nextToken();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.setTrimmerMatcher(strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        java.lang.String[] strArray28 = strTokenizer26.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder5.appendWithSeparators((java.lang.Object[]) strArray28, "");
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        int int53 = strBuilder43.indexOf(strMatcher51);
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher51, strMatcher66);
        char[] charArray68 = strBuilder5.getChars(charArray37);
        java.lang.String str71 = strBuilder5.midString(47, 74);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#4#a4#" + "'", str23, "#4#a4#");
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "true\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "true\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[t, r, u, e, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test06177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06177");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int1 = strTokenizer0.nextIndex();
        boolean boolean2 = strTokenizer0.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer0.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("hi!");
        java.lang.String str7 = strBuilder6.getNullText();
        char[] charArray9 = new char[] { 'a' };
        char[] charArray10 = strBuilder6.getChars(charArray9);
        char[] charArray15 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray16 = strBuilder6.getChars(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(' ');
        java.util.stream.IntStream intStream23 = strBuilder22.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int26 = strBuilder22.lastIndexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int41 = strBuilder38.lastIndexOf(strMatcher39, (int) (short) -1);
        boolean boolean42 = strBuilder22.contains(strMatcher39);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher56, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher39, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ', 'a');
        // The following exception was thrown during execution in test generation
        try {
            int int69 = strMatcher3.isMatch(charArray15, (int) '1', 77, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher60);
    }

    @Test
    public void test06178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06178");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.trim();
        java.lang.Object[] objArray70 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendAll(objArray70);
        char[] charArray72 = strBuilder68.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray72);
        boolean boolean74 = strList4.equals((java.lang.Object) charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setIgnoredChar('0');
        int int79 = strTokenizer78.previousIndex();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test06179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06179");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append("#4#a4#");
        java.lang.String str20 = strBuilder13.leftString((int) (short) 100);
        int int22 = strBuilder13.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder13.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder13.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int41 = strBuilder38.lastIndexOf(strMatcher39, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder13.replaceFirst(strMatcher39, "#4#a4#");
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        int int55 = strBuilder43.lastIndexOf(strMatcher53, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher53);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer56.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 15 + "'", int55 == 15);
    }

    @Test
    public void test06180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06180");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        java.lang.StringBuffer stringBuffer5 = strBuilder3.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.clear();
        char[] charArray15 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder8.appendln(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll("hi!", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendPadding((int) 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        char[] charArray32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(charArray32);
        boolean boolean34 = strBuilder31.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        boolean boolean40 = strBuilder39.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        java.lang.String str46 = strBuilder45.getNullText();
        char[] charArray48 = new char[] { 'a' };
        char[] charArray49 = strBuilder45.getChars(charArray48);
        int int51 = strMatcher42.isMatch(charArray49, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.append(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder31.insert((int) (byte) 1, charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln("StrTokenizer[#4#a4#]", 0, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.insert(4, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder23.appendFixedWidthPadLeft((java.lang.Object) true, 33, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder3.append(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(stringBuffer5);
        org.junit.Assert.assertEquals(stringBuffer5.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test06181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06181");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        java.io.IOException iOException5 = new java.io.IOException("hi!", throwable3);
        java.io.IOException iOException6 = new java.io.IOException("hi!", throwable3);
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        java.lang.Throwable[] throwableArray8 = iOException6.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test06182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06182");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.appendln("java.io.IOException: ");
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder14.replaceFirst(strMatcher25, "#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.deleteAll(strMatcher32);
        boolean boolean34 = strBuilder14.contains(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        java.lang.String str39 = strBuilder37.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        java.lang.String str43 = strBuilder42.getNullText();
        char[] charArray45 = new char[] { 'a' };
        char[] charArray46 = strBuilder42.getChars(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder37.append((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder37.replaceAll('#', ' ');
        java.util.stream.IntStream intStream51 = strBuilder37.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder37.appendSeparator('#');
        boolean boolean54 = strBuilder53.isEmpty();
        char[] charArray55 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder14.appendFixedWidthPadRight((java.lang.Object) strBuilder58, 27, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder14.appendln((long) 8);
        int int66 = strBuilder14.lastIndexOf("1.0java.io.IOExceptionfalse1001.0", 74);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder14.insert((int) (byte) 100, "slaf \n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(intStream51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test06183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06183");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setDelimiterString("hi!");
        java.lang.String str15 = strTokenizer10.previous();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        char[] charArray24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(charArray24);
        boolean boolean26 = strBuilder23.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        boolean boolean32 = strBuilder31.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        java.lang.String str38 = strBuilder37.getNullText();
        char[] charArray40 = new char[] { 'a' };
        char[] charArray41 = strBuilder37.getChars(charArray40);
        int int43 = strMatcher34.isMatch(charArray41, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder23.insert((int) (byte) 1, charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ', '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer10.reset(charArray41);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#4#a4#" + "'", str15, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
    }

    @Test
    public void test06184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06184");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("", throwable2);
        java.io.IOException iOException4 = new java.io.IOException("hi!", throwable2);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        java.lang.String str24 = strTokenizer20.next();
        int int25 = strList10.indexOf((java.lang.Object) strTokenizer20);
        java.util.ListIterator<java.lang.String> strItor27 = strList10.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor28 = strList10.iterator();
        java.lang.String[] strArray32 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        java.lang.String str47 = strTokenizer43.next();
        int int48 = strList33.indexOf((java.lang.Object) strTokenizer43);
        boolean boolean49 = strList10.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.ListIterator<java.lang.String> strItor50 = strList33.listIterator();
        boolean boolean52 = strList33.add("");
        int int53 = strList33.size();
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setDelimiterString("hi!");
        boolean boolean65 = strTokenizer62.hasNext();
        java.util.List<java.lang.String> strList66 = strTokenizer62.getTokenList();
        boolean boolean67 = strList33.removeAll((java.util.Collection<java.lang.String>) strList66);
        java.lang.Throwable throwable69 = null;
        java.io.IOException iOException70 = new java.io.IOException("", throwable69);
        java.io.IOException iOException72 = new java.io.IOException("0.012true104444444444444444444444444444444444444444444444  \n");
        iOException70.addSuppressed((java.lang.Throwable) iOException72);
        boolean boolean74 = strList33.contains((java.lang.Object) iOException70);
        java.io.IOException iOException76 = new java.io.IOException("StrTokenizer[not tokenized yet]");
        java.io.IOException iOException77 = new java.io.IOException((java.lang.Throwable) iOException76);
        iOException70.addSuppressed((java.lang.Throwable) iOException76);
        iOException4.addSuppressed((java.lang.Throwable) iOException70);
        java.io.IOException iOException80 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException81 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.String str82 = iOException81.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "java.io.IOException: java.io.IOException: hi!" + "'", str82, "java.io.IOException: java.io.IOException: hi!");
    }

    @Test
    public void test06185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06185");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert(1, (float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.setNullText("");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test06186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06186");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.String str7 = strTokenizer6.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterChar('#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strTokenizer6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test06187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06187");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "StrTokenizer[100.0\n]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '.', 'c');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test06188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06188");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        java.lang.String str24 = strTokenizer20.next();
        int int25 = strList10.indexOf((java.lang.Object) strTokenizer20);
        java.util.ListIterator<java.lang.String> strItor27 = strList10.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor28 = strList10.iterator();
        java.lang.String[] strArray32 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        java.lang.String str47 = strTokenizer43.next();
        int int48 = strList33.indexOf((java.lang.Object) strTokenizer43);
        boolean boolean49 = strList10.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.ListIterator<java.lang.String> strItor50 = strList33.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        int int61 = strBuilder51.indexOf(strMatcher59);
        int int62 = strList33.indexOf((java.lang.Object) strBuilder51);
        int int63 = strList33.size();
        boolean boolean64 = strList4.addAll((java.util.Collection<java.lang.String>) strList33);
        strList33.add(0, "0java.io.IOExceptionfalse100");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList70 = strList33.subList(3, 91);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 91");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 3 + "'", int63 == 3);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test06189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06189");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.reverse();
        java.lang.StringBuffer stringBuffer75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln(stringBuffer75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendPadding((int) '4', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceAll('e', '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test06190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06190");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int14 = strBuilder11.lastIndexOf(strMatcher12, (int) (short) -1);
        java.lang.String str16 = strBuilder11.leftString(0);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test06191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06191");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        java.io.Reader reader7 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendln(false);
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(66);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.appendFixedWidthPadRight(15, 0, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.appendSeparator('I', 'I');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.delete((int) '0', 190);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "100.0false\n" + "'", str10, "100.0false\n");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test06192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06192");
        char[] charArray7 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        java.lang.String str12 = strTokenizer11.nextToken();
        java.util.List<java.lang.String> strList13 = strTokenizer11.getTokenList();
        boolean boolean15 = strList13.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str18 = strTokenizer17.getContent();
        boolean boolean19 = strList13.equals((java.lang.Object) strTokenizer17);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean21 = strList13.equals((java.lang.Object) strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("0\nzinekoTrtSeslaf ", strMatcher20, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.stringMatcher(".0j");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("ionfalse1001.0\n\n4\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(" \n", strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.setTrimmerMatcher(strMatcher30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = strTokenizer32.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test06193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06193");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int23 = strBuilder9.lastIndexOf(strMatcher21, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.appendSeparator("StrTokenizer[#4#a4#]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strBuilder50.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder9.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder9.appendln(true);
        java.io.Writer writer55 = strBuilder54.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            writer55.write("java.io.IOException: eptionfalse1001.0\n35.0\n1false0\n\n", 33, 95);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(writer55);
    }

    @Test
    public void test06194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06194");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String str10 = strBuilder0.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.insert(2, 13);
        int int16 = strBuilder0.lastIndexOf("java.io.IOException", 2);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        java.lang.String str28 = strTokenizer27.nextToken();
        java.util.List<java.lang.String> strList29 = strTokenizer27.getTokenList();
        boolean boolean31 = strList29.add("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((long) '#');
        java.util.stream.IntStream intStream39 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("10\n\n");
        java.lang.String[] strArray45 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.isIgnoreEmptyTokens();
        java.lang.String str60 = strTokenizer56.next();
        int int61 = strList46.indexOf((java.lang.Object) strTokenizer56);
        java.util.ListIterator<java.lang.String> strItor63 = strList46.listIterator((int) (byte) 0);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.setDelimiterString("hi!");
        boolean boolean81 = strTokenizer78.isIgnoreEmptyTokens();
        java.lang.String str82 = strTokenizer78.next();
        int int83 = strList68.indexOf((java.lang.Object) strTokenizer78);
        java.util.ListIterator<java.lang.String> strItor85 = strList68.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor86 = strList68.iterator();
        boolean boolean87 = strList46.removeAll((java.util.Collection<java.lang.String>) strList68);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder41.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList46, "10\n\n");
        boolean boolean90 = strList29.retainAll((java.util.Collection<java.lang.String>) strList46);
        java.util.Iterator<java.lang.String> strItor91 = strList46.iterator();
        java.lang.Object[] objArray92 = strList46.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder0.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder0.appendln((long) 51);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder96.setNewLineText("\n59\n97\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#4#a4#" + "'", str10, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#4#a4#" + "'", str28, "#4#a4#");
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "#4#a4#" + "'", str60, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "#4#a4#" + "'", str82, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strItor85);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test06195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06195");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int23 = strBuilder18.indexOf(strMatcher21, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.replace(strMatcher21, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        java.lang.String str45 = strBuilder29.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        int int54 = strBuilder48.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.append((java.lang.Object) strBuilder60);
        boolean boolean62 = strBuilder10.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder10.ensureCapacity(48);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert(1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendPadding((int) (short) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder70.ensureCapacity(2);
        java.lang.StringBuffer stringBuffer79 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder64.appendln(stringBuffer79);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder64.replace(7, 27, "100.0false\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.appendln("va.io.IOExceptionfalse1001.", 63, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(stringBuffer79);
        org.junit.Assert.assertEquals(stringBuffer79.toString(), "10\n4444444444");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test06196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06196");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.trim();
        java.lang.Object[] objArray39 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendAll(objArray39);
        char[] charArray41 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder26.replaceFirst("#4#a4#", "0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.replace(38, (int) '3', "0\n4444444444#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNull();
        int int57 = strBuilder53.indexOf('\000', (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder45.appendln((java.lang.Object) strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test06197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06197");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append(49);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.replace(strMatcher17, "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n", 0, 16, (int) (byte) 100);
        java.lang.StringBuffer stringBuffer23 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(91);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "\n0\n4\n0149");
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test06198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06198");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        char[] charArray27 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray28 = strBuilder18.getChars(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int42 = strBuilder39.lastIndexOf(strMatcher40, (int) (short) 10);
        boolean boolean43 = strBuilder18.contains(strMatcher40);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        java.lang.String str55 = strTokenizer54.nextToken();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setTrimmerMatcher(strMatcher57);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        int int70 = strMatcher57.isMatch(charArray65, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher40, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer14.setTrimmerMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterChar('1');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#4#a4#" + "'", str55, "#4#a4#");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
    }

    @Test
    public void test06199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06199");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.ensureCapacity(39);
        boolean boolean11 = strBuilder9.endsWith(".0jav");
        char[] charArray16 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray18 = strBuilder9.getChars(charArray16);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        java.lang.String str30 = strTokenizer29.nextToken();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        char[] charArray43 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray44 = strBuilder34.getChars(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        int int46 = strList31.indexOf((java.lang.Object) charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int52 = strTokenizer51.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer51.setTrimmerMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher50, strMatcher54);
        java.util.List<java.lang.String> strList57 = strTokenizer56.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream58 = strList57.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor60 = strList57.listIterator(51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 51");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strStream58);
    }

    @Test
    public void test06200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06200");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('I', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadRight((int) 'a', 52, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.append(".0java.io.IOExceptionfalse1000");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("59.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.deleteFirst(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.setNewLineText("10\n\n");
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        java.lang.String str42 = strTokenizer38.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer38.getIgnoredMatcher();
        int int45 = strBuilder26.indexOf(strMatcher43, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strMatcher43, 30, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder20.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendln(false);
        java.io.Writer writer52 = strBuilder20.asWriter();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#4#a4#" + "'", str42, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(writer52);
    }

    @Test
    public void test06201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06201");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append("#4#a4#");
        java.lang.String str20 = strBuilder13.leftString((int) (short) 100);
        int int22 = strBuilder13.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder13.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder13.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int41 = strBuilder38.lastIndexOf(strMatcher39, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder13.replaceFirst(strMatcher39, "#4#a4#");
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        int int55 = strBuilder43.lastIndexOf(strMatcher53, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray8);
        java.lang.String str59 = strTokenizer58.toString();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 15 + "'", int55 == 15);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str59, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test06202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06202");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        int int27 = strList12.indexOf((java.lang.Object) charArray25);
        boolean boolean28 = strList12.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream29 = strList12.parallelStream();
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        java.lang.String str42 = strTokenizer41.nextToken();
        java.util.List<java.lang.String> strList43 = strTokenizer41.getTokenList();
        boolean boolean45 = strList43.add("hi!");
        java.util.Iterator<java.lang.String> strItor46 = strList43.iterator();
        java.util.stream.Stream<java.lang.String> strStream47 = strList43.stream();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.clear();
        java.lang.Throwable throwable55 = null;
        java.io.IOException iOException56 = new java.io.IOException("", throwable55);
        java.io.IOException iOException57 = new java.io.IOException("#4#a4#", throwable55);
        java.io.IOException iOException58 = new java.io.IOException(throwable55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 1.0f, iOException58, false, 100, strBuilder61 };
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder51.appendWithSeparators(objArray62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder66.append(true);
        int int77 = strBuilder74.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder74.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.insert(1, (float) (short) -1);
        java.io.Writer writer84 = strBuilder83.asWriter();
        int int85 = strList43.indexOf((java.lang.Object) writer84);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = strList12.addAll(64, (java.util.Collection<java.lang.String>) strList43);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 64, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#4#a4#" + "'", str42, "#4#a4#");
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 4 + "'", int77 == 4);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(writer84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test06203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06203");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.Iterator<java.lang.String> strItor44 = strList4.iterator();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("hi!");
        boolean boolean62 = strTokenizer59.isIgnoreEmptyTokens();
        java.lang.String str63 = strTokenizer59.next();
        int int64 = strList49.indexOf((java.lang.Object) strTokenizer59);
        java.util.ListIterator<java.lang.String> strItor66 = strList49.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor67 = strList49.iterator();
        java.lang.String[] strArray71 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.setDelimiterString("hi!");
        boolean boolean85 = strTokenizer82.isIgnoreEmptyTokens();
        java.lang.String str86 = strTokenizer82.next();
        int int87 = strList72.indexOf((java.lang.Object) strTokenizer82);
        boolean boolean88 = strList49.addAll((java.util.Collection<java.lang.String>) strList72);
        java.util.ListIterator<java.lang.String> strItor89 = strList72.listIterator();
        boolean boolean91 = strList72.add("");
        int int92 = strList72.size();
        boolean boolean93 = strList4.retainAll((java.util.Collection<java.lang.String>) strList72);
        int int94 = strList72.size();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#4#a4#" + "'", str63, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "#4#a4#" + "'", str86, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 4 + "'", int92 == 4);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 4 + "'", int94 == 4);
    }

    @Test
    public void test06204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06204");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int10 = strBuilder0.indexOf('\000', 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendln("##########################110\n\ni###############################################################################################", 66, 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.replaceAll("#4#a4#java.io.IOException: 10.0\n-1        ", "1false0\n1.0");
        boolean boolean18 = strBuilder0.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06205");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendSeparator(".0jav");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('e', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((long) '#');
        java.util.stream.IntStream intStream31 = strBuilder28.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.appendFixedWidthPadRight((java.lang.Object) strMatcher39, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder28.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.replaceFirst(' ', ' ');
        int int55 = strBuilder48.lastIndexOf("#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.append(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.appendln(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder18.appendln(strBuilder58, 27, 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.trim();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test06206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06206");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("10\n", 'c');
    }

    @Test
    public void test06207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06207");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.setNewLineText("1.0j5ava.io.IOExceptionfalse1000\nfalse32.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test06208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06208");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int28 = strBuilder23.indexOf(strMatcher26, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.replaceFirst(strMatcher26, "100.0false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        char[] charArray40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.replace(strMatcher52, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.replaceFirst(strMatcher52, "hi!");
        boolean boolean60 = strBuilder31.contains(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder31.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder31.appendFixedWidthPadRight(51, 32, 'c');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test06209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06209");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        java.util.Iterator<java.lang.String> strItor45 = strList27.iterator();
        java.util.stream.Stream<java.lang.String> strStream46 = strList27.parallelStream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertNotNull(strStream46);
    }

    @Test
    public void test06210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06210");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.flush();
        writer9.write("StrTokenizer[#4#a4#]");
        writer9.write("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]", 39, (int) (byte) 0);
        writer9.write("4#4");
        writer9.write("java.io.IOException: a4aa# ");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendln(10L);
        int int68 = strBuilder62.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder59.appendln(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder59.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder59.insert(0, ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer80 = writer9.append((java.lang.CharSequence) strBuilder59, 34, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -33");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test06211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06211");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.ensureCapacity(72);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder24.appendAll((java.util.Iterator<java.lang.String>) strTokenizer36);
        java.lang.String str40 = strBuilder24.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendln(10L);
        int int49 = strBuilder43.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder43.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder43.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder24.append((java.lang.Object) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.deleteFirst("1false0\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("");
        char[] charArray69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(charArray69);
        boolean boolean71 = strBuilder68.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.appendFixedWidthPadLeft(33, 33, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.appendln(10L);
        int int84 = strBuilder78.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder78.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder78.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder78.replaceAll("1false0\n", " ");
        java.lang.String str93 = strBuilder92.toString();
        java.lang.StringBuffer stringBuffer94 = strBuilder92.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder75.appendln(stringBuffer94);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder60.append(stringBuffer94);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder16.appendln(stringBuffer94);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder16.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "1" + "'", str93, "1");
        org.junit.Assert.assertNotNull(stringBuffer94);
        org.junit.Assert.assertEquals(stringBuffer94.toString(), "1");
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test06212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06212");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("StrTokenizer[not tokenized yet]");
        int int14 = strBuilder10.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str18 = strBuilder17.getNullText();
        char[] charArray20 = new char[] { 'a' };
        char[] charArray21 = strBuilder17.getChars(charArray20);
        char[] charArray26 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray27 = strBuilder17.getChars(charArray26);
        java.io.Reader reader28 = strBuilder17.asReader();
        reader28.mark(10);
        reader28.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        char[] charArray41 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.appendln(charArray41);
        int int44 = reader28.read(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        java.lang.String str48 = strBuilder47.getNullText();
        char[] charArray50 = new char[] { 'a' };
        char[] charArray51 = strBuilder47.getChars(charArray50);
        char[] charArray56 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray57 = strBuilder47.getChars(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        int int60 = reader28.read(charArray56);
        reader28.reset();
        int int62 = reader28.read();
        boolean boolean63 = reader28.ready();
        boolean boolean64 = reader28.ready();
        reader28.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder10.append((java.lang.Object) reader28);
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("hi!");
        java.lang.String str78 = strTokenizer77.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer77.setIgnoredChar('4');
        java.lang.String str81 = strTokenizer80.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer80.getIgnoredMatcher();
        boolean boolean83 = strBuilder10.contains(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "#4#a4#" + "'", str78, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str81, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test06213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06213");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.insert(0, (double) (byte) 100);
        java.io.Reader reader29 = strBuilder28.asReader();
        boolean boolean30 = strList12.remove((java.lang.Object) reader29);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        int int42 = strTokenizer39.previousIndex();
        boolean boolean43 = strList12.contains((java.lang.Object) int42);
        int int44 = strList12.size();
        boolean boolean45 = strList12.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str49 = strBuilder48.getNullText();
        char[] charArray51 = new char[] { 'a' };
        char[] charArray52 = strBuilder48.getChars(charArray51);
        char[] charArray57 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray58 = strBuilder48.getChars(charArray57);
        java.io.Reader reader59 = strBuilder48.asReader();
        reader59.mark(10);
        reader59.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.clear();
        char[] charArray72 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder65.appendln(charArray72);
        int int75 = reader59.read(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setIgnoredChar('3');
        boolean boolean82 = strList12.remove((java.lang.Object) strTokenizer79);
        java.lang.String str83 = strTokenizer79.next();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "aa4#4" + "'", str83, "aa4#4");
    }

    @Test
    public void test06214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06214");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int28 = strBuilder23.indexOf(strMatcher26, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.replaceFirst(strMatcher26, "100.0false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.appendNewLine();
        java.io.Reader reader35 = strBuilder34.asReader();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = strBuilder34.substring(55, 42);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader35);
    }

    @Test
    public void test06215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06215");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator("100.01210\n");
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        int int28 = strTokenizer25.previousIndex();
        char[] charArray35 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        int int46 = strBuilder36.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher51, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer25.setIgnoredMatcher(strMatcher55);
        int int59 = strBuilder2.indexOf(strMatcher55, (int) '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder2.appendln("zinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder2.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer66, "0\n4444444444#4#a4#");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer66.set("false19.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test06216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06216");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(strBuilder9, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.insert(2, (java.lang.Object) strBuilder19);
        char[] charArray21 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'c', '4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "10\nhi!1.0java.io.IOExceptionfalse1001.0\n35.0\nhi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "10\nhi!1.0java.io.IOExceptionfalse1001.0\n35.0\nhi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[1, 0, \n, h, i, !, 1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, h, i, !]");
    }

    @Test
    public void test06217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06217");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator("java.io.IOException: 1false0\n\n#", 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendFixedWidthPadLeft(9, 66, '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test06218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06218");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean28 = strBuilder27.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        java.lang.String str44 = strBuilder43.getNullText();
        char[] charArray46 = new char[] { 'a' };
        char[] charArray47 = strBuilder43.getChars(charArray46);
        char[] charArray52 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray53 = strBuilder43.getChars(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.appendln(charArray52, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder27.appendln(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setQuoteChar('4');
        java.util.List<java.lang.String> strList65 = strTokenizer64.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.appendAll((java.lang.Iterable<java.lang.String>) strList65);
        java.util.Spliterator<java.lang.String> strSpliterator67 = strList65.spliterator();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strSpliterator67);
    }

    @Test
    public void test06219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06219");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("", throwable2);
        java.io.IOException iOException4 = new java.io.IOException("#4#a4#", throwable2);
        java.io.IOException iOException5 = new java.io.IOException(throwable2);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray8 = iOException7.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException7);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test06220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06220");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(strBuilder9, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.insert(2, (java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.appendln((int) (short) 100);
        java.lang.String str23 = strBuilder14.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.replaceFirst('1', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        java.lang.String str31 = strBuilder30.getNullText();
        char[] charArray33 = new char[] { 'a' };
        char[] charArray34 = strBuilder30.getChars(charArray33);
        int int38 = strMatcher27.isMatch(charArray34, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder14.appendln(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        char[] charArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int44 = strMatcher41.isMatch(charArray42, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
    }

    @Test
    public void test06221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06221");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        int int27 = strBuilder17.indexOf(strMatcher25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher25, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder4.deleteAll(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        char[] charArray51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(charArray51);
        boolean boolean53 = strBuilder50.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        boolean boolean59 = strBuilder58.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        int int70 = strMatcher61.isMatch(charArray68, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.append(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder50.insert((int) (byte) 1, charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "StrTokenizer[#4#a4#]");
        char[] charArray75 = strBuilder42.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '\000', '4');
        int int79 = strTokenizer78.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test06222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06222");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        int int11 = strBuilder9.lastIndexOf("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        java.lang.Throwable throwable19 = null;
        java.io.IOException iOException20 = new java.io.IOException("", throwable19);
        java.io.IOException iOException21 = new java.io.IOException("#4#a4#", throwable19);
        java.io.IOException iOException22 = new java.io.IOException(throwable19);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray26 = new java.lang.Object[] { 1.0f, iOException22, false, 100, strBuilder25 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.appendWithSeparators(objArray26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.appendln(100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder9.appendFixedWidthPadLeft((java.lang.Object) strBuilder42, (int) (short) -1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder9.appendln((long) 80);
        boolean boolean48 = strBuilder9.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test06223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06223");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendFixedWidthPadLeft((int) (short) 100, 27, 'a');
        java.lang.String str10 = strBuilder2.rightString(27);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.appendln((double) 19);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.replace(32, 97, "35\n10\n\na-130.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "aaaaaaaaaaaaaaaaaaaaaaaa100" + "'", str10, "aaaaaaaaaaaaaaaaaaaaaaaa100");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test06224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06224");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        int int9 = strBuilder3.lastIndexOf("1false0\n", 59);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        int int22 = strTokenizer18.nextIndex();
        int int23 = strTokenizer18.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer18.setIgnoreEmptyTokens(false);
        int int26 = strTokenizer18.previousIndex();
        java.lang.String str27 = strTokenizer18.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder46.replace(strMatcher51, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int58 = strBuilder40.lastIndexOf(strMatcher51, (int) (short) 100);
        int int60 = strBuilder35.lastIndexOf(strMatcher51, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer28.setDelimiterMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder3.deleteFirst(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder3.setLength(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder3.appendSeparator("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder3.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#a4#" + "'", str27, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test06225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06225");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("aa", "1false0\nfalse");
        boolean boolean3 = strTokenizer2.isIgnoreEmptyTokens();
        int int4 = strTokenizer2.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test06226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06226");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '0', 'a');
        boolean boolean37 = strTokenizer36.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str40 = strTokenizer39.getContent();
        char[] charArray46 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer39.reset(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append("#4#a4#");
        java.lang.String str58 = strBuilder51.leftString((int) (short) 100);
        int int60 = strBuilder51.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder51.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder51.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int79 = strBuilder76.lastIndexOf(strMatcher77, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder51.replaceFirst(strMatcher77, "#4#a4#");
        char[] charArray88 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray88);
        int int93 = strBuilder81.lastIndexOf(strMatcher91, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer95.setQuoteChar('\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher98 = strTokenizer97.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = strTokenizer36.setQuoteMatcher(strMatcher98);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "#4#a4#" + "'", str58, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 15 + "'", int93 == 15);
        org.junit.Assert.assertNotNull(strTokenizer97);
        org.junit.Assert.assertNotNull(strMatcher98);
        org.junit.Assert.assertNotNull(strTokenizer99);
    }

    @Test
    public void test06227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06227");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int23 = strBuilder9.lastIndexOf(strMatcher21, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.appendSeparator("StrTokenizer[#4#a4#]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strBuilder50.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder9.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        java.lang.String str54 = strBuilder9.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder9.appendSeparator("StrTokeniz", 60);
        java.io.Writer writer58 = strBuilder9.asWriter();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + " \nStrTokenizer[#4#a4#]1.0java.io.IOExceptionfalse1001.035.0" + "'", str54, " \nStrTokenizer[#4#a4#]1.0java.io.IOExceptionfalse1001.035.0");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(writer58);
    }

    @Test
    public void test06228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06228");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor19 = strList12.listIterator();
        int int20 = strList12.size();
        int int21 = strList12.size();
        int int22 = strList12.size();
        int int23 = strList12.size();
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("hi!");
        java.lang.String str35 = strTokenizer34.nextToken();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        boolean boolean38 = strList36.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str41 = strTokenizer40.getContent();
        boolean boolean42 = strList36.equals((java.lang.Object) strTokenizer40);
        java.util.ListIterator<java.lang.String> strItor43 = strList36.listIterator();
        int int44 = strList36.size();
        int int45 = strList36.size();
        int int46 = strList36.size();
        int int47 = strList36.size();
        boolean boolean48 = strList12.retainAll((java.util.Collection<java.lang.String>) strList36);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("hi!");
        java.lang.String str60 = strTokenizer59.nextToken();
        java.util.List<java.lang.String> strList61 = strTokenizer59.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        char[] charArray73 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray74 = strBuilder64.getChars(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        int int76 = strList61.indexOf((java.lang.Object) charArray74);
        boolean boolean77 = strList61.isEmpty();
        boolean boolean78 = strList36.retainAll((java.util.Collection<java.lang.String>) strList61);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#4#a4#" + "'", str35, "#4#a4#");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "#4#a4#" + "'", str60, "#4#a4#");
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test06229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06229");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("100.0false", "");
    }

    @Test
    public void test06230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06230");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int14 = strBuilder11.lastIndexOf(strMatcher12, (int) (short) -1);
        java.io.Reader reader15 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.append(false);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("hi!");
        boolean boolean38 = strTokenizer35.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.appendFixedWidthPadRight((java.lang.Object) strTokenizer35, 10, ' ');
        int int42 = strTokenizer35.previousIndex();
        int int43 = strTokenizer35.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer35);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder11.deleteAll('#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder11.insert((-1), "");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test06231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06231");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln(10L);
        int int18 = strBuilder12.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append("#4#a4#");
        java.lang.String str29 = strBuilder22.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(false);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        boolean boolean51 = strTokenizer48.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strTokenizer48, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln((int) (short) 10);
        boolean boolean65 = strBuilder35.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder35.reverse();
        java.lang.StringBuffer stringBuffer67 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder22.append(stringBuffer67, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder21.append(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder6.append((java.lang.Object) stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        java.lang.String str76 = strBuilder75.getNullText();
        char[] charArray78 = new char[] { 'a' };
        char[] charArray79 = strBuilder75.getChars(charArray78);
        char[] charArray84 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray85 = strBuilder75.getChars(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray84);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray84);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray84);
        int int90 = strBuilder72.indexOf(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#4#a4#" + "'", str29, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 18 + "'", int90 == 18);
    }

    @Test
    public void test06232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06232");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) ' ');
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("hi!");
        boolean boolean19 = strTokenizer16.isIgnoreEmptyTokens();
        java.lang.String str20 = strTokenizer16.next();
        int int21 = strList6.indexOf((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor23 = strList6.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor24 = strList6.iterator();
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        boolean boolean38 = strList6.equals((java.lang.Object) strTokenizer33);
        java.lang.Object[] objArray39 = strList6.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder1.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList6, "1false0\nfalse");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj44 = strTokenizer43.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset();
        boolean boolean46 = strTokenizer43.hasNext();
        java.util.List<java.lang.String> strList47 = strTokenizer43.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList47);
        java.util.stream.Stream<java.lang.String> strStream49 = strList47.parallelStream();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strStream49);
    }

    @Test
    public void test06233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06233");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("hi!", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendPadding((int) 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.deleteFirst('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.delete(24, 26);
        java.lang.String str25 = strBuilder22.midString((int) '4', 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test06234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06234");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert(4, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln("100.01210\n", 1, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendln((int) (short) 10);
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getIgnoredMatcher();
        int int60 = strBuilder41.indexOf(strMatcher58, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder41.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.trim();
        java.lang.Object[] objArray75 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendAll(objArray75);
        char[] charArray77 = strBuilder73.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder62.append(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder62.setCharAt(33, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln((double) 15);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder30.appendln(strBuilder83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.append((long) 40);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test06235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06235");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.insert(0, (double) (byte) 100);
        java.io.Reader reader29 = strBuilder28.asReader();
        boolean boolean30 = strList12.remove((java.lang.Object) reader29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.deleteFirst(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.minimizeCapacity();
        char[] charArray55 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        int int66 = strBuilder56.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder47.replace(strMatcher64, "", 2, (int) (short) 100, 10);
        char[] charArray75 = strBuilder47.toCharArray((int) (byte) 0, (int) (byte) 0);
        int int76 = reader29.read(charArray75);
        reader29.close();
        reader29.close();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test06236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06236");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.appendln(strBuilder9);
        java.lang.String str14 = strBuilder2.leftString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder2.appendln(true);
        java.lang.String str20 = strBuilder2.midString(1, 28);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0\nhi!hi!truehi!" + "'", str20, "0\nhi!hi!truehi!");
    }

    @Test
    public void test06237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06237");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln(strBuilder35, (int) (short) 1, (int) ' ');
        java.io.Writer writer39 = writer9.append((java.lang.CharSequence) strBuilder35);
        writer9.flush();
        writer9.write(13);
        writer9.write("java.io.IOException:");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(writer39);
    }

    @Test
    public void test06238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06238");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray0);
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("hi!");
        boolean boolean13 = strTokenizer10.isIgnoreEmptyTokens();
        int int14 = strTokenizer10.nextIndex();
        int int15 = strTokenizer10.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int18 = strTokenizer10.previousIndex();
        java.lang.String str19 = strTokenizer10.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder38.replace(strMatcher43, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int50 = strBuilder32.lastIndexOf(strMatcher43, (int) (short) 100);
        int int52 = strBuilder27.lastIndexOf(strMatcher43, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer20.setDelimiterMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer1.setTrimmerMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer1.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
    }

    @Test
    public void test06239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06239");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert(4, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln("0\nfalse32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.insert((int) (byte) 1, 'a');
        java.util.stream.IntStream intStream71 = strBuilder62.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((long) '#');
        java.util.stream.IntStream intStream79 = strBuilder76.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder76.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder76.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder76.appendFixedWidthPadRight((java.lang.Object) strMatcher87, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder62.appendln((java.lang.Object) strMatcher87);
        boolean boolean92 = strBuilder30.equalsIgnoreCase(strBuilder91);
        boolean boolean94 = strBuilder91.endsWith("1.0java.io.IOExceptionfalse");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(intStream71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(intStream79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test06240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06240");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        boolean boolean39 = strBuilder36.startsWith(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.appendSeparator('0', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.appendln("0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test06241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06241");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        java.lang.String str15 = strBuilder13.substring(0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.insert(47, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 47");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10\ntrue\n" + "'", str15, "10\ntrue\n");
    }

    @Test
    public void test06242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06242");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.write("#4#a4#", 1, 0);
        writer9.close();
        writer9.write("StrTokenizer[1.0j");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
    }

    @Test
    public void test06243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06243");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        int int27 = strBuilder25.lastIndexOf("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendSeparator('a');
        int int30 = strBuilder25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.replaceAll(strMatcher31, "eslf\n\n181111");
        int int35 = strBuilder25.lastIndexOf("zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 39 + "'", int27 == 39);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 61 + "'", int30 == 61);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test06244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06244");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(true);
        int int11 = strBuilder5.lastIndexOf("", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendSeparator("0java.io.IOExceptionfalse100", 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.trim();
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("hi!");
        java.lang.String str27 = strTokenizer26.nextToken();
        java.util.List<java.lang.String> strList28 = strTokenizer26.getTokenList();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        boolean boolean43 = strList41.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str46 = strTokenizer45.getContent();
        boolean boolean47 = strList41.equals((java.lang.Object) strTokenizer45);
        boolean boolean48 = strList28.addAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendSeparator("va.io.IOExceptionfalse1001.");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendln("100.0zinekoTrtSeslaf1", (int) 'f', 24);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#a4#" + "'", str27, "#4#a4#");
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test06245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06245");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("");
        int int2 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.deleteAll('3');
        java.lang.String str5 = strBuilder4.toString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test06246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06246");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        java.lang.String str13 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder4.appendSeparator('a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        int int20 = strBuilder17.indexOf("0.012true104444444444444444444444444444444444444444444444  \n", 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln("hi!");
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("hi!");
        java.lang.String str34 = strTokenizer33.nextToken();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        boolean boolean37 = strList35.add("hi!");
        java.util.stream.Stream<java.lang.String> strStream38 = strList35.parallelStream();
        java.lang.String str40 = strList35.get(0);
        strList35.clear();
        java.lang.Object obj42 = null;
        boolean boolean43 = strList35.contains(obj42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder17.append(obj42);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test06247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06247");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.setNewLineText("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        char[] charArray27 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray28 = strBuilder18.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray28);
        boolean boolean30 = strTokenizer29.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer29.getDelimiterMatcher();
        java.lang.String[] strArray32 = strTokenizer29.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder8.appendAll((java.lang.Object[]) strArray32);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test06248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06248");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        int int26 = strTokenizer18.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer18.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMatcher27);
    }

    @Test
    public void test06249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06249");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.append(false);
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("hi!");
        boolean boolean78 = strTokenizer75.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder62.appendFixedWidthPadRight((java.lang.Object) strTokenizer75, 10, ' ');
        java.io.Writer writer82 = writer37.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder62.appendln((long) 49);
        java.lang.String str86 = strBuilder62.leftString(14);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(writer82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + " falseStrToken" + "'", str86, " falseStrToken");
    }

    @Test
    public void test06250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06250");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.insert(0, charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("java.io.IOException: hi!");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test06251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06251");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendln(10L);
        int int46 = strBuilder40.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder35.appendln((java.lang.Object) strBuilder51);
        int int54 = strBuilder35.lastIndexOf("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder35.append((double) '1');
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder56.append(charArray63, 3, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strBuilder68.asTokenizer();
        java.lang.String str70 = strBuilder68.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1false01\n49.0" + "'", str70, "1false01\n49.0");
    }

    @Test
    public void test06252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06252");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.replace(strMatcher20, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        java.lang.String str31 = strBuilder30.getNullText();
        char[] charArray33 = new char[] { 'a' };
        char[] charArray34 = strBuilder30.getChars(charArray33);
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.append(stringBuffer35);
        boolean boolean37 = strBuilder7.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.clear();
        int int40 = strBuilder38.indexOf('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test06253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06253");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setEmptyTokenAsNull(false);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        int int31 = strBuilder21.indexOf(strMatcher29);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher29, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer6.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer6.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer6.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer6, "java.io.IOException: 59.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder1.replace(74, 77, " a10\n1false0\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test06254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06254");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        java.util.Iterator<java.lang.String> strItor8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendAll(strItor8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendln(10L);
        int int31 = strBuilder25.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder25.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append("#4#a4#");
        java.lang.String str42 = strBuilder35.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append(false);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder48.appendFixedWidthPadRight((java.lang.Object) strTokenizer61, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int71 = strBuilder68.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.appendln((int) (short) 10);
        boolean boolean78 = strBuilder48.equalsIgnoreCase(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder48.reverse();
        java.lang.StringBuffer stringBuffer80 = strBuilder79.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder35.append(stringBuffer80, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder34.append(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder19.append((java.lang.Object) stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder12.append(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder0.appendln(stringBuffer80);
        int int88 = strBuilder87.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.deleteAll("0.012true104444444444444444444444444444444444444444444444");
        boolean boolean92 = strBuilder90.contains('\000');
        int int95 = strBuilder90.indexOf("", 97);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#4#a4#" + "'", str42, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 18 + "'", int88 == 18);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test06255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06255");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("a4 4", '4', 'e');
        int int4 = strTokenizer3.nextIndex();
        boolean boolean5 = strTokenizer3.hasNext();
        boolean boolean6 = strTokenizer3.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test06256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06256");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.ensureCapacity((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.delete((int) '1', 37);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test06257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06257");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert((int) (byte) 0, false);
        java.util.Iterator<java.lang.String> strItor16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendWithSeparators(strItor16, " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.nextToken();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList37);
        java.lang.Object[] objArray39 = strList37.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder2.appendAll(objArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.trim();
        char[] charArray44 = strBuilder40.toCharArray(0, 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append("#4#a4#");
        java.lang.String str52 = strBuilder45.leftString((int) (short) 100);
        int int54 = strBuilder45.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder45.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder40.appendFixedWidthPadRight((java.lang.Object) strBuilder57, 36, '.');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "#4#a4#" + "'", str36, "#4#a4#");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "false#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "false#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[f, a, l, s, e, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test06258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06258");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.setLength((int) (byte) 10);
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.ensureCapacity(39);
        boolean boolean26 = strBuilder24.endsWith(".0jav");
        char[] charArray31 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray31);
        char[] charArray33 = strBuilder24.getChars(charArray31);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("hi!");
        java.lang.String str45 = strTokenizer44.nextToken();
        java.util.List<java.lang.String> strList46 = strTokenizer44.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        char[] charArray58 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray59 = strBuilder49.getChars(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray59);
        int int61 = strList46.indexOf((java.lang.Object) charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int67 = strTokenizer66.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer66.setTrimmerMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher65, strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder13.replaceFirst(strMatcher69, " a10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.stringMatcher(" a10\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\n10.0\n", strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder13.replaceAll(strMatcher77, "35\n10\n\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = strBuilder13.substring(20, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#4#a4#" + "'", str45, "#4#a4#");
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test06259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06259");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray6);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
    }

    @Test
    public void test06260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06260");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList12.spliterator();
        boolean boolean23 = strList12.add("59.052.0");
        strList12.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.clear();
        java.lang.Throwable throwable32 = null;
        java.io.IOException iOException33 = new java.io.IOException("", throwable32);
        java.io.IOException iOException34 = new java.io.IOException("#4#a4#", throwable32);
        java.io.IOException iOException35 = new java.io.IOException(throwable32);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1.0f, iOException35, false, 100, strBuilder38 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder28.appendWithSeparators(objArray39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendln(10L);
        int int57 = strBuilder51.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder48.appendln(strBuilder60);
        java.io.Writer writer62 = strBuilder61.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("hi!");
        java.lang.String str66 = strBuilder65.getNullText();
        char[] charArray68 = new char[] { 'a' };
        char[] charArray69 = strBuilder65.getChars(charArray68);
        char[] charArray74 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray75 = strBuilder65.getChars(charArray74);
        writer62.write(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ', 'I');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setIgnoredChar('I');
        boolean boolean82 = strTokenizer81.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("\n", '.', 'a');
        java.lang.String str87 = strTokenizer86.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(" false.IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        java.util.Iterator[] iteratorArray91 = new java.util.Iterator[3];
        @SuppressWarnings("unchecked")
        java.util.Iterator<java.lang.String>[] strItorArray92 = (java.util.Iterator<java.lang.String>[]) iteratorArray91;
        strItorArray92[0] = strTokenizer81;
        strItorArray92[1] = strTokenizer86;
        strItorArray92[2] = strTokenizer89;
        java.util.Iterator<java.lang.String>[] strItorArray99 = strList12.toArray(strItorArray92);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(writer62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "\n" + "'", str87, "\n");
        org.junit.Assert.assertNotNull(iteratorArray91);
        org.junit.Assert.assertNotNull(strItorArray92);
        org.junit.Assert.assertNotNull(strItorArray99);
    }

    @Test
    public void test06261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06261");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int23 = strBuilder20.lastIndexOf(strMatcher21, (int) (short) 10);
        int int25 = strBuilder4.indexOf(strMatcher21, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder4.appendSeparator("a", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder4.append((long) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder4.appendPadding(0, ' ');
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln(stringBuffer34, 59, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.insert(3, ".0j");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test06262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06262");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendPadding((int) (short) 10, '4');
        int int11 = strBuilder8.indexOf('1', 13);
        java.lang.String str13 = strBuilder8.leftString(32);
        int int15 = strBuilder8.lastIndexOf("0\nzinekoTrtSeslaf ");
        int int17 = strBuilder8.indexOf('#');
        int int19 = strBuilder8.indexOf("hi!");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10\n4444444444" + "'", str13, "10\n4444444444");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test06263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06263");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendSeparator(' ', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendSeparator("Seslaf1.0java.io.IOExceptionfalse");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        java.lang.String str21 = strTokenizer20.nextToken();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        boolean boolean24 = strList22.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str27 = strTokenizer26.getContent();
        boolean boolean28 = strList22.equals((java.lang.Object) strTokenizer26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer26.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        java.lang.Throwable throwable38 = null;
        java.io.IOException iOException39 = new java.io.IOException("", throwable38);
        java.io.IOException iOException40 = new java.io.IOException("#4#a4#", throwable38);
        java.io.IOException iOException41 = new java.io.IOException(throwable38);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray45 = new java.lang.Object[] { 1.0f, iOException41, false, 100, strBuilder44 };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.appendWithSeparators(objArray45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln((float) '#');
        boolean boolean53 = strBuilder49.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        java.lang.String str58 = strBuilder57.getNullText();
        char[] charArray60 = new char[] { 'a' };
        char[] charArray61 = strBuilder57.getChars(charArray60);
        char[] charArray66 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray67 = strBuilder57.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder49.insert(0, charArray66);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer26.setQuoteMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("0.012true104444444444444444444444444444444444444444444444  \n", strMatcher9, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getIgnoredMatcher();
        boolean boolean75 = strBuilder6.contains(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#4#a4#" + "'", str21, "#4#a4#");
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test06264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06264");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]\n", 'f', '\000');
        boolean boolean4 = strTokenizer3.hasNext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test06265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06265");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setCharAt(21, '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 21");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test06266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06266");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        java.lang.Throwable throwable20 = null;
        java.io.IOException iOException21 = new java.io.IOException("", throwable20);
        java.io.IOException iOException22 = new java.io.IOException("#4#a4#", throwable20);
        java.io.IOException iOException23 = new java.io.IOException(throwable20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1.0f, iOException23, false, 100, strBuilder26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.appendWithSeparators(objArray27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.deleteFirst("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder12.append(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder12.deleteAll('\000');
        java.util.stream.IntStream intStream47 = strBuilder12.codePoints();
        boolean boolean49 = strBuilder12.contains("\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test06267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06267");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.clear();
        java.lang.String str75 = strBuilder71.rightString(77);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test06268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06268");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoreEmptyTokens(false);
        int int4 = strTokenizer1.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.setQuoteChar('f');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test06269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06269");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.lang.String str20 = strTokenizer14.toString();
        java.lang.String str21 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer14.setIgnoreEmptyTokens(true);
        boolean boolean24 = strTokenizer14.hasPrevious();
        int int25 = strTokenizer14.size();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str20, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str21, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test06270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06270");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        int int27 = strBuilder25.lastIndexOf("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendSeparator('a');
        char[] charArray30 = strBuilder29.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.replaceAll('I', '4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = strBuilder33.substring(91, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 39 + "'", int27 == 39);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "1.0java.io.IOExceptionfalse1001.0\n35.0\njava.io.IOException: a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "1.0java.io.IOExceptionfalse1001.0\n35.0\njava.io.IOException: a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, :,  , a]");
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test06271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06271");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.deleteFirst(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder7.replaceAll(strMatcher24, "1false0\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll(" false.IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteCharAt(97);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test06272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06272");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteAll(strMatcher42);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        boolean boolean61 = strTokenizer58.isIgnoreEmptyTokens();
        java.lang.String str62 = strTokenizer58.next();
        int int63 = strList48.indexOf((java.lang.Object) strTokenizer58);
        java.util.ListIterator<java.lang.String> strItor65 = strList48.listIterator((int) (byte) 0);
        java.lang.String[] strArray69 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.setDelimiterString("hi!");
        boolean boolean83 = strTokenizer80.isIgnoreEmptyTokens();
        java.lang.String str84 = strTokenizer80.next();
        int int85 = strList70.indexOf((java.lang.Object) strTokenizer80);
        java.util.ListIterator<java.lang.String> strItor87 = strList70.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor88 = strList70.iterator();
        boolean boolean89 = strList48.removeAll((java.util.Collection<java.lang.String>) strList70);
        java.util.Iterator<java.lang.String> strItor90 = strList48.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder39.appendFixedWidthPadRight((java.lang.Object) strItor90, (int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder39.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder95.append('#');
        boolean boolean98 = strBuilder38.equals((java.lang.Object) strBuilder97);
        java.io.Reader reader99 = strBuilder38.asReader();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#4#a4#" + "'", str62, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "#4#a4#" + "'", str84, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strItor87);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(reader99);
    }

    @Test
    public void test06273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06273");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.flush();
        writer9.write("StrTokenizer[#4#a4#]");
        writer9.write("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]", 39, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((long) '#');
        java.util.stream.IntStream intStream39 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendNull();
        java.io.Writer writer46 = writer9.append((java.lang.CharSequence) strBuilder36);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.insert(100, '0');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
    }

    @Test
    public void test06274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06274");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int14 = strBuilder11.lastIndexOf(strMatcher12, (int) (short) -1);
        java.io.Reader reader15 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.setNullText("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.append(false);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        boolean boolean44 = strTokenizer41.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder28.appendFixedWidthPadRight((java.lang.Object) strTokenizer41, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.appendln((int) (short) 10);
        boolean boolean58 = strBuilder28.equalsIgnoreCase(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder28.reverse();
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher74, strMatcher78);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder60.deleteFirst(strMatcher78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder60.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder60.appendSeparator(" 10\n", (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder60.appendFixedWidthPadLeft(5, (int) '3', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder22.appendln(strBuilder88);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test06275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06275");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.insert(0, (double) (byte) 100);
        java.io.Reader reader29 = strBuilder28.asReader();
        boolean boolean30 = strList12.remove((java.lang.Object) reader29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.deleteFirst(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.minimizeCapacity();
        char[] charArray55 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        int int66 = strBuilder56.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder47.replace(strMatcher64, "", 2, (int) (short) 100, 10);
        char[] charArray75 = strBuilder47.toCharArray((int) (byte) 0, (int) (byte) 0);
        int int76 = reader29.read(charArray75);
        boolean boolean77 = reader29.markSupported();
        int int78 = reader29.read();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 49 + "'", int78 == 49);
    }

    @Test
    public void test06276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06276");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        int int38 = strBuilder35.lastIndexOf("1false0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(0.0f);
        boolean boolean42 = strBuilder40.endsWith("StrTokenizer[0.012true104444444444444444444444444444444444444444444444]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test06277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06277");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("3#a4#");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test06278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06278");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        java.lang.String str12 = strBuilder7.rightString((int) 'a');
        int int15 = strBuilder7.indexOf("1false0\nfalse", 27);
        java.lang.String str17 = strBuilder7.rightString(6);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replaceAll("\nzinekoTrtSeslaf \n", "4");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadRight(3, 53, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.setCharAt((int) (short) 10, 'a');
        java.lang.String str28 = strBuilder27.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10\n\n" + "'", str12, "10\n\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10\n\n" + "'", str17, "10\n\n");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10\n\n3#####a##############################################" + "'", str28, "10\n\n3#####a##############################################");
    }

    @Test
    public void test06279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06279");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.trim();
        java.lang.Object[] objArray19 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendln(10L);
        int int30 = strBuilder24.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.append("#4#a4#");
        java.lang.String str41 = strBuilder34.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.append(false);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        boolean boolean63 = strTokenizer60.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder47.appendFixedWidthPadRight((java.lang.Object) strTokenizer60, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int70 = strBuilder67.indexOf(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendln((int) (short) 10);
        boolean boolean77 = strBuilder47.equalsIgnoreCase(strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder47.reverse();
        java.lang.StringBuffer stringBuffer79 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder34.append(stringBuffer79, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder33.append(stringBuffer79);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder21.append(stringBuffer79);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder21.deleteAll('.');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(stringBuffer79);
        org.junit.Assert.assertEquals(stringBuffer79.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test06280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06280");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        int int54 = strBuilder52.lastIndexOf("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        java.lang.Throwable throwable62 = null;
        java.io.IOException iOException63 = new java.io.IOException("", throwable62);
        java.io.IOException iOException64 = new java.io.IOException("#4#a4#", throwable62);
        java.io.IOException iOException65 = new java.io.IOException(throwable62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1.0f, iOException65, false, 100, strBuilder68 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.appendWithSeparators(objArray69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder73.appendln(100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.deleteAll("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder52.appendFixedWidthPadLeft((java.lang.Object) strBuilder85, (int) (short) -1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder40.appendln(strBuilder88);
        // The following exception was thrown during execution in test generation
        try {
            char char91 = strBuilder88.charAt(200);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 200");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test06281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06281");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.append("1false0\n");
        char[] charArray44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder30.appendln(charArray44, (int) (short) 10, 20);
        java.lang.Class<?> wildcardClass48 = strBuilder47.getClass();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test06282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06282");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.reset("a");
        java.lang.String str19 = strTokenizer18.toString();
        boolean boolean20 = strTokenizer18.hasPrevious();
        boolean boolean21 = strTokenizer18.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer18.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMatcher22);
    }

    @Test
    public void test06283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06283");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder30.appendSeparator('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder30.setLength(37);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test06284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06284");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.deleteAll(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceAll("tionfalse100\n100.01", "zer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray11 = strBuilder8.toCharArray(12, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test06285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06285");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar(' ');
        int int4 = strTokenizer1.previousIndex();
        boolean boolean5 = strTokenizer1.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test06286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06286");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.replaceFirst("#4#", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteAll(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteAll("10\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append("aaaaaaaaaaaaaaaaaaaaaaaa100", 3, 24);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test06287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06287");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append(stringBuffer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        java.lang.Throwable throwable19 = null;
        java.io.IOException iOException20 = new java.io.IOException("", throwable19);
        java.io.IOException iOException21 = new java.io.IOException("#4#a4#", throwable19);
        java.io.IOException iOException22 = new java.io.IOException(throwable19);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray26 = new java.lang.Object[] { 1.0f, iOException22, false, 100, strBuilder25 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.appendWithSeparators(objArray26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strBuilder35.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setIgnoreEmptyTokens(false);
        boolean boolean39 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer38.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer41.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder9.replaceAll(strMatcher45, "a4aa# ");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder9.insert((int) '1', (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 49");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test06288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06288");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[", '0');
        int int3 = strTokenizer2.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test06289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06289");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteFirst(strMatcher21);
        int int25 = strBuilder3.indexOf(strMatcher21, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append(false);
        java.lang.String str33 = strBuilder32.getNewLineText();
        java.lang.String str35 = strBuilder32.rightString(6);
        boolean boolean36 = strBuilder3.equalsIgnoreCase(strBuilder32);
        int int39 = strBuilder3.indexOf("10\n100.0", 80);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "false" + "'", str35, "false");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test06290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06290");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.replaceAll("java.io.IOException: StrTokenizer[#4#a4#]", "#4#a4#");
        int int20 = strBuilder17.lastIndexOf(" ", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.replaceAll(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", "eptionfalse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.appendln('I');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('0', '.');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test06291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06291");
        char[] charArray6 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        int int17 = strBuilder7.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setQuoteMatcher(strMatcher19);
        java.lang.String str21 = strTokenizer18.nextToken();
        java.lang.String str22 = strTokenizer18.toString();
        java.util.List<java.lang.String> strList23 = strTokenizer18.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = strTokenizer18.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "a4aa# " + "'", str21, "a4aa# ");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[a4aa# ]" + "'", str22, "StrTokenizer[a4aa# ]");
        org.junit.Assert.assertNotNull(strList23);
    }

    @Test
    public void test06292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06292");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendSeparator("1false0\nfalse", "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.appendSeparator(".0jva.io.IOExceptionfalse1001.0jav\n", 44);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test06293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06293");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("10\nfalse");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test06294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06294");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.deleteFirst(strMatcher20);
        char[] charArray22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append(charArray22, 27, 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.append("4");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.appendln((float) '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        java.lang.Throwable throwable38 = null;
        java.io.IOException iOException39 = new java.io.IOException("", throwable38);
        java.io.IOException iOException40 = new java.io.IOException("#4#a4#", throwable38);
        java.io.IOException iOException41 = new java.io.IOException(throwable38);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray45 = new java.lang.Object[] { 1.0f, iOException41, false, 100, strBuilder44 };
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.appendWithSeparators(objArray45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int63 = strBuilder61.indexOf(strMatcher62);
        char[] charArray70 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int74 = strBuilder71.indexOf(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int80 = strBuilder77.indexOf(strMatcher79);
        int int81 = strBuilder71.indexOf(strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher79);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]", strMatcher62, strMatcher83);
        boolean boolean85 = strBuilder21.contains(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test06295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06295");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: ");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
    }

    @Test
    public void test06296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06296");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoreEmptyTokens(false);
        boolean boolean43 = strTokenizer42.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder15.appendAll((java.lang.Object[]) strArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.append('4');
        char[] charArray60 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder15.append(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln((double) (-1));
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test06297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06297");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str49 = strBuilder48.getNullText();
        char[] charArray51 = new char[] { 'a' };
        char[] charArray52 = strBuilder48.getChars(charArray51);
        int int56 = strMatcher45.isMatch(charArray52, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset("StrTokenizer[not tokenized yet]");
        boolean boolean61 = strTokenizer58.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer58.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test06298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06298");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        int int17 = strBuilder14.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder20.appendSeparator('4', 0);
        boolean boolean34 = strBuilder14.equals(strBuilder33);
        int int35 = strBuilder33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.setNullText("59.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder39.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.insert(200, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 200");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 6 + "'", int35 == 6);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
    }

    @Test
    public void test06299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06299");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert(4, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln("0\nfalse32.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.setLength((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test06300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06300");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst('0', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        java.lang.StringBuffer stringBuffer29 = strBuilder27.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.append(stringBuffer29);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(stringBuffer29);
        org.junit.Assert.assertEquals(stringBuffer29.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test06301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06301");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        char[] charArray20 = strBuilder10.getChars(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setQuoteChar('I');
        java.lang.String str24 = strTokenizer21.previousToken();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test06302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06302");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        java.util.List<java.lang.String> strList5 = strTokenizer4.getTokenList();
        int int6 = strTokenizer4.nextIndex();
        boolean boolean7 = strTokenizer4.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer4.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer4.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher9);
    }

    @Test
    public void test06303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06303");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(36);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        java.lang.Throwable throwable10 = null;
        java.io.IOException iOException11 = new java.io.IOException("", throwable10);
        java.io.IOException iOException12 = new java.io.IOException("#4#a4#", throwable10);
        java.io.IOException iOException13 = new java.io.IOException(throwable10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1.0f, iOException13, false, 100, strBuilder16 };
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder6.appendWithSeparators(objArray17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        java.lang.String str25 = strBuilder23.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder6.append((java.lang.CharSequence) str25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((long) (byte) 0);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        int int55 = strMatcher42.isMatch(charArray50, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder26.append(charArray50);
        int int57 = strBuilder56.length();
        int int60 = strBuilder56.lastIndexOf('0', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.deleteAll('1');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder1.insert(72, (java.lang.Object) strBuilder56);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 37 + "'", int57 == 37);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test06304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06304");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        int int14 = strBuilder12.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        boolean boolean32 = strTokenizer29.isIgnoreEmptyTokens();
        java.lang.String str33 = strTokenizer29.next();
        int int34 = strList19.indexOf((java.lang.Object) strTokenizer29);
        java.util.ListIterator<java.lang.String> strItor36 = strList19.listIterator((int) (byte) 0);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setDelimiterString("hi!");
        boolean boolean54 = strTokenizer51.isIgnoreEmptyTokens();
        java.lang.String str55 = strTokenizer51.next();
        int int56 = strList41.indexOf((java.lang.Object) strTokenizer51);
        java.util.ListIterator<java.lang.String> strItor58 = strList41.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor59 = strList41.iterator();
        boolean boolean60 = strList19.removeAll((java.util.Collection<java.lang.String>) strList41);
        boolean boolean62 = strList41.add("java.io.IOException: StrTokenizer[#4#a4#]");
        java.lang.Object[] objArray63 = strList41.toArray();
        java.util.ListIterator<java.lang.String> strItor64 = strList41.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder12.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList41, "0\n 10\n");
        java.util.ListIterator<java.lang.String> strItor67 = strList41.listIterator();
        boolean boolean68 = strItor67.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#4#a4#" + "'", str55, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[, , , java.io.IOException: StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[, , , java.io.IOException: StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test06305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06305");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        java.lang.Object[] objArray36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.appendAll(objArray36);
        java.lang.String str38 = strBuilder5.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        java.lang.Throwable throwable46 = null;
        java.io.IOException iOException47 = new java.io.IOException("", throwable46);
        java.io.IOException iOException48 = new java.io.IOException("#4#a4#", throwable46);
        java.io.IOException iOException49 = new java.io.IOException(throwable46);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1.0f, iOException49, false, 100, strBuilder52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.appendWithSeparators(objArray53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((float) '#');
        boolean boolean61 = strBuilder57.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("hi!");
        java.lang.String str66 = strBuilder65.getNullText();
        char[] charArray68 = new char[] { 'a' };
        char[] charArray69 = strBuilder65.getChars(charArray68);
        char[] charArray74 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray75 = strBuilder65.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder57.insert(0, charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder5.append(charArray74);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test06306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06306");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1.0java.io.IOExceptionfalse1001.0\n35.0\ntrueaaaaaaaaaa 80\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test06307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06307");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        java.lang.String str31 = strBuilder30.getNullText();
        char[] charArray33 = new char[] { 'a' };
        char[] charArray34 = strBuilder30.getChars(charArray33);
        char[] charArray39 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray40 = strBuilder30.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer41.reset(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "59.0");
        writer9.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.appendNull();
        java.lang.String str65 = strBuilder62.substring((int) (short) 0, (int) (short) 100);
        int int68 = strBuilder62.lastIndexOf("1false0\n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.replace((int) (byte) 0, 0, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder72.minimizeCapacity();
        java.lang.StringBuffer stringBuffer74 = strBuilder72.toStringBuffer();
        java.io.Writer writer77 = writer9.append((java.lang.CharSequence) stringBuffer74, (int) (byte) 0, 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "");
        org.junit.Assert.assertNotNull(writer77);
    }

    @Test
    public void test06308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06308");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        int int20 = strTokenizer14.nextIndex();
        java.util.List<java.lang.String> strList21 = strTokenizer14.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer14.setIgnoreEmptyTokens(false);
        java.lang.String str24 = strTokenizer14.getContent();
        int int25 = strTokenizer14.nextIndex();
        java.lang.String str26 = strTokenizer14.nextToken();
        boolean boolean27 = strTokenizer14.hasNext();
        boolean boolean28 = strTokenizer14.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test06309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06309");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        java.util.List<java.lang.String> strList29 = strTokenizer28.getTokenList();
        strList29.clear();
        boolean boolean32 = strList29.add("#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        int int37 = strBuilder35.capacity();
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln(stringBuffer38, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder35.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.setNewLineText("java.io.IOException: ");
        boolean boolean47 = strList29.contains((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder35.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        java.lang.Throwable throwable57 = null;
        java.io.IOException iOException58 = new java.io.IOException("", throwable57);
        java.io.IOException iOException59 = new java.io.IOException("#4#a4#", throwable57);
        java.io.IOException iOException60 = new java.io.IOException(throwable57);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1.0f, iOException60, false, 100, strBuilder63 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.appendWithSeparators(objArray64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendln(10L);
        int int82 = strBuilder76.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder76.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder73.appendln(strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder86.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder90.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder49.append(strBuilder94);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder95.appendln('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder97.setNullText("java.io.IOException");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test06310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06310");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        java.util.List<java.lang.String> strList29 = strTokenizer18.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        char[] charArray42 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray43 = strBuilder33.getChars(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int57 = strBuilder54.lastIndexOf(strMatcher55, (int) (short) 10);
        boolean boolean58 = strBuilder33.contains(strMatcher55);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("hi!");
        java.lang.String str70 = strTokenizer69.nextToken();
        java.util.List<java.lang.String> strList71 = strTokenizer69.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer69.setTrimmerMatcher(strMatcher72);
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray80);
        int int85 = strMatcher72.isMatch(charArray80, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher55, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer18.setQuoteMatcher(strMatcher55);
        java.lang.String[] strArray88 = strTokenizer87.getTokenArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#4#a4#" + "'", str70, "#4#a4#");
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strArray88);
    }

    @Test
    public void test06311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06311");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        java.lang.String str35 = strBuilder32.midString(15, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.insert(48, '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 48");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test06312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06312");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.setLength(2);
        java.util.stream.IntStream intStream28 = strBuilder23.chars();
        int int31 = strBuilder23.lastIndexOf(" false.IOExceptionfalse1001.0\n35.0\n1false0\n\n32", 10);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test06313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06313");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.String[] strArray8 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        java.lang.String str23 = strTokenizer19.next();
        int int24 = strList9.indexOf((java.lang.Object) strTokenizer19);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        int int47 = strBuilder37.indexOf(strMatcher45);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher45, strMatcher60);
        boolean boolean62 = strList9.equals((java.lang.Object) strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        java.util.stream.IntStream intStream69 = strBuilder68.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int72 = strBuilder68.lastIndexOf(strMatcher71);
        boolean boolean73 = strList9.remove((java.lang.Object) strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer1.setTrimmerMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setQuoteMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getQuoteMatcher();
        java.lang.String str79 = strTokenizer77.next();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer77.add("aa4#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#4#a4#" + "'", str23, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(intStream69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
    }

    @Test
    public void test06314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06314");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendSeparator('4', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln("100.0false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        java.lang.Throwable throwable39 = null;
        java.io.IOException iOException40 = new java.io.IOException("", throwable39);
        java.io.IOException iOException41 = new java.io.IOException("#4#a4#", throwable39);
        java.io.IOException iOException42 = new java.io.IOException(throwable39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 1.0f, iOException42, false, 100, strBuilder45 };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendWithSeparators(objArray46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.deleteAll('a');
        boolean boolean61 = strBuilder59.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendln((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("");
        char[] charArray72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln(charArray72);
        boolean boolean74 = strBuilder71.isEmpty();
        java.lang.String str76 = strBuilder71.rightString((int) 'a');
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder71.replaceAll(strMatcher89, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder63.appendln((java.lang.Object) strMatcher89);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder31.replace(strMatcher89, "1false0\nfalse", 24, 2, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "10\n\n" + "'", str76, "10\n\n");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test06315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06315");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str25 = strBuilder24.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append(false);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        boolean boolean52 = strTokenizer49.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.appendFixedWidthPadRight((java.lang.Object) strTokenizer49, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln((int) (short) 10);
        boolean boolean66 = strBuilder36.equalsIgnoreCase(strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder27.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder3.append(strBuilder27);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray72 = strBuilder3.toCharArray(42, 24);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test06316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06316");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        int int16 = reader13.read();
        reader13.reset();
        reader13.reset();
        boolean boolean19 = reader13.ready();
        boolean boolean20 = reader13.markSupported();
        reader13.close();
        boolean boolean22 = reader13.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        java.io.Reader reader30 = strBuilder29.asReader();
        long long32 = reader30.skip((long) 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        java.lang.String str48 = strBuilder47.getNullText();
        char[] charArray50 = new char[] { 'a' };
        char[] charArray51 = strBuilder47.getChars(charArray50);
        char[] charArray56 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray57 = strBuilder47.getChars(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder38.appendln(charArray56, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int70 = strBuilder67.indexOf(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendln((int) (short) 10);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        int int91 = strBuilder72.indexOf(strMatcher89, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher66, strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        int int95 = reader30.read(charArray56);
        int int96 = reader13.read(charArray56);
        boolean boolean97 = reader13.ready();
        int int98 = reader13.read();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 5L + "'", long32 == 5L);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test06317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06317");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        int int41 = strBuilder31.indexOf(strMatcher39);
        int int44 = strBuilder31.indexOf("java.io.IOException: StrTokenizer[not tokenized yet]", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.appendln(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher49);
        int int52 = strTokenizer51.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test06318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06318");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendFixedWidthPadLeft(1, 32, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst('1');
        int int32 = strBuilder31.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 74 + "'", int32 == 74);
    }

    @Test
    public void test06319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06319");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        java.util.List<java.lang.String> strList5 = strTokenizer4.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.clear();
        java.lang.Throwable throwable13 = null;
        java.io.IOException iOException14 = new java.io.IOException("", throwable13);
        java.io.IOException iOException15 = new java.io.IOException("#4#a4#", throwable13);
        java.io.IOException iOException16 = new java.io.IOException(throwable13);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1.0f, iOException16, false, 100, strBuilder19 };
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.appendWithSeparators(objArray20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendln(10L);
        int int38 = strBuilder32.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendln(strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder29.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNewLine();
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        char[] charArray65 = strBuilder55.getChars(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder44.append(charArray65);
        int int68 = strList5.indexOf((java.lang.Object) strBuilder44);
        java.lang.String str70 = strBuilder44.leftString(29);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "1.0java.io.IOExceptionfalse10" + "'", str70, "1.0java.io.IOExceptionfalse10");
    }

    @Test
    public void test06320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06320");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        int int16 = reader13.read();
        reader13.reset();
        int int18 = reader13.read();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test06321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06321");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        int int27 = strBuilder17.indexOf(strMatcher25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher25, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder4.deleteAll(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        char[] charArray51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(charArray51);
        boolean boolean53 = strBuilder50.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        boolean boolean59 = strBuilder58.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        int int70 = strMatcher61.isMatch(charArray68, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.append(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder50.insert((int) (byte) 1, charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "StrTokenizer[#4#a4#]");
        char[] charArray75 = strBuilder42.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setQuoteChar('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test06322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06322");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendFixedWidthPadRight((int) 'a', 5, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test06323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06323");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendFixedWidthPadRight(48, 1, '0');
        boolean boolean37 = strBuilder30.contains('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteCharAt(16);
        int int40 = strBuilder39.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 44 + "'", int40 == 44);
    }

    @Test
    public void test06324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06324");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        boolean boolean4 = strTokenizer1.hasNext();
        java.util.List<java.lang.String> strList5 = strTokenizer1.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream6 = strList5.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = strList5.set(91, "1");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 91, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strStream6);
    }

    @Test
    public void test06325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06325");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream1 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.setNullText("StrTokenizer[1.0java.io.IOExceptionfalse1001.0, 35.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append(" a10\nfalse\n", (int) '\n', 23);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intStream1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
    }

    @Test
    public void test06326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06326");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt((int) (short) 1);
        java.io.Writer writer14 = strBuilder11.asWriter();
        writer14.write(18);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        boolean boolean21 = strBuilder20.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        int int32 = strMatcher23.isMatch(charArray30, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder20.append(charArray30);
        // The following exception was thrown during execution in test generation
        try {
            writer14.write(charArray30, 52, 40);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 40");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(writer14);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test06327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06327");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int14 = strBuilder11.lastIndexOf(strMatcher12, (int) (short) -1);
        java.io.Reader reader15 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendNull();
        int int18 = strBuilder16.lastIndexOf('4');
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        java.lang.String str30 = strTokenizer29.nextToken();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        char[] charArray43 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray44 = strBuilder34.getChars(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        int int46 = strList31.indexOf((java.lang.Object) charArray44);
        strList31.clear();
        java.util.ListIterator<java.lang.String> strItor48 = strList31.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder16.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList31, "1");
        boolean boolean51 = strList31.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test06328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06328");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        java.util.ListIterator<java.lang.String> strItor58 = strList4.listIterator();
        java.util.stream.Stream<java.lang.String> strStream59 = strList4.stream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strStream59);
    }

    @Test
    public void test06329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06329");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int12 = strBuilder9.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.append(false);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        boolean boolean30 = strTokenizer27.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.appendFixedWidthPadRight((java.lang.Object) strTokenizer27, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln((int) (short) 10);
        boolean boolean44 = strBuilder14.equalsIgnoreCase(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln(false);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        java.lang.String str61 = strTokenizer60.nextToken();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("hi!");
        java.lang.String str66 = strBuilder65.getNullText();
        char[] charArray68 = new char[] { 'a' };
        char[] charArray69 = strBuilder65.getChars(charArray68);
        char[] charArray74 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray75 = strBuilder65.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray75);
        int int77 = strList62.indexOf((java.lang.Object) charArray75);
        char[] charArray78 = strBuilder49.getChars(charArray75);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher80, strMatcher81);
        java.lang.String str83 = strTokenizer82.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer82.getQuoteMatcher();
        int int86 = strBuilder3.indexOf(strMatcher84, (int) ' ');
        int int88 = strBuilder3.indexOf(" 10\ntrue\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#4#a4#" + "'", str61, "#4#a4#");
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + " a10\nfalse\n" + "'", str83, " a10\nfalse\n");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test06330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06330");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        java.lang.String str45 = strBuilder44.getNullText();
        char[] charArray47 = new char[] { 'a' };
        char[] charArray48 = strBuilder44.getChars(charArray47);
        char[] charArray53 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray54 = strBuilder44.getChars(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        java.lang.String str57 = strTokenizer56.next();
        boolean boolean58 = strTokenizer56.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder30.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer56, "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "a4 4" + "'", str57, "a4 4");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test06331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06331");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher35);
        int int38 = strBuilder16.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.deleteFirst(strMatcher35);
        boolean boolean41 = strBuilder0.contains("true\n");
        java.lang.String str44 = strBuilder0.substring(0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder0.appendSeparator("59.052.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNullText("35.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        java.lang.String str52 = strBuilder51.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.trim();
        int int55 = strBuilder51.indexOf("a10\n");
        java.lang.StringBuffer stringBuffer56 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.append(stringBuffer56);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder46.insert(51, (double) 13);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer56);
        org.junit.Assert.assertEquals(stringBuffer56.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test06332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06332");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert((int) (byte) 0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendSeparator('0', '#');
        java.lang.StringBuffer stringBuffer19 = strBuilder18.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendFixedWidthPadRight(190, 21, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.deleteCharAt(0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(stringBuffer19);
        org.junit.Assert.assertEquals(stringBuffer19.toString(), "false0");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test06333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06333");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setEmptyTokenAsNull(false);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        int int31 = strBuilder21.indexOf(strMatcher29);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher29, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer6.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append(stringBuffer54);
        java.io.Writer writer56 = strBuilder55.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        java.lang.String str60 = strBuilder59.getNullText();
        char[] charArray62 = new char[] { 'a' };
        char[] charArray63 = strBuilder59.getChars(charArray62);
        char[] charArray68 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray69 = strBuilder59.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        writer56.write(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer46.reset(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder1.append(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder1.append((float) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((double) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.appendln(true);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test06334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06334");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream1 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        boolean boolean7 = strBuilder0.startsWith(" ");
        char[] charArray14 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        int int25 = strBuilder15.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher30, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setEmptyTokenAsNull(false);
        java.lang.Object obj38 = strTokenizer37.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray41 = strTokenizer40.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.appendAll((java.lang.Object[]) strArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        java.lang.Throwable throwable50 = null;
        java.io.IOException iOException51 = new java.io.IOException("", throwable50);
        java.io.IOException iOException52 = new java.io.IOException("#4#a4#", throwable50);
        java.io.IOException iOException53 = new java.io.IOException(throwable50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray57 = new java.lang.Object[] { 1.0f, iOException53, false, 100, strBuilder56 };
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.appendWithSeparators(objArray57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder69.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendln(10L);
        int int75 = strBuilder69.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder66.appendln(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder66.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder0.append((java.lang.CharSequence) "java.io.IOException: ");
        java.util.stream.IntStream intStream83 = strBuilder0.codePoints();
        org.junit.Assert.assertNotNull(intStream1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(intStream83);
    }

    @Test
    public void test06335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06335");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert(4, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln("0\nfalse32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.insert((int) (byte) 1, 'a');
        java.util.stream.IntStream intStream71 = strBuilder62.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((long) '#');
        java.util.stream.IntStream intStream79 = strBuilder76.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder76.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder76.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder76.appendFixedWidthPadRight((java.lang.Object) strMatcher87, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder62.appendln((java.lang.Object) strMatcher87);
        boolean boolean92 = strBuilder30.equalsIgnoreCase(strBuilder91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder30.deleteFirst('\000');
        int int97 = strBuilder30.indexOf("", 53);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(intStream71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(intStream79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test06336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06336");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setTrimmerMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer10.reset("0.012true104444444444444444444444444444444444444444444444  \n");
        int int17 = strTokenizer10.previousIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test06337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06337");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteAll('f');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test06338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06338");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        java.io.Reader reader7 = strBuilder6.asReader();
        int int9 = strBuilder6.indexOf('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append((double) (-1));
        java.lang.String str14 = strBuilder6.substring((int) '\000', 70);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder6.replace(0, 66, "a.io.IOExceptionfalse1001.0\n35.0\n#4#a4#\n");
        int int20 = strBuilder6.lastIndexOf('0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "100.0-1.0" + "'", str14, "100.0-1.0");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 31 + "'", int20 == 31);
    }

    @Test
    public void test06339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06339");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset();
        java.lang.String str5 = strTokenizer4.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setDelimiterChar('a');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test06340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06340");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteFirst(strMatcher21);
        int int24 = strBuilder2.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder2.appendFixedWidthPadLeft((int) (short) 0, (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test06341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06341");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        java.io.Reader reader25 = strBuilder5.asReader();
        reader25.close();
        reader25.mark((int) '4');
        reader25.mark((int) '\000');
        reader25.close();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader25);
    }

    @Test
    public void test06342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06342");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst(' ', ' ');
        int int10 = strBuilder8.lastIndexOf('1');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test06343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06343");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append('#');
        java.lang.String str15 = strBuilder12.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.append(false);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterString("hi!");
        boolean boolean48 = strTokenizer45.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder32.appendFixedWidthPadRight((java.lang.Object) strTokenizer45, 10, ' ');
        java.lang.String str52 = strTokenizer45.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder23.appendAll((java.util.Iterator<java.lang.String>) strTokenizer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder23.appendFixedWidthPadRight((int) (short) 1, (int) '#', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder12.appendln((java.lang.Object) '#');
        boolean boolean60 = strBuilder12.contains("0\n1false0\n\n#");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test06344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06344");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.ensureCapacity((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendSeparator('0', (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        java.lang.Throwable throwable45 = null;
        java.io.IOException iOException46 = new java.io.IOException("", throwable45);
        java.io.IOException iOException47 = new java.io.IOException("#4#a4#", throwable45);
        java.io.IOException iOException48 = new java.io.IOException(throwable45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray52 = new java.lang.Object[] { 1.0f, iOException48, false, 100, strBuilder51 };
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder41.appendWithSeparators(objArray52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder56.setLength((int) ' ');
        char[] charArray70 = strBuilder67.toCharArray((int) ' ', (int) 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder37.replace(strMatcher71, "100.012", 66, 10, 15);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(strMatcher71);
    }

    @Test
    public void test06345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06345");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'I');
    }

    @Test
    public void test06346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06346");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setTrimmerMatcher(strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        java.lang.String[] strArray16 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer14.setIgnoreEmptyTokens(true);
        boolean boolean19 = strTokenizer18.hasNext();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06347");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterChar(' ');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer20.add("onfalse1001.0\n35.0\n1false0\n\ne104444444444444444444444444444444444444444444444  \n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
    }

    @Test
    public void test06348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06348");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = strList12.get(23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 23, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
    }

    @Test
    public void test06349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06349");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) '4');
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.Throwable throwable24 = null;
        java.io.IOException iOException25 = new java.io.IOException("", throwable24);
        java.io.IOException iOException26 = new java.io.IOException("#4#a4#", throwable24);
        java.io.IOException iOException27 = new java.io.IOException(throwable24);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 1.0f, iOException27, false, 100, strBuilder30 };
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder20.appendWithSeparators(objArray31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.append(true);
        int int46 = strBuilder43.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.insert(1, (float) (short) -1);
        java.io.Writer writer53 = strBuilder52.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln(strBuilder63, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.insert(2, (java.lang.Object) strBuilder73);
        char[] charArray75 = strBuilder68.toCharArray();
        writer53.write(charArray75, 0, 6);
        int int81 = reader13.read(charArray75, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '1');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(writer53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "10\nhi!1.0java.io.IOExceptionfalse1001.0\n35.0\nhi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "10\nhi!1.0java.io.IOExceptionfalse1001.0\n35.0\nhi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[1, 0, \n, h, i, !, 1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, h, i, !]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strMatcher84);
    }

    @Test
    public void test06350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06350");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendNewLine();
        java.lang.String str20 = strBuilder19.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append("");
        int int23 = strBuilder19.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 60 + "'", int23 == 60);
    }

    @Test
    public void test06351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06351");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        java.util.Iterator<java.lang.String> strItor8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendAll(strItor8);
        boolean boolean11 = strBuilder0.equals((java.lang.Object) (-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.insert((int) (short) 1, (float) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("StrTokenizer[not tokenized yet]\n");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test06352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06352");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendln((long) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder5.setLength(100);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int55 = strBuilder50.indexOf(strMatcher53, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        char[] charArray66 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int70 = strBuilder67.indexOf(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int76 = strBuilder73.indexOf(strMatcher75);
        int int77 = strBuilder67.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int83 = strBuilder80.indexOf(strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher82, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher59, strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder33.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer88, "0\nzinekoTrtSeslaf ");
        boolean boolean91 = strTokenizer88.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test06353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06353");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.lang.String str47 = strList26.get(1);
        strList26.add(1, "1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        java.util.Iterator<java.lang.String> strItor51 = strList26.iterator();
        java.util.stream.Stream<java.lang.String> strStream52 = strList26.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.clear();
        char[] charArray62 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder55.appendln(charArray62);
        int int67 = strBuilder64.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String str72 = strBuilder71.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.setNullText("hi!");
        boolean boolean76 = strBuilder71.endsWith(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.replaceFirst("#", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int83 = strBuilder80.indexOf(strMatcher82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder85.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder89.clear();
        int int91 = strBuilder89.capacity();
        boolean boolean92 = strBuilder86.equals(strBuilder89);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder79.appendFixedWidthPadRight((java.lang.Object) strBuilder86, (int) '3', 'a');
        boolean boolean96 = strList26.remove((java.lang.Object) 'a');
        java.util.ListIterator<java.lang.String> strItor97 = strList26.listIterator();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 32 + "'", int91 == 32);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(strItor97);
    }

    @Test
    public void test06354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06354");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(10L);
        int int9 = strBuilder3.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNewLineText(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.appendPadding((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setLength((int) (byte) 10);
        java.io.Reader reader34 = strBuilder33.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.ensureCapacity(39);
        boolean boolean46 = strBuilder44.endsWith(".0jav");
        char[] charArray51 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        char[] charArray53 = strBuilder44.getChars(charArray51);
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setDelimiterString("hi!");
        java.lang.String str65 = strTokenizer64.nextToken();
        java.util.List<java.lang.String> strList66 = strTokenizer64.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("hi!");
        java.lang.String str70 = strBuilder69.getNullText();
        char[] charArray72 = new char[] { 'a' };
        char[] charArray73 = strBuilder69.getChars(charArray72);
        char[] charArray78 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray79 = strBuilder69.getChars(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray79);
        int int81 = strList66.indexOf((java.lang.Object) charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int87 = strTokenizer86.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer86.setTrimmerMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher85, strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder33.replaceFirst(strMatcher89, " a10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder17.replaceAll(strMatcher89, "#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test06355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06355");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        char[] charArray9 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterString("hi!");
        java.lang.String str14 = strTokenizer13.nextToken();
        java.util.List<java.lang.String> strList15 = strTokenizer13.getTokenList();
        boolean boolean17 = strList15.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str20 = strTokenizer19.getContent();
        boolean boolean21 = strList15.equals((java.lang.Object) strTokenizer19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer19.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        java.lang.Throwable throwable31 = null;
        java.io.IOException iOException32 = new java.io.IOException("", throwable31);
        java.io.IOException iOException33 = new java.io.IOException("#4#a4#", throwable31);
        java.io.IOException iOException34 = new java.io.IOException(throwable31);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray38 = new java.lang.Object[] { 1.0f, iOException34, false, 100, strBuilder37 };
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder27.appendWithSeparators(objArray38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln((float) '#');
        boolean boolean46 = strBuilder42.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        java.lang.String str51 = strBuilder50.getNullText();
        char[] charArray53 = new char[] { 'a' };
        char[] charArray54 = strBuilder50.getChars(charArray53);
        char[] charArray59 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray60 = strBuilder50.getChars(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder42.insert(0, charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer19.setQuoteMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("0.012true104444444444444444444444444444444444444444444444  \n", strMatcher2, strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getIgnoredMatcher();
        boolean boolean68 = strTokenizer66.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test06356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06356");
        java.io.IOException iOException2 = new java.io.IOException("");
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        java.io.IOException iOException7 = new java.io.IOException("hi!", throwable5);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        iOException2.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("a4aa# ", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test06357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06357");
        char[] charArray7 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        int int18 = strBuilder8.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList23 = strTokenizer20.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = strList23.remove((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strList23);
    }

    @Test
    public void test06358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06358");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append(false);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("hi!");
        boolean boolean27 = strTokenizer24.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder11.appendFixedWidthPadRight((java.lang.Object) strTokenizer24, 10, ' ');
        int int31 = strTokenizer24.previousIndex();
        boolean boolean32 = strTokenizer24.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer24.reset("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.deleteFirst(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.minimizeCapacity();
        char[] charArray59 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int69 = strBuilder66.indexOf(strMatcher68);
        int int70 = strBuilder60.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder51.replace(strMatcher68, "", 2, (int) (short) 100, 10);
        char[] charArray79 = strBuilder51.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.deleteFirst("hi!");
        java.lang.String str84 = strBuilder83.getNullText();
        char[] charArray86 = new char[] { 'a' };
        char[] charArray87 = strBuilder83.getChars(charArray86);
        int int91 = strMatcher80.isMatch(charArray87, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer34.setDelimiterMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder3.deleteAll(strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder96.appendln((-1.0f));
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test06359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06359");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int23 = strBuilder9.lastIndexOf(strMatcher21, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder9.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendSeparator(" 10\n\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test06360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06360");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        strList27.add((int) (byte) 1, "0.012true104444444444444444444444444444444444444444444444  \n");
        boolean boolean65 = strList27.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.clear();
        java.lang.String str71 = strBuilder69.rightString((int) (short) -1);
        java.lang.String str73 = strBuilder69.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setIgnoreEmptyTokens(false);
        int int80 = strTokenizer77.previousIndex();
        java.lang.Object obj81 = strTokenizer77.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder69.append((java.lang.Object) strTokenizer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.reverse();
        boolean boolean84 = strList27.remove((java.lang.Object) strBuilder83);
        strList27.clear();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test06361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06361");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("100.0false\n");
        int int12 = strBuilder0.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("hi!");
        boolean boolean38 = strTokenizer35.isIgnoreEmptyTokens();
        java.lang.String str39 = strTokenizer35.next();
        int int40 = strList25.indexOf((java.lang.Object) strTokenizer35);
        java.util.ListIterator<java.lang.String> strItor42 = strList25.listIterator((int) (byte) 0);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("hi!");
        boolean boolean60 = strTokenizer57.isIgnoreEmptyTokens();
        java.lang.String str61 = strTokenizer57.next();
        int int62 = strList47.indexOf((java.lang.Object) strTokenizer57);
        java.util.ListIterator<java.lang.String> strItor64 = strList47.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor65 = strList47.iterator();
        boolean boolean66 = strList25.removeAll((java.util.Collection<java.lang.String>) strList47);
        java.util.Iterator<java.lang.String> strItor67 = strList25.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) strItor67, (int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln('a');
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("hi!");
        java.lang.String str84 = strTokenizer83.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer83.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.reset("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getTrimmerMatcher();
        int int91 = strBuilder70.indexOf(strMatcher89, (int) (short) 100);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("1.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer("1false0\n1.0", strMatcher89, strMatcher93);
        int int96 = strBuilder0.lastIndexOf(strMatcher89, 72);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#4#a4#" + "'", str39, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strItor42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#4#a4#" + "'", str61, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "#4#a4#" + "'", str84, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test06362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06362");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        boolean boolean60 = strList27.retainAll((java.util.Collection<java.lang.String>) strList57);
        java.util.ListIterator<java.lang.String> strItor61 = strList27.listIterator();
        java.io.IOException[] iOExceptionArray62 = new java.io.IOException[] {};
        java.io.IOException[] iOExceptionArray63 = strList27.toArray(iOExceptionArray62);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor65 = strList27.listIterator((int) 'f');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 102");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strItor61);
        org.junit.Assert.assertNotNull(iOExceptionArray62);
        org.junit.Assert.assertNotNull(iOExceptionArray63);
    }

    @Test
    public void test06363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06363");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append("#4#a4#");
        java.lang.String str21 = strBuilder14.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(false);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        boolean boolean43 = strTokenizer40.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder27.appendFixedWidthPadRight((java.lang.Object) strTokenizer40, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        boolean boolean57 = strBuilder27.equalsIgnoreCase(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.reverse();
        java.lang.StringBuffer stringBuffer59 = strBuilder58.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder14.append(stringBuffer59, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder13.appendln(stringBuffer59);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator("StrTokeniz", "1false0\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#4#a4#" + "'", str21, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(stringBuffer59);
        org.junit.Assert.assertEquals(stringBuffer59.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test06364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06364");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.appendNull();
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append(stringBuffer10, (int) '4', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.appendln((java.lang.Object) stringBuffer10);
        java.lang.String str16 = strBuilder14.leftString((int) '1');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\n" + "'", str16, "\n");
    }

    @Test
    public void test06365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06365");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("100.01210\n", 'I', '3');
        java.lang.String str4 = strTokenizer3.nextToken();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList5.replaceAll(strUnaryOperator6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "100.01210\n" + "'", str4, "100.01210\n");
        org.junit.Assert.assertNotNull(strList5);
    }

    @Test
    public void test06366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06366");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        int int32 = strBuilder18.indexOf(" a0\ntrue\n", 102);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test06367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06367");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        int int24 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, (int) '4', 'a');
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        java.lang.String str39 = strTokenizer38.nextToken();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        boolean boolean42 = strList40.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str45 = strTokenizer44.getContent();
        boolean boolean46 = strList40.equals((java.lang.Object) strTokenizer44);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        java.lang.String str52 = strBuilder51.getNullText();
        char[] charArray54 = new char[] { 'a' };
        char[] charArray55 = strBuilder51.getChars(charArray54);
        int int57 = strMatcher48.isMatch(charArray55, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer44.setDelimiterMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder27.deleteAll(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendSeparator('4', 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst('e', '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#4#a4#" + "'", str39, "#4#a4#");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test06368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06368");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendSeparator("true\n", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendln("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendln((double) 59);
        java.util.stream.IntStream intStream25 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.deleteFirst('\000');
        java.lang.String str30 = strBuilder27.midString(95, 16);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test06369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06369");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.trim();
        java.lang.String str13 = strBuilder11.rightString(32);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10" + "'", str13, "10");
    }

    @Test
    public void test06370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06370");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.setNewLineText("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll(" \n", "java.io.IOException: StrTokenizer[");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int38 = strBuilder35.lastIndexOf(strMatcher36, (int) (short) 10);
        boolean boolean39 = strBuilder14.contains(strMatcher36);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        java.lang.String str51 = strTokenizer50.nextToken();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer50.setTrimmerMatcher(strMatcher53);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        int int66 = strMatcher53.isMatch(charArray61, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher36, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getDelimiterMatcher();
        java.lang.String[] strArray69 = strTokenizer67.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer67, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder7.deleteAll('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteAll('0');
        int int77 = strBuilder73.indexOf("a4 4");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "#4#a4#" + "'", str51, "#4#a4#");
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test06371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06371");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        boolean boolean9 = strBuilder0.contains("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        java.lang.Throwable throwable17 = null;
        java.io.IOException iOException18 = new java.io.IOException("", throwable17);
        java.io.IOException iOException19 = new java.io.IOException("#4#a4#", throwable17);
        java.io.IOException iOException20 = new java.io.IOException(throwable17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray24 = new java.lang.Object[] { 1.0f, iOException20, false, 100, strBuilder23 };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.appendWithSeparators(objArray24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln((double) (short) 1);
        int int31 = strBuilder26.lastIndexOf("java.io.IOException: ", (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        java.lang.String str36 = strBuilder35.getNullText();
        char[] charArray38 = new char[] { 'a' };
        char[] charArray39 = strBuilder35.getChars(charArray38);
        int int43 = strMatcher32.isMatch(charArray39, 0, 0, (int) (byte) 10);
        char[] charArray44 = strBuilder26.getChars(charArray39);
        char[] charArray45 = strBuilder0.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
    }

    @Test
    public void test06372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06372");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setEmptyTokenAsNull(false);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        int int31 = strBuilder21.indexOf(strMatcher29);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher29, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer6.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append(stringBuffer54);
        java.io.Writer writer56 = strBuilder55.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        java.lang.String str60 = strBuilder59.getNullText();
        char[] charArray62 = new char[] { 'a' };
        char[] charArray63 = strBuilder59.getChars(charArray62);
        char[] charArray68 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray69 = strBuilder59.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        writer56.write(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer46.reset(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder1.append(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        java.util.List<java.lang.String> strList77 = strTokenizer76.getTokenList();
        boolean boolean79 = strList77.add("1");
        boolean boolean80 = strList77.isEmpty();
        boolean boolean82 = strList77.add("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test06373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06373");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset("##4#a4#");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test06374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06374");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.io.Reader reader13 = strBuilder10.asReader();
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray20);
        int int25 = reader13.read(charArray20);
        int int27 = strMatcher9.isMatch(charArray20, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer7.setIgnoredMatcher(strMatcher9);
        java.lang.String[] strArray29 = strTokenizer7.getTokenArray();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strArray29);
    }

    @Test
    public void test06375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06375");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("100.01");
    }

    @Test
    public void test06376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06376");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendPadding((int) (short) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int12 = strBuilder9.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.append(false);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        boolean boolean30 = strTokenizer27.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.appendFixedWidthPadRight((java.lang.Object) strTokenizer27, 10, ' ');
        int int34 = strTokenizer27.previousIndex();
        boolean boolean35 = strTokenizer27.isIgnoreEmptyTokens();
        java.lang.String[] strArray36 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder2.appendWithSeparators((java.lang.Object[]) strArray36, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        java.lang.Throwable throwable46 = null;
        java.io.IOException iOException47 = new java.io.IOException("", throwable46);
        java.io.IOException iOException48 = new java.io.IOException("#4#a4#", throwable46);
        java.io.IOException iOException49 = new java.io.IOException(throwable46);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1.0f, iOException49, false, 100, strBuilder52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.appendWithSeparators(objArray53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str67 = strTokenizer66.getContent();
        char[] charArray73 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer66.reset(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.setIgnoredChar('a');
        boolean boolean83 = strTokenizer80.isIgnoreEmptyTokens();
        java.lang.String str84 = strTokenizer80.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder62.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer80, "java.io.IOException: StrTokenizer[");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer80.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder2.deleteAll(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4" + "'", str84, "4");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test06377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06377");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str18 = strBuilder17.getNullText();
        char[] charArray20 = new char[] { 'a' };
        char[] charArray21 = strBuilder17.getChars(charArray20);
        char[] charArray26 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray27 = strBuilder17.getChars(charArray26);
        java.io.Reader reader28 = strBuilder17.asReader();
        reader28.mark(10);
        reader28.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        char[] charArray41 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.appendln(charArray41);
        int int44 = reader28.read(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '0', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder12.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer51, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll('.');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test06378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06378");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(1, (float) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        java.lang.Throwable throwable17 = null;
        java.io.IOException iOException18 = new java.io.IOException("", throwable17);
        java.io.IOException iOException19 = new java.io.IOException("#4#a4#", throwable17);
        java.io.IOException iOException20 = new java.io.IOException(throwable17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray24 = new java.lang.Object[] { 1.0f, iOException20, false, 100, strBuilder23 };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.appendWithSeparators(objArray24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.String str32 = strBuilder30.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder13.append((java.lang.CharSequence) str32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder9.append(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.insert(35, (float) 12L);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.replaceFirst("1fal", "java.io.IOException: java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(0.0d);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test06379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06379");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setDelimiterChar('a');
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        int int18 = strTokenizer17.nextIndex();
        int int19 = strTokenizer17.nextIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test06380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06380");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        java.lang.String str25 = strTokenizer18.next();
        boolean boolean26 = strTokenizer18.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        char[] charArray36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln(charArray36);
        boolean boolean38 = strBuilder35.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        boolean boolean44 = strBuilder43.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        int int55 = strMatcher46.isMatch(charArray53, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.append(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder35.insert((int) (byte) 1, charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        int int64 = strMatcher27.isMatch(charArray53, 80, 102, (int) (short) 0);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4#a4#" + "'", str25, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test06381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06381");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        char[] charArray22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln(charArray22);
        int int24 = strBuilder23.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.deleteAll("100.0false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int51 = strBuilder46.indexOf(strMatcher49, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder38.replace(strMatcher49, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("10\n100.0", strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder26.deleteFirst(strMatcher49);
        int int59 = strBuilder11.indexOf(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test06382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06382");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.setNewLineText(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append(false);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("hi!");
        boolean boolean37 = strTokenizer34.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strTokenizer34, 10, ' ');
        java.lang.String str41 = strTokenizer34.next();
        boolean boolean42 = strTokenizer34.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer34.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder15.deleteFirst(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("##a#", strMatcher43, strMatcher49);
        int int51 = strTokenizer50.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setDelimiterChar('I');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test06383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06383");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        boolean boolean20 = strList18.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str23 = strTokenizer22.getContent();
        boolean boolean24 = strList18.equals((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean26 = strList18.equals((java.lang.Object) strMatcher25);
        boolean boolean27 = strList4.addAll((java.util.Collection<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "");
        int int47 = strBuilder28.size();
        boolean boolean48 = strList18.remove((java.lang.Object) strBuilder28);
        java.util.stream.Stream<java.lang.String> strStream49 = strList18.parallelStream();
        strList18.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strStream49);
    }

    @Test
    public void test06384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06384");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoredChar('4');
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str18 = strBuilder17.getNullText();
        char[] charArray20 = new char[] { 'a' };
        char[] charArray21 = strBuilder17.getChars(charArray20);
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        java.lang.String str29 = strBuilder28.getNullText();
        char[] charArray31 = new char[] { 'a' };
        char[] charArray32 = strBuilder28.getChars(charArray31);
        char[] charArray33 = strBuilder25.getChars(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer13.reset(charArray31);
        java.lang.String str35 = strTokenizer13.next();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str14, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "a" + "'", str35, "a");
    }

    @Test
    public void test06385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06385");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append(2);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        int int39 = strTokenizer37.size();
        java.lang.String str40 = strTokenizer37.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer37.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList43 = strTokenizer37.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.clear();
        boolean boolean48 = strBuilder47.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        java.lang.String str54 = strBuilder53.getNullText();
        char[] charArray56 = new char[] { 'a' };
        char[] charArray57 = strBuilder53.getChars(charArray56);
        int int59 = strMatcher50.isMatch(charArray57, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder47.append(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setIgnoreEmptyTokens(true);
        boolean boolean66 = strTokenizer63.hasNext();
        boolean boolean67 = strList43.contains((java.lang.Object) strTokenizer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder23.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer63.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(" falseStrTokeniz", strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder10.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer70, "1.1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = strBuilder72.substring(112, (int) '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#" + "'", str40, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test06386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06386");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.replaceAll('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder3.append('c');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        java.lang.String str26 = strBuilder25.getNullText();
        char[] charArray28 = new char[] { 'a' };
        char[] charArray29 = strBuilder25.getChars(charArray28);
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.append(stringBuffer30);
        java.io.Writer writer32 = strBuilder31.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        java.lang.String str36 = strBuilder35.getNullText();
        char[] charArray38 = new char[] { 'a' };
        char[] charArray39 = strBuilder35.getChars(charArray38);
        char[] charArray44 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray45 = strBuilder35.getChars(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        writer32.write(charArray44);
        writer32.write("0java.io.IOExceptionfalse100", 4, 4);
        writer32.flush();
        java.io.Writer writer54 = writer32.append('4');
        writer32.close();
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        writer32.write(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder22.append(charArray62);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(writer32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test06387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06387");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.append(strBuilder24, 5, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteCharAt(72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test06388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06388");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(1, (long) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendSeparator("#4");
        char char13 = strBuilder11.charAt(0);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setDelimiterString("hi!");
        java.lang.String str25 = strTokenizer24.nextToken();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        java.lang.String str30 = strBuilder29.getNullText();
        char[] charArray32 = new char[] { 'a' };
        char[] charArray33 = strBuilder29.getChars(charArray32);
        char[] charArray38 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray39 = strBuilder29.getChars(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        int int41 = strList26.indexOf((java.lang.Object) charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder11.appendln(charArray39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.insert(37, (double) 109);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 37");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + char13 + "' != '" + '3' + "'", char13 == '3');
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4#a4#" + "'", str25, "#4#a4#");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test06389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06389");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        java.lang.String str17 = strBuilder14.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendln(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("\000\000\000\0004");
        java.lang.String str23 = strBuilder20.midString((-1), 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        java.lang.String str39 = strBuilder38.getNullText();
        char[] charArray41 = new char[] { 'a' };
        char[] charArray42 = strBuilder38.getChars(charArray41);
        char[] charArray47 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray48 = strBuilder38.getChars(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder29.appendln(charArray47, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.appendln((int) (short) 10);
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getIgnoredMatcher();
        int int82 = strBuilder63.indexOf(strMatcher80, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher57, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '\000', '3');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "0\nfalse32.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder20.appendln(charArray47, 17, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1fal" + "'", str23, "1fal");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strMatcher84);
    }

    @Test
    public void test06390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06390");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", '#', '#');
        java.lang.String str4 = strTokenizer3.toString();
        int int5 = strTokenizer3.nextIndex();
        int int6 = strTokenizer3.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str9 = strTokenizer8.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        java.io.Reader reader25 = strBuilder14.asReader();
        reader25.mark(10);
        reader25.close();
        boolean boolean29 = reader25.markSupported();
        int int30 = reader25.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        char[] charArray42 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray43 = strBuilder33.getChars(charArray42);
        java.io.Reader reader44 = strBuilder33.asReader();
        long long46 = reader44.skip((long) 59);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        int int69 = strBuilder59.indexOf(strMatcher67);
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher67, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray53);
        int int85 = reader44.read(charArray53);
        int int86 = reader25.read(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer11.reset(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer3.reset(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        int int92 = strTokenizer91.previousIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test06391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06391");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        boolean boolean4 = strTokenizer1.hasNext();
        int int5 = strTokenizer1.size();
        boolean boolean6 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer1.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.add("  \n a10\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test06392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06392");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        boolean boolean20 = strList18.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str23 = strTokenizer22.getContent();
        boolean boolean24 = strList18.equals((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean26 = strList18.equals((java.lang.Object) strMatcher25);
        boolean boolean27 = strList4.addAll((java.util.Collection<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "");
        int int47 = strBuilder28.size();
        boolean boolean48 = strList18.remove((java.lang.Object) strBuilder28);
        java.util.stream.Stream<java.lang.String> strStream49 = strList18.parallelStream();
        java.lang.Object[] objArray50 = strList18.toArray();
        int int51 = strList18.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[#4#a4#, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[#4#a4#, hi!]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
    }

    @Test
    public void test06393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06393");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("StrTokenizer[not tokenized yet]");
        int int14 = strBuilder10.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str18 = strBuilder17.getNullText();
        char[] charArray20 = new char[] { 'a' };
        char[] charArray21 = strBuilder17.getChars(charArray20);
        char[] charArray26 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray27 = strBuilder17.getChars(charArray26);
        java.io.Reader reader28 = strBuilder17.asReader();
        reader28.mark(10);
        reader28.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        char[] charArray41 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.appendln(charArray41);
        int int44 = reader28.read(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        java.lang.String str48 = strBuilder47.getNullText();
        char[] charArray50 = new char[] { 'a' };
        char[] charArray51 = strBuilder47.getChars(charArray50);
        char[] charArray56 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray57 = strBuilder47.getChars(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        int int60 = reader28.read(charArray56);
        reader28.reset();
        int int62 = reader28.read();
        boolean boolean63 = reader28.ready();
        boolean boolean64 = reader28.ready();
        reader28.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder10.append((java.lang.Object) reader28);
        boolean boolean68 = strBuilder66.contains(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test06394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06394");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.reverse();
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder7.append(stringBuffer52, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append(stringBuffer52);
        int int59 = strBuilder0.lastIndexOf('a', 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder0.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst('4');
        int int68 = strBuilder65.indexOf("a.io.IOExceptionfalse100#4#a4#hi!", 80);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 16 + "'", int59 == 16);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test06395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06395");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        reader13.mark(48);
        long long20 = reader13.skip(0L);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int42 = strBuilder37.indexOf(strMatcher40, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "eslf\n\n181111");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher47);
        int int49 = reader13.read(charArray27);
        reader13.mark(5);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test06396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06396");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        java.lang.Throwable throwable15 = null;
        java.io.IOException iOException16 = new java.io.IOException("", throwable15);
        java.io.IOException iOException17 = new java.io.IOException("#4#a4#", throwable15);
        java.io.IOException iOException18 = new java.io.IOException(throwable15);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1.0f, iOException18, false, 100, strBuilder21 };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendWithSeparators(objArray22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) strBuilder31, (int) (byte) 1, ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln(".0jva.io.IOExceptionfalse100", (int) 'a', 36);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test06397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06397");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.setCharAt(1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replace(3, 48, "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendSeparator('3', (int) '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.setNullText("eptionfalse1001.0\n35.0\n1false0\n\n");
        int int40 = strBuilder37.lastIndexOf("", 36);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
    }

    @Test
    public void test06398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06398");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("");
        int int2 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.deleteFirst("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.append(false);
        java.io.Reader reader7 = strBuilder4.asReader();
        boolean boolean8 = reader7.markSupported();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) '#');
        java.util.stream.IntStream intStream17 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int33 = strBuilder30.lastIndexOf(strMatcher31, (int) (short) 10);
        int int35 = strBuilder14.indexOf(strMatcher31, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer9.setTrimmerMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer9.getIgnoredMatcher();
        char[] charArray44 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        int int55 = strBuilder45.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher53);
        int int60 = strMatcher37.isMatch(charArray44, 19, (int) 'a', (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = reader7.read(charArray44, 25, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test06399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06399");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        java.lang.String str32 = strTokenizer31.nextToken();
        java.util.List<java.lang.String> strList33 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer31.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.append((java.lang.Object) strTokenizer35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.setCharAt(61, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 61");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str36, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test06400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06400");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setTrimmerMatcher(strMatcher5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setIgnoredMatcher(strMatcher10);
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06401");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoreEmptyTokens(true);
        boolean boolean22 = strTokenizer19.hasNext();
        char[] charArray28 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln((long) '#');
        java.util.stream.IntStream intStream38 = strBuilder35.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int54 = strBuilder51.lastIndexOf(strMatcher52, (int) (short) 10);
        int int56 = strBuilder35.indexOf(strMatcher52, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer30.setTrimmerMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer29.setQuoteMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        java.lang.String str63 = strBuilder62.getNullText();
        char[] charArray65 = new char[] { 'a' };
        char[] charArray66 = strBuilder62.getChars(charArray65);
        char[] charArray71 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray72 = strBuilder62.getChars(charArray71);
        java.io.Reader reader73 = strBuilder62.asReader();
        reader73.mark(10);
        reader73.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder79.clear();
        char[] charArray86 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder79.appendln(charArray86);
        int int89 = reader73.read(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, ' ', ' ');
        int int94 = strMatcher58.isMatch(charArray86, 13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer19.setIgnoredMatcher(strMatcher58);
        int int96 = strTokenizer95.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test06402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06402");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.reverse();
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder7.append(stringBuffer52, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append(stringBuffer52);
        int int59 = strBuilder0.indexOf("StrTokenizer[not tokenized yet]", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder0.insert((int) (byte) 10, (float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder0.appendSeparator('a', 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder0.appendPadding((int) (byte) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append("100.01210");
        java.io.Writer writer71 = strBuilder70.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.append('f');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.appendFixedWidthPadLeft(15, 20, 'I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(writer71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test06403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06403");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        java.util.ListIterator<java.lang.String> strItor58 = strList4.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln(strBuilder65, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        java.lang.String str72 = strBuilder71.getNullText();
        char[] charArray74 = new char[] { 'a' };
        char[] charArray75 = strBuilder71.getChars(charArray74);
        char[] charArray80 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray81 = strBuilder71.getChars(charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder71.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder68.append(strBuilder83, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln('0');
        boolean boolean89 = strList4.equals((java.lang.Object) strBuilder86);
        boolean boolean91 = strList4.add("10\n");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test06404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06404");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", '3', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterChar('\000');
        int int8 = strTokenizer7.size();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test06405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06405");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(4, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.ensureCapacity(66);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("hi!");
        boolean boolean45 = strTokenizer42.isIgnoreEmptyTokens();
        int int46 = strTokenizer42.nextIndex();
        int int47 = strTokenizer42.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer42.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer42.getTrimmerMatcher();
        int int52 = strBuilder28.indexOf(strMatcher50, 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder28.appendPadding((int) 'f', 'e');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test06406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06406");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean28 = strBuilder27.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        java.lang.String str44 = strBuilder43.getNullText();
        char[] charArray46 = new char[] { 'a' };
        char[] charArray47 = strBuilder43.getChars(charArray46);
        char[] charArray52 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray53 = strBuilder43.getChars(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.appendln(charArray52, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder27.appendln(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder27.appendSeparator("100.0false", "aa4#4\n");
        int int64 = strBuilder62.lastIndexOf("\n59\n97\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test06407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06407");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        int int14 = strBuilder12.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst("StrTokenizer[not tokenized yet]", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int21 = strBuilder18.indexOf(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln((int) (short) 10);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getIgnoredMatcher();
        int int42 = strBuilder23.indexOf(strMatcher40, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder23.appendSeparator('4', '#');
        int int46 = strBuilder23.capacity();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setTrimmerMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder23.replaceFirst(strMatcher52, "StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder12.append((java.lang.CharSequence) strBuilder55);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray59 = strBuilder55.toCharArray(37, 40);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test06408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06408");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getQuoteMatcher();
        boolean boolean17 = strTokenizer15.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.replace(strMatcher18, "java.io.IOException: #4#a4#", 27, 72, 47);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMatcher18);
    }

    @Test
    public void test06409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06409");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        int int24 = strBuilder18.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.replaceFirst(' ', ' ');
        int int51 = strBuilder44.lastIndexOf("#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        java.lang.String str56 = strBuilder55.getNullText();
        char[] charArray58 = new char[] { 'a' };
        char[] charArray59 = strBuilder55.getChars(charArray58);
        char[] charArray64 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray65 = strBuilder55.getChars(charArray64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray65);
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("hi!");
        java.lang.String str78 = strTokenizer77.nextToken();
        java.util.List<java.lang.String> strList79 = strTokenizer77.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer77.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(".0jav", strMatcher66, strMatcher82);
        int int85 = strBuilder44.indexOf(strMatcher82, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder39.replaceFirst(strMatcher82, "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder39.setLength(32);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "#4#a4#" + "'", str78, "#4#a4#");
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test06410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06410");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        boolean boolean4 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.setDelimiterString("StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer1.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("100.0false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.setTrimmerMatcher(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        java.lang.Throwable throwable18 = null;
        java.io.IOException iOException19 = new java.io.IOException("", throwable18);
        java.io.IOException iOException20 = new java.io.IOException("#4#a4#", throwable18);
        java.io.IOException iOException21 = new java.io.IOException(throwable18);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 1.0f, iOException21, false, 100, strBuilder24 };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.appendWithSeparators(objArray25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.appendNull();
        java.io.Reader reader40 = strBuilder39.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteAll('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.setCharAt(22, '0');
        char[] charArray48 = strBuilder44.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            int int52 = strMatcher9.isMatch(charArray48, (int) (short) -1, 2, 65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "1.0java.io.IOException0alse1001.0\n5.0\ntrue\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "1.0java.io.IOException0alse1001.0\n5.0\ntrue\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, 0, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 5, ., 0, \n, t, r, u, e, \n]");
    }

    @Test
    public void test06411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06411");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        boolean boolean5 = strTokenizer3.hasPrevious();
        int int6 = strTokenizer3.previousIndex();
        boolean boolean7 = strTokenizer3.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer3.setDelimiterString("1.0jav");
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test06412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06412");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor45 = strList27.iterator();
        boolean boolean46 = strList4.remove((java.lang.Object) strItor45);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList51.iterator();
        boolean boolean70 = strList4.addAll((java.util.Collection<java.lang.String>) strList51);
        java.util.ListIterator<java.lang.String> strItor72 = strList4.listIterator((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream73 = strList4.parallelStream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertNotNull(strStream73);
    }

    @Test
    public void test06413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06413");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String str10 = strBuilder0.toString();
        int int13 = strBuilder0.lastIndexOf(' ', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(0);
        java.lang.Object[] objArray18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendAll(objArray18);
        int int22 = strBuilder19.indexOf(".IOExceptionfalse1001.0\n3.0a", (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.ensureCapacity(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((long) 65);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#4#a4#" + "'", str10, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test06414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06414");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append(false);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setDelimiterString("hi!");
        boolean boolean80 = strTokenizer77.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder64.appendFixedWidthPadRight((java.lang.Object) strTokenizer77, 10, ' ');
        int int84 = strTokenizer77.previousIndex();
        boolean boolean85 = strTokenizer77.isIgnoreEmptyTokens();
        java.lang.String[] strArray86 = strTokenizer77.getTokenArray();
        java.lang.String str87 = strTokenizer77.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder57.appendAll((java.util.Iterator<java.lang.String>) strTokenizer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder57.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder57.deleteAll("#4#a4#java.io.IOException: 10.0\n-1        ");
        java.lang.String str94 = strBuilder57.rightString(34);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "\n01 false" + "'", str94, "\n01 false");
    }

    @Test
    public void test06415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06415");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int37 = strTokenizer36.nextIndex();
        boolean boolean38 = strTokenizer36.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.trim();
        int int43 = strBuilder42.capacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.insert(31, '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 31");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
    }

    @Test
    public void test06416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06416");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer21, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln((float) 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln((long) '#');
        java.util.stream.IntStream intStream33 = strBuilder30.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int49 = strBuilder46.lastIndexOf(strMatcher47, (int) (short) 10);
        int int51 = strBuilder30.indexOf(strMatcher47, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder30.appendSeparator("a", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder30.append((long) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder30.appendPadding(0, ' ');
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder30.deleteFirst(strMatcher70);
        java.lang.StringBuffer stringBuffer73 = strBuilder30.toStringBuffer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("", '3', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder30.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder30.trim();
        boolean boolean81 = strBuilder23.equals((java.lang.Object) strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(stringBuffer73);
        org.junit.Assert.assertEquals(stringBuffer73.toString(), "35\n10\n\na-1");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test06417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06417");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) ' ');
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("hi!");
        boolean boolean19 = strTokenizer16.isIgnoreEmptyTokens();
        java.lang.String str20 = strTokenizer16.next();
        int int21 = strList6.indexOf((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor23 = strList6.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor24 = strList6.iterator();
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        boolean boolean38 = strList6.equals((java.lang.Object) strTokenizer33);
        java.lang.Object[] objArray39 = strList6.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder1.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList6, "1false0\nfalse");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.insert((int) 'c', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 99");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test06418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06418");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        java.io.Writer writer12 = strBuilder9.asWriter();
        java.io.Writer writer14 = writer12.append('a');
        writer14.close();
        writer14.flush();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(writer14);
    }

    @Test
    public void test06419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06419");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        java.io.Reader reader7 = strBuilder6.asReader();
        int int9 = strBuilder6.indexOf('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        boolean boolean14 = strBuilder13.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        int int25 = strMatcher16.isMatch(charArray23, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.append(charArray23);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        int int49 = strBuilder39.indexOf(strMatcher47);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher47, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher62);
        int int66 = strBuilder6.indexOf(strMatcher62, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder6.ensureCapacity(52);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendln(10L);
        int int77 = strBuilder71.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.appendSeparator("", 1);
        char[] charArray87 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray87);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder80.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer90, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.appendln((float) 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder6.append((java.lang.CharSequence) strBuilder94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strBuilder94.asTokenizer();
        java.util.stream.IntStream intStream97 = strBuilder94.chars();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(intStream97);
    }

    @Test
    public void test06420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06420");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        boolean boolean16 = strTokenizer8.hasPrevious();
        java.lang.String str17 = strTokenizer8.nextToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.set("eslf");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
    }

    @Test
    public void test06421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06421");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.deleteFirst("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test06422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06422");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        java.util.List<java.lang.String> strList5 = strTokenizer4.getTokenList();
        int int6 = strTokenizer4.nextIndex();
        boolean boolean7 = strTokenizer4.hasPrevious();
        java.lang.String str8 = strTokenizer4.previousToken();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test06423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06423");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        java.lang.Object[] objArray12 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendAll(objArray12);
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test06424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06424");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.Throwable throwable35 = null;
        java.io.IOException iOException36 = new java.io.IOException("", throwable35);
        java.io.IOException iOException37 = new java.io.IOException("#4#a4#", throwable35);
        java.io.IOException iOException38 = new java.io.IOException(throwable35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 1.0f, iOException38, false, 100, strBuilder41 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendWithSeparators(objArray42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        int int69 = strBuilder59.indexOf(strMatcher67);
        int int72 = strBuilder59.indexOf("java.io.IOException: StrTokenizer[not tokenized yet]", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder56.appendln(strBuilder59);
        boolean boolean75 = strBuilder56.contains('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder27.appendln(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder27.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test06425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06425");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("0\nzinekoTrtSeslaf ", '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterString("");
        int int5 = strTokenizer4.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = strTokenizer4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test06426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06426");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert(1, (float) (short) -1);
        java.io.Writer writer36 = strBuilder35.asWriter();
        writer36.write("java.io.IOException: 59.0");
        java.io.Writer writer40 = writer36.append('1');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(writer40);
    }

    @Test
    public void test06427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06427");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendln((long) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendln(true);
        int int43 = strBuilder37.lastIndexOf("java.io.IOException: StrTokenizer[#4#a4#]", 4);
        boolean boolean44 = strBuilder31.equalsIgnoreCase(strBuilder37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder31.deleteCharAt((int) '3');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test06428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06428");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        int int15 = strBuilder13.indexOf("1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.insert(4, (float) 32);
        java.io.Writer writer19 = strBuilder18.asWriter();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strBuilder18.asTokenizer();
        java.util.stream.IntStream intStream21 = strBuilder18.chars();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(intStream21);
    }

    @Test
    public void test06429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06429");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.append(charArray8, (int) (short) 100, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((long) '#');
        java.util.stream.IntStream intStream19 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.replaceFirst('4', ' ');
        java.lang.String str25 = strBuilder16.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.appendSeparator('a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(10L);
        int int39 = strBuilder33.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder33.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.insert((int) (byte) 0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder33.appendSeparator('0', '#');
        java.lang.StringBuffer stringBuffer50 = strBuilder49.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder30.append(stringBuffer50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.append(stringBuffer50);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(stringBuffer50);
        org.junit.Assert.assertEquals(stringBuffer50.toString(), "false0");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test06430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06430");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder17.replace(strMatcher22, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int29 = strBuilder11.lastIndexOf(strMatcher22, (int) (short) 100);
        int int31 = strBuilder6.lastIndexOf(strMatcher22, 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendln(strBuilder38, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        java.lang.String str45 = strBuilder44.getNullText();
        char[] charArray47 = new char[] { 'a' };
        char[] charArray48 = strBuilder44.getChars(charArray47);
        char[] charArray53 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray54 = strBuilder44.getChars(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder44.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder41.append(strBuilder56, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder41.appendSeparator('4', '1');
        boolean boolean63 = strBuilder6.equals((java.lang.Object) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder6.appendPadding((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendSeparator('e', '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test06431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06431");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.Object obj5 = strTokenizer4.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setIgnoredChar('e');
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test06432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06432");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendln(10L);
        int int68 = strBuilder62.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder59.appendln(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder59.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder59.insert(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder32.append(strBuilder59);
        java.io.IOException iOException80 = new java.io.IOException("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendFixedWidthPadRight((java.lang.Object) iOException80, 4, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.append((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.appendSeparator('#', 19);
        java.lang.String str89 = strBuilder85.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\ntrueaaaaaaaaaa  1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\njava97#" + "'", str89, "1.0java.io.IOExceptionfalse1001.0\n35.0\ntrueaaaaaaaaaa  1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\njava97#");
    }

    @Test
    public void test06433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06433");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset();
        boolean boolean5 = strTokenizer1.hasPrevious();
        boolean boolean6 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer1.reset(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        java.lang.String str12 = strBuilder11.getNullText();
        char[] charArray14 = new char[] { 'a' };
        char[] charArray15 = strBuilder11.getChars(charArray14);
        char[] charArray20 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray21 = strBuilder11.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        java.util.stream.IntStream intStream28 = strBuilder27.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int31 = strBuilder27.lastIndexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int46 = strBuilder43.lastIndexOf(strMatcher44, (int) (short) -1);
        boolean boolean47 = strBuilder27.contains(strMatcher44);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher61, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher44, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer1.setQuoteMatcher(strMatcher44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = strTokenizer68.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer68);
    }

    @Test
    public void test06434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06434");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(4, 'a');
        char[] charArray32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.append(charArray32, (int) (byte) 0, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendSeparator("java.io.IOException: StrTokenizer[not tokenized yet]");
        java.io.Reader reader38 = strBuilder35.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        java.lang.Throwable throwable46 = null;
        java.io.IOException iOException47 = new java.io.IOException("", throwable46);
        java.io.IOException iOException48 = new java.io.IOException("#4#a4#", throwable46);
        java.io.IOException iOException49 = new java.io.IOException(throwable46);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1.0f, iOException49, false, 100, strBuilder52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.appendWithSeparators(objArray53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendPadding(52, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder35.appendln(strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder35.appendSeparator('.', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder35.replaceFirst("aa4#", "0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder35.replaceAll("1.0java.io.IOExc\n", "o.IOExcept");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test06435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06435");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        int int30 = reader13.read();
        int int31 = reader13.read();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test06436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06436");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        int int24 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, (int) '4', 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = strTokenizer20.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test06437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06437");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendPadding((int) (byte) 1, 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = strBuilder5.substring((int) (byte) 100, 65);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test06438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06438");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        int int14 = strBuilder12.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        boolean boolean32 = strTokenizer29.isIgnoreEmptyTokens();
        java.lang.String str33 = strTokenizer29.next();
        int int34 = strList19.indexOf((java.lang.Object) strTokenizer29);
        java.util.ListIterator<java.lang.String> strItor36 = strList19.listIterator((int) (byte) 0);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setDelimiterString("hi!");
        boolean boolean54 = strTokenizer51.isIgnoreEmptyTokens();
        java.lang.String str55 = strTokenizer51.next();
        int int56 = strList41.indexOf((java.lang.Object) strTokenizer51);
        java.util.ListIterator<java.lang.String> strItor58 = strList41.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor59 = strList41.iterator();
        boolean boolean60 = strList19.removeAll((java.util.Collection<java.lang.String>) strList41);
        boolean boolean62 = strList41.add("java.io.IOException: StrTokenizer[#4#a4#]");
        java.lang.Object[] objArray63 = strList41.toArray();
        java.util.ListIterator<java.lang.String> strItor64 = strList41.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder12.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList41, "0\n 10\n");
        java.util.ListIterator<java.lang.String> strItor67 = strList41.listIterator();
        java.util.Iterator<java.lang.String> strItor68 = strList41.iterator();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#4#a4#" + "'", str55, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[, , , java.io.IOException: StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[, , , java.io.IOException: StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strItor68);
    }

    @Test
    public void test06439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06439");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        java.lang.String str13 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder4.appendSeparator('a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("                                                             ##a#");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test06440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06440");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(strBuilder26, (int) 'a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str31 = strBuilder30.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str36 = strBuilder34.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder23.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.insert((int) (short) 0, "java.io.IOException: ");
        java.io.Reader reader55 = strBuilder51.asReader();
        java.nio.CharBuffer charBuffer56 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int57 = reader55.read(charBuffer56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader55);
    }

    @Test
    public void test06441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06441");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        java.lang.Throwable throwable20 = null;
        java.io.IOException iOException21 = new java.io.IOException("", throwable20);
        java.io.IOException iOException22 = new java.io.IOException("#4#a4#", throwable20);
        java.io.IOException iOException23 = new java.io.IOException(throwable20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1.0f, iOException23, false, 100, strBuilder26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.appendWithSeparators(objArray27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.deleteFirst("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder12.append(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.setNewLineText("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        java.lang.Throwable throwable54 = null;
        java.io.IOException iOException55 = new java.io.IOException("", throwable54);
        java.io.IOException iOException56 = new java.io.IOException("#4#a4#", throwable54);
        java.io.IOException iOException57 = new java.io.IOException(throwable54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 1.0f, iOException57, false, 100, strBuilder60 };
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.appendWithSeparators(objArray61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder65.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNull();
        boolean boolean76 = strBuilder46.equals((java.lang.Object) strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test06442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06442");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        java.lang.String str24 = strTokenizer20.next();
        int int25 = strList10.indexOf((java.lang.Object) strTokenizer20);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int47 = strBuilder44.indexOf(strMatcher46);
        int int48 = strBuilder38.indexOf(strMatcher46);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher46, strMatcher61);
        boolean boolean63 = strList10.equals((java.lang.Object) strMatcher61);
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterString("hi!");
        boolean boolean75 = strTokenizer72.hasNext();
        java.util.List<java.lang.String> strList76 = strTokenizer72.getTokenList();
        java.lang.String[] strArray77 = strTokenizer72.getTokenArray();
        java.lang.CharSequence[] charSequenceArray78 = strList10.toArray((java.lang.CharSequence[]) strArray77);
        boolean boolean79 = strList4.retainAll((java.util.Collection<java.lang.String>) strList10);
        int int80 = strList10.size();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator81 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList10.replaceAll(strUnaryOperator81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
    }

    @Test
    public void test06443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06443");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.deleteAll("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.setCharAt(22, 'I');
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int54 = strBuilder49.indexOf(strMatcher52, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder29.append(charArray39, 36, 18);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 18");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test06444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06444");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.reverse();
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder7.append(stringBuffer52, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append(stringBuffer52);
        int int59 = strBuilder0.indexOf("StrTokenizer[not tokenized yet]", (int) (short) -1);
        boolean boolean61 = strBuilder0.contains("1.0java.io.IOEx");
        int int62 = strBuilder0.capacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
    }

    @Test
    public void test06445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06445");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln((long) '#');
        java.util.stream.IntStream intStream8 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int24 = strBuilder21.lastIndexOf(strMatcher22, (int) (short) 10);
        int int26 = strBuilder5.indexOf(strMatcher22, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer0.setTrimmerMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer0.getIgnoredMatcher();
        char[] charArray35 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        int int46 = strBuilder36.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44);
        int int51 = strMatcher28.isMatch(charArray35, 19, (int) 'a', (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "100.012");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strMatcher55);
    }

    @Test
    public void test06446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06446");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        java.lang.StringBuffer stringBuffer21 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        java.lang.Throwable throwable30 = null;
        java.io.IOException iOException31 = new java.io.IOException("", throwable30);
        java.io.IOException iOException32 = new java.io.IOException("#4#a4#", throwable30);
        java.io.IOException iOException33 = new java.io.IOException(throwable30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 1.0f, iOException33, false, 100, strBuilder36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.appendWithSeparators(objArray37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        java.lang.String str45 = strBuilder43.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder26.append((java.lang.CharSequence) str45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.insert(4, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder9.append(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setIgnoreEmptyTokens(false);
        boolean boolean63 = strTokenizer60.hasPrevious();
        boolean boolean64 = strTokenizer60.hasNext();
        int int65 = strTokenizer60.nextIndex();
        boolean boolean66 = strTokenizer60.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer60, "java.io.IOException: eptionfalse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder55.append((float) 51);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(stringBuffer21);
        org.junit.Assert.assertEquals(stringBuffer21.toString(), "  \n");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test06447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06447");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        char[] charArray48 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.appendln(charArray48);
        int int53 = strBuilder50.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder38.append(strBuilder50);
        java.lang.String str60 = strBuilder38.substring(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        int int73 = strBuilder71.lastIndexOf("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.insert((int) '\000', (double) '\000');
        boolean boolean77 = strBuilder38.equalsIgnoreCase(strBuilder76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.delete(53, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1" + "'", str60, ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test06448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06448");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("", throwable2);
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.lang.Throwable throwable6 = null;
        java.io.IOException iOException7 = new java.io.IOException(throwable6);
        java.io.IOException iOException9 = new java.io.IOException("StrTokenizer[#4#a4#]");
        iOException7.addSuppressed((java.lang.Throwable) iOException9);
        iOException3.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("", throwable14);
        java.io.IOException iOException16 = new java.io.IOException("hi!", throwable14);
        iOException7.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray19 = iOException7.getSuppressed();
        java.io.IOException iOException20 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException7);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test06449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06449");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        int int38 = strList23.indexOf((java.lang.Object) strTokenizer33);
        int int39 = strTokenizer33.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer33);
        java.lang.Object obj41 = strTokenizer33.clone();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test06450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06450");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) strMatcher15, 2, '4');
        boolean boolean20 = strBuilder4.endsWith(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append("#4#a4#");
        java.lang.String str28 = strBuilder21.leftString((int) (short) 100);
        int int30 = strBuilder21.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder21.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder21.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append("#4#a4#");
        java.lang.String str48 = strBuilder41.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.append(false);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("hi!");
        boolean boolean70 = strTokenizer67.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder54.appendFixedWidthPadRight((java.lang.Object) strTokenizer67, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int77 = strBuilder74.indexOf(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.appendln((int) (short) 10);
        boolean boolean84 = strBuilder54.equalsIgnoreCase(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder54.reverse();
        java.lang.StringBuffer stringBuffer86 = strBuilder85.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder41.append(stringBuffer86, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder40.appendln(stringBuffer86);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder4.append(stringBuffer86, (int) (short) 1, 15);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.replaceFirst("0.012true104444444444444444444444444444444444444444444444  \n", "java.io.IOException");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#4#a4#" + "'", str28, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#4#a4#" + "'", str48, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(stringBuffer86);
        org.junit.Assert.assertEquals(stringBuffer86.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test06451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06451");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        char[] charArray28 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray29 = strBuilder19.getChars(charArray28);
        java.io.Reader reader30 = strBuilder19.asReader();
        reader30.mark(10);
        reader30.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.clear();
        char[] charArray43 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendln(charArray43);
        int int46 = reader30.read(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder16.append(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher52);
    }

    @Test
    public void test06452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06452");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.deleteAll(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append("#4#a4#");
        java.lang.String str36 = strBuilder29.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(false);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setDelimiterString("hi!");
        boolean boolean58 = strTokenizer55.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder42.appendFixedWidthPadRight((java.lang.Object) strTokenizer55, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.appendln((int) (short) 10);
        boolean boolean72 = strBuilder42.equalsIgnoreCase(strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder42.reverse();
        java.lang.StringBuffer stringBuffer74 = strBuilder73.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder29.append(stringBuffer74, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder22.append(stringBuffer74);
        int int81 = strBuilder22.indexOf("StrTokenizer[not tokenized yet]", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder22.insert((int) (byte) 10, (float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder22.appendSeparator('a', 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder22.appendPadding((int) (byte) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder22.replaceAll('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strBuilder22, 100, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder96.setNullText("1false0\n1.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "#4#a4#" + "'", str36, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test06453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06453");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.setCharAt(1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replace(3, 48, "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendSeparator('3', (int) '3');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append("001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111", 48, (int) '0');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test06454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06454");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.replaceAll('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder3.appendSeparator('a');
        boolean boolean24 = strBuilder22.endsWith(" a10\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06455");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.setCharAt(37, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.setNewLineText("100.0zinekoTrtSeslaf1");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.setLength(15);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test06456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06456");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("0", "o.IOExceptionfalse1001.0\n35.0\ntrue#4#a4#zi");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        int int12 = strBuilder8.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln((double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.deleteAll(strMatcher25);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        boolean boolean44 = strTokenizer41.isIgnoreEmptyTokens();
        java.lang.String str45 = strTokenizer41.next();
        int int46 = strList31.indexOf((java.lang.Object) strTokenizer41);
        java.util.ListIterator<java.lang.String> strItor48 = strList31.listIterator((int) (byte) 0);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterString("hi!");
        boolean boolean66 = strTokenizer63.isIgnoreEmptyTokens();
        java.lang.String str67 = strTokenizer63.next();
        int int68 = strList53.indexOf((java.lang.Object) strTokenizer63);
        java.util.ListIterator<java.lang.String> strItor70 = strList53.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor71 = strList53.iterator();
        boolean boolean72 = strList31.removeAll((java.util.Collection<java.lang.String>) strList53);
        java.util.Iterator<java.lang.String> strItor73 = strList31.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder22.appendFixedWidthPadRight((java.lang.Object) strItor73, (int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln('a');
        char[] charArray85 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer87.setDelimiterString("hi!");
        java.lang.String str90 = strTokenizer89.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer89.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer92.reset("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer94.getTrimmerMatcher();
        int int97 = strBuilder76.indexOf(strMatcher95, (int) (short) 100);
        int int98 = strBuilder21.indexOf(strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = strTokenizer2.setTrimmerMatcher(strMatcher95);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#4#a4#" + "'", str45, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#4#a4#" + "'", str67, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "#4#a4#" + "'", str90, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer99);
    }

    @Test
    public void test06457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06457");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append("#4#a4#");
        java.lang.String str9 = strBuilder2.leftString((int) (short) 100);
        int int11 = strBuilder2.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder2.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append("#4#a4#");
        java.lang.String str29 = strBuilder22.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(false);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        boolean boolean51 = strTokenizer48.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strTokenizer48, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln((int) (short) 10);
        boolean boolean65 = strBuilder35.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder35.reverse();
        java.lang.StringBuffer stringBuffer67 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder22.append(stringBuffer67, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder21.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder1.appendSeparator('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder1.setNewLineText("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder1.appendPadding(55, '4');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#4#a4#" + "'", str9, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#4#a4#" + "'", str29, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test06458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06458");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.replaceFirst('1', '1');
        char[] charArray34 = null;
        char[] charArray35 = strBuilder28.getChars(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.appendSeparator('\000');
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        java.lang.String str49 = strTokenizer48.nextToken();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        boolean boolean52 = strList50.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str55 = strTokenizer54.getContent();
        boolean boolean56 = strList50.equals((java.lang.Object) strTokenizer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        int int67 = strMatcher58.isMatch(charArray65, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer54.setDelimiterMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder37.appendFixedWidthPadLeft((java.lang.Object) strTokenizer68, 16, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.setNewLineText("1fal");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "1.0java.io.IOExceptionfalse1001.0\n35.0\ntrue");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "1.0java.io.IOExceptionfalse1001.0\n35.0\ntrue");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, t, r, u, e]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "#4#a4#" + "'", str49, "#4#a4#");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test06459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06459");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        boolean boolean16 = strTokenizer15.hasPrevious();
        java.lang.String str17 = strTokenizer15.getContent();
        java.util.List<java.lang.String> strList18 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.appendPadding((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int45 = strBuilder42.lastIndexOf(strMatcher43, (int) (short) -1);
        java.io.Reader reader46 = strBuilder42.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.append(false);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("hi!");
        boolean boolean69 = strTokenizer66.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder53.appendFixedWidthPadRight((java.lang.Object) strTokenizer66, 10, ' ');
        int int73 = strTokenizer66.previousIndex();
        int int74 = strTokenizer66.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder42.appendAll((java.util.Iterator<java.lang.String>) strTokenizer66);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder21.appendln(strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.deleteFirst('.');
        int int79 = strList18.lastIndexOf((java.lang.Object) strBuilder75);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = strList18.set(60, "10\n4444444444org.apache.commons.");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 60, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test06460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06460");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str49 = strBuilder48.getNullText();
        char[] charArray51 = new char[] { 'a' };
        char[] charArray52 = strBuilder48.getChars(charArray51);
        int int56 = strMatcher45.isMatch(charArray52, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("true\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer60.reset("ep");
        java.lang.String str65 = strTokenizer60.next();
        java.lang.String str66 = strTokenizer60.previousToken();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ep" + "'", str65, "ep");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ep" + "'", str66, "ep");
    }

    @Test
    public void test06461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06461");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        char[] charArray48 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.appendln(charArray48);
        int int53 = strBuilder50.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder38.append(strBuilder50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence61 = strBuilder50.subSequence(31, 109);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 109");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test06462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06462");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("");
        int int15 = strBuilder14.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.deleteFirst("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append(false);
        java.lang.StringBuffer stringBuffer20 = strBuilder17.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder5.append(stringBuffer20);
        java.lang.String str23 = strBuilder21.rightString(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.deleteFirst('e');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(stringBuffer20);
        org.junit.Assert.assertEquals(stringBuffer20.toString(), "false");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + " falseafalse" + "'", str23, " falseafalse");
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test06463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06463");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        int int9 = strBuilder3.lastIndexOf("1false0\n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.insert((int) '\000', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        java.lang.Throwable throwable20 = null;
        java.io.IOException iOException21 = new java.io.IOException("", throwable20);
        java.io.IOException iOException22 = new java.io.IOException("#4#a4#", throwable20);
        java.io.IOException iOException23 = new java.io.IOException(throwable20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1.0f, iOException23, false, 100, strBuilder26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.appendWithSeparators(objArray27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendln(10L);
        int int45 = strBuilder39.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendln(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean54 = strBuilder53.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder3.append((java.lang.Object) strBuilder53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder3.setCharAt((int) (byte) 100, '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test06464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06464");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder22.replace(strMatcher27, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int34 = strBuilder16.lastIndexOf(strMatcher27, (int) (short) 100);
        int int36 = strBuilder11.lastIndexOf(strMatcher27, 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder2.deleteFirst(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test06465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06465");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        long long18 = reader13.skip(0L);
        long long20 = reader13.skip((long) 16);
        int int21 = reader13.read();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test06466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06466");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.replaceAll("java.io.IOException: StrTokenizer[#4#a4#]", "#4#a4#");
        int int20 = strBuilder17.lastIndexOf(" ", 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        java.lang.String str25 = strBuilder24.getNullText();
        char[] charArray27 = new char[] { 'a' };
        char[] charArray28 = strBuilder24.getChars(charArray27);
        int int32 = strMatcher21.isMatch(charArray28, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str36 = strTokenizer35.getContent();
        char[] charArray42 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer35.reset(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "a");
        int int48 = strMatcher33.isMatch(charArray42, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder17.append(charArray42);
        int int51 = strBuilder17.lastIndexOf("java.io.IOException: 59.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder17.appendPadding(0, ' ');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test06467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06467");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(false);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) strTokenizer19, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln((int) (short) 10);
        boolean boolean36 = strBuilder6.equalsIgnoreCase(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        char[] charArray50 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray51 = strBuilder41.getChars(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int65 = strBuilder62.lastIndexOf(strMatcher63, (int) (short) 10);
        boolean boolean66 = strBuilder41.contains(strMatcher63);
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("hi!");
        java.lang.String str78 = strTokenizer77.nextToken();
        java.util.List<java.lang.String> strList79 = strTokenizer77.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setTrimmerMatcher(strMatcher80);
        char[] charArray88 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray88);
        int int93 = strMatcher80.isMatch(charArray88, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher63, strMatcher80);
        int int95 = strBuilder6.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(" 1", strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "#4#a4#" + "'", str78, "#4#a4#");
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 15 + "'", int95 == 15);
    }

    @Test
    public void test06468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06468");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write("0java.io.IOExceptionfalse100", 0, 0);
        writer37.flush();
        java.io.Writer writer61 = writer37.append('#');
        writer61.write(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int67 = strBuilder64.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteAll("java.io.IOException: StrTokenizer[#4#a4#]");
        boolean boolean73 = strBuilder69.startsWith(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        java.io.Writer writer74 = writer61.append((java.lang.CharSequence) strBuilder69);
        writer61.close();
        writer61.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(writer74);
    }

    @Test
    public void test06469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06469");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        java.util.Iterator<java.lang.String> strItor8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendAll(strItor8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        java.lang.Throwable throwable17 = null;
        java.io.IOException iOException18 = new java.io.IOException("", throwable17);
        java.io.IOException iOException19 = new java.io.IOException("#4#a4#", throwable17);
        java.io.IOException iOException20 = new java.io.IOException(throwable17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray24 = new java.lang.Object[] { 1.0f, iOException20, false, 100, strBuilder23 };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.appendWithSeparators(objArray24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder9.appendAll((java.util.Iterator<java.lang.String>) strTokenizer34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setEmptyTokenAsNull(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = strTokenizer34.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test06470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06470");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.appendFixedWidthPadLeft((int) (short) 100, (int) (byte) 0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str21 = strBuilder19.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendFixedWidthPadLeft((int) (short) 100, 27, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.replaceAll(strMatcher27, "StrTokenizer[#4#a4#]");
        boolean boolean30 = strBuilder2.equalsIgnoreCase(strBuilder29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.insert((int) 'a', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06471");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.reverse();
        int int9 = strBuilder8.length();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
    }

    @Test
    public void test06472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06472");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException(" a4a4", throwable1);
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test06473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06473");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasNext();
        java.util.List<java.lang.String> strList12 = strTokenizer8.getTokenList();
        boolean boolean13 = strList12.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder((int) ' ');
        java.lang.String[] strArray19 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        boolean boolean33 = strTokenizer30.isIgnoreEmptyTokens();
        java.lang.String str34 = strTokenizer30.next();
        int int35 = strList20.indexOf((java.lang.Object) strTokenizer30);
        java.util.ListIterator<java.lang.String> strItor37 = strList20.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor38 = strList20.iterator();
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setDelimiterString("hi!");
        boolean boolean50 = strTokenizer47.isIgnoreEmptyTokens();
        java.lang.String str51 = strTokenizer47.next();
        boolean boolean52 = strList20.equals((java.lang.Object) strTokenizer47);
        java.lang.Object[] objArray53 = strList20.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder15.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList20, "1false0\nfalse");
        java.lang.Object[] objArray56 = strList20.toArray();
        boolean boolean57 = strList12.containsAll((java.util.Collection<java.lang.String>) strList20);
        int int59 = strList12.lastIndexOf((java.lang.Object) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = strList12.get(63);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 63, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "#4#a4#" + "'", str51, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[, , ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test06474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06474");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.replaceAll("IOException: \n\n###############", "10\n100\n a10\nfalse\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test06475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06475");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert((int) (byte) 0, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append((long) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.replaceAll('#', 'e');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence17 = strBuilder14.subSequence(46, 51);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test06476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06476");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("hi!", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("true\n", strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.replace(strMatcher16, "java.io.IOException: StrTokenizer[not tokenized yet]", 0, 27, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        int int34 = strBuilder28.lastIndexOf("", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.appendSeparator("0java.io.IOExceptionfalse100", 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendln((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.setNewLineText("StrTokeniz");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test06477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06477");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        strList27.add((int) (byte) 1, "0.012true104444444444444444444444444444444444444444444444  \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.appendln(strBuilder71, 1, (int) (short) 100);
        boolean boolean75 = strList27.equals((java.lang.Object) 1);
        boolean boolean77 = strList27.add("");
        java.util.Collection<java.lang.String> strCollection78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = strList27.retainAll(strCollection78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test06478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06478");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\n", " 0\n1.0java.io.IOExceptionfalse10005");
    }

    @Test
    public void test06479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06479");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int6 = strBuilder3.indexOf(strMatcher5);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendAll((java.util.Iterator<java.lang.String>) strTokenizer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst('3', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.Throwable throwable35 = null;
        java.io.IOException iOException36 = new java.io.IOException("", throwable35);
        java.io.IOException iOException37 = new java.io.IOException("#4#a4#", throwable35);
        java.io.IOException iOException38 = new java.io.IOException(throwable35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 1.0f, iOException38, false, 100, strBuilder41 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendWithSeparators(objArray42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strBuilder51.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoredMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer24.setQuoteMatcher(strMatcher53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder18.replace(strMatcher53, "StrTokenizer[]", 48, 72, (int) '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
    }

    @Test
    public void test06480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06480");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        java.io.Writer writer56 = writer37.append('#');
        java.io.Writer writer58 = writer56.append(' ');
        writer58.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(writer58);
    }

    @Test
    public void test06481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06481");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoreEmptyTokens(false);
        java.lang.String str4 = strTokenizer1.nextToken();
        char[] charArray10 = new char[] { 'a', 'a', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer1.reset(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("1false0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setDelimiterChar('3');
        int int18 = strTokenizer15.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "aa## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "aa## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, a, #, #,  ]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test06482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06482");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.trim();
        java.lang.Object[] objArray19 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.setLength((int) ' ');
        java.io.Reader reader24 = strBuilder21.asReader();
        reader24.reset();
        int int26 = reader24.read();
        java.nio.CharBuffer charBuffer27 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int28 = reader24.read(charBuffer27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 53 + "'", int26 == 53);
    }

    @Test
    public void test06483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06483");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoreEmptyTokens(false);
        boolean boolean43 = strTokenizer42.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder15.appendAll((java.lang.Object[]) strArray46);
        int int50 = strBuilder47.lastIndexOf('1', 95);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int72 = strBuilder67.indexOf(strMatcher70, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher70);
        boolean boolean74 = strTokenizer73.hasNext();
        java.util.List<java.lang.String> strList75 = strTokenizer73.getTokenList();
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.setDelimiterString("hi!");
        java.lang.String str87 = strTokenizer86.nextToken();
        java.util.List<java.lang.String> strList88 = strTokenizer86.getTokenList();
        boolean boolean90 = strList88.add("hi!");
        java.util.Iterator<java.lang.String> strItor91 = strList88.iterator();
        boolean boolean92 = strList88.isEmpty();
        boolean boolean93 = strList75.removeAll((java.util.Collection<java.lang.String>) strList88);
        strList75.clear();
        java.util.ListIterator<java.lang.String> strItor95 = strList75.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder47.appendAll((java.lang.Iterable<java.lang.String>) strList75);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder47.insert(21, 13);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 70 + "'", int50 == 70);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(strItor95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test06484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06484");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder11.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendSeparator("2.0", "false1001.0\n35.0\n1.0#4#4#");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test06485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06485");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("100.0false\n");
        boolean boolean10 = strBuilder7.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int14 = strBuilder11.indexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.deleteFirst(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        char[] charArray35 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        int int46 = strBuilder36.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder27.replace(strMatcher44, "", 2, (int) (short) 100, 10);
        char[] charArray55 = strBuilder27.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strBuilder27.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterChar('0');
        java.util.List<java.lang.String> strList59 = strTokenizer58.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder7.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList59, "10\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder7.append('e');
        java.io.Reader reader64 = strBuilder63.asReader();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader64);
    }

    @Test
    public void test06486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06486");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("hi!", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendPadding((int) 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.deleteFirst('4');
        java.lang.String str20 = strBuilder19.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "aa#4\n                                                                                                 " + "'", str20, "aa#4\n                                                                                                 ");
    }

    @Test
    public void test06487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06487");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getDelimiterMatcher();
        java.lang.Object obj19 = strTokenizer17.clone();
        java.lang.String str20 = strTokenizer17.next();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = strTokenizer17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
    }

    @Test
    public void test06488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06488");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder18.ensureCapacity(15);
        int int33 = strBuilder18.lastIndexOf('I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 11 + "'", int33 == 11);
    }

    @Test
    public void test06489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06489");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.setLength(16);
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendSeparator("StrTokenizer[100.0\n]");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream81 = strBuilder80.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder85.appendNewLine();
        char[] charArray93 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray93, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray93);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder86.append((java.lang.Object) charArray93);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder77.getChars(59, (int) (short) 1, charArray93, 80);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test06490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06490");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int3 = strTokenizer2.nextIndex();
        boolean boolean4 = strTokenizer2.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str15 = strTokenizer14.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        java.lang.String str21 = strBuilder20.getNullText();
        char[] charArray23 = new char[] { 'a' };
        char[] charArray24 = strBuilder20.getChars(charArray23);
        char[] charArray29 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray30 = strBuilder20.getChars(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.appendln("java.io.IOException: ");
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder32.replaceFirst(strMatcher43, "#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer17.setTrimmerMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("100.0false", strMatcher12, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer6.setQuoteMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder1.replaceFirst(strMatcher12, "1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.clear();
        java.lang.Throwable throwable59 = null;
        java.io.IOException iOException60 = new java.io.IOException("", throwable59);
        java.io.IOException iOException61 = new java.io.IOException("#4#a4#", throwable59);
        java.io.IOException iOException62 = new java.io.IOException(throwable59);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 1.0f, iOException62, false, 100, strBuilder65 };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.appendWithSeparators(objArray66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer76 = strBuilder70.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder51.appendln(stringBuffer76, 0, 53);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
    }

    @Test
    public void test06491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06491");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        int int55 = strBuilder45.indexOf(strMatcher53);
        int int56 = strList27.indexOf((java.lang.Object) strBuilder45);
        int int57 = strList27.size();
        java.lang.Object[] objArray58 = strList27.toArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getDelimiterMatcher();
        boolean boolean63 = strList27.remove((java.lang.Object) strMatcher62);
        int int64 = strList27.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str66 = strBuilder65.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder65.appendln((java.lang.Object) strBuilder67);
        java.util.Iterator<java.lang.String> strItor73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder65.appendAll(strItor73);
        int int75 = strBuilder74.capacity();
        boolean boolean76 = strList27.remove((java.lang.Object) strBuilder74);
        java.io.Reader reader77 = strBuilder74.asReader();
        java.lang.String str78 = strBuilder74.toString();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 3 + "'", int57 == 3);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[, , ]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 32 + "'", int75 == 32);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\n" + "'", str78, "\n");
    }

    @Test
    public void test06492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06492");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendln(10L);
        int int46 = strBuilder40.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder35.appendln((java.lang.Object) strBuilder51);
        int int54 = strBuilder35.lastIndexOf("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strBuilder35.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setQuoteChar('e');
        boolean boolean58 = strTokenizer55.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test06493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06493");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        int int31 = strBuilder29.indexOf("100.01210\n");
        java.util.stream.IntStream intStream32 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.append("1.1", (int) (byte) 0, 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.replace(91, 77, "\n59\n97\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test06494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06494");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.replaceAll('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder3.appendSeparator('a');
        java.util.Iterator<java.lang.String> strItor23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder3.appendWithSeparators(strItor23, "java.io.IOException: StrTokenizer[");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder3.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test06495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06495");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        java.lang.String str6 = strBuilder5.getNullText();
        char[] charArray8 = new char[] { 'a' };
        char[] charArray9 = strBuilder5.getChars(charArray8);
        int int13 = strMatcher2.isMatch(charArray9, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer1.setTrimmerMatcher(strMatcher2);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar(' ');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer17.set("10\n100\n a10\nfalse\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test06496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06496");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append("#4#a4#");
        boolean boolean32 = strBuilder25.equals(strBuilder31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append("35\n10\n\na-130.0", (int) 'f', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test06497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06497");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("hi!", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("true\n", strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.replace(strMatcher16, "java.io.IOException: StrTokenizer[not tokenized yet]", 0, 27, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(true);
        int int34 = strBuilder28.lastIndexOf("", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.appendSeparator("0java.io.IOExceptionfalse100", 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendln((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append('1');
        java.lang.String str44 = strBuilder39.leftString(45);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "true\n0java.io.IOExceptionfalse100true\n1" + "'", str44, "true\n0java.io.IOExceptionfalse100true\n1");
    }

    @Test
    public void test06498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06498");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setTrimmerMatcher(strMatcher13);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        int int26 = strMatcher13.isMatch(charArray21, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher31);
        boolean boolean35 = strTokenizer34.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendln(10L);
        int int45 = strBuilder39.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.setNullText("#4#a4#");
        char[] charArray53 = strBuilder50.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, " a10\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, "StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer34.reset(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "10\ntrue\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "10\ntrue\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[1, 0, \n, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
    }

    @Test
    public void test06499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06499");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        char[] charArray9 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterString("hi!");
        java.lang.String str14 = strTokenizer13.nextToken();
        java.util.List<java.lang.String> strList15 = strTokenizer13.getTokenList();
        boolean boolean17 = strList15.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str20 = strTokenizer19.getContent();
        boolean boolean21 = strList15.equals((java.lang.Object) strTokenizer19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer19.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        java.lang.Throwable throwable31 = null;
        java.io.IOException iOException32 = new java.io.IOException("", throwable31);
        java.io.IOException iOException33 = new java.io.IOException("#4#a4#", throwable31);
        java.io.IOException iOException34 = new java.io.IOException(throwable31);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray38 = new java.lang.Object[] { 1.0f, iOException34, false, 100, strBuilder37 };
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder27.appendWithSeparators(objArray38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln((float) '#');
        boolean boolean46 = strBuilder42.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        java.lang.String str51 = strBuilder50.getNullText();
        char[] charArray53 = new char[] { 'a' };
        char[] charArray54 = strBuilder50.getChars(charArray53);
        char[] charArray59 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray60 = strBuilder50.getChars(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder42.insert(0, charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer19.setQuoteMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("0.012true104444444444444444444444444444444444444444444444  \n", strMatcher2, strMatcher64);
        java.lang.String str67 = strTokenizer66.next();
        int int68 = strTokenizer66.nextIndex();
        java.lang.String[] strArray69 = strTokenizer66.getTokenArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "0.012true104444444444444444444444444444444444444444444444  \n" + "'", str67, "0.012true104444444444444444444444444444444444444444444444  \n");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test06500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06500");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        int int55 = strBuilder45.indexOf(strMatcher53);
        int int56 = strList27.indexOf((java.lang.Object) strBuilder45);
        java.util.ListIterator<java.lang.String> strItor57 = strList27.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.clear();
        java.lang.String str63 = strBuilder61.rightString((int) (short) -1);
        java.lang.String str65 = strBuilder61.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setIgnoreEmptyTokens(false);
        int int72 = strTokenizer69.previousIndex();
        java.lang.Object obj73 = strTokenizer69.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder61.append((java.lang.Object) strTokenizer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.reverse();
        java.io.Reader reader76 = strBuilder75.asReader();
        int int77 = strList27.lastIndexOf((java.lang.Object) reader76);
        reader76.reset();
        boolean boolean79 = reader76.ready();
        reader76.reset();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strItor57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }
}

