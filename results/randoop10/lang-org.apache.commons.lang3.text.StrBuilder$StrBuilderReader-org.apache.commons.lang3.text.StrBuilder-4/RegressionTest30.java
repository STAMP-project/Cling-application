import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest30 {

    public static boolean debug = false;

    @Test
    public void test15001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15001");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        int int27 = strList12.indexOf((java.lang.Object) charArray25);
        strList12.clear();
        java.lang.Object[] objArray29 = strList12.toArray();
        boolean boolean30 = strList12.isEmpty();
        strList12.clear();
        boolean boolean32 = strList12.isEmpty();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test15002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15002");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean29 = strBuilder27.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        char[] charArray40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln(charArray40);
        boolean boolean42 = strBuilder39.isEmpty();
        java.lang.String str44 = strBuilder39.rightString((int) 'a');
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.replaceAll(strMatcher57, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder31.appendln((java.lang.Object) strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append(49);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.insert(56, 53);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "10\n\n" + "'", str44, "10\n\n");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test15003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15003");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        java.lang.Object[] objArray6 = strList4.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[StrTokenizer[#4#a4#]]");
    }

    @Test
    public void test15004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15004");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        boolean boolean5 = strBuilder3.equals((java.lang.Object) 100.0d);
        java.lang.String str6 = strBuilder3.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.clear();
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("", throwable14);
        java.io.IOException iOException16 = new java.io.IOException("#4#a4#", throwable14);
        java.io.IOException iOException17 = new java.io.IOException(throwable14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1.0f, iOException17, false, 100, strBuilder20 };
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.appendWithSeparators(objArray21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer31 = strBuilder25.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder3.append(stringBuffer31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert(80, 9L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 80");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(stringBuffer31);
        org.junit.Assert.assertEquals(stringBuffer31.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test15005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15005");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterString("hi!");
        java.lang.String str73 = strTokenizer72.nextToken();
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        boolean boolean75 = strList60.removeAll((java.util.Collection<java.lang.String>) strList74);
        boolean boolean77 = strList74.add(" falseStrTokeniz");
        boolean boolean78 = strList74.isEmpty();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test15006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15006");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        int int19 = strTokenizer16.previousIndex();
        java.lang.String str20 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer16.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer16.add("  \n a10\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher21);
    }

    @Test
    public void test15007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15007");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.appendln(stringBuffer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.append(77);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test15008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15008");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[a4aa# ]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append("#4#a4#");
        java.lang.String str23 = strBuilder16.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.append(false);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("hi!");
        boolean boolean45 = strTokenizer42.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) strTokenizer42, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendln((int) (short) 10);
        boolean boolean59 = strBuilder29.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.reverse();
        java.lang.StringBuffer stringBuffer61 = strBuilder60.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder16.append(stringBuffer61, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder15.appendln(stringBuffer61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder1.appendln(stringBuffer61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder1.asTokenizer();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#4#a4#" + "'", str23, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(stringBuffer61);
        org.junit.Assert.assertEquals(stringBuffer61.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
    }

    @Test
    public void test15009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15009");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        java.util.stream.IntStream intStream16 = strBuilder2.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendPadding(22, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        java.lang.Throwable throwable29 = null;
        java.io.IOException iOException30 = new java.io.IOException("", throwable29);
        java.io.IOException iOException31 = new java.io.IOException("#4#a4#", throwable29);
        java.io.IOException iOException32 = new java.io.IOException(throwable29);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1.0f, iOException32, false, 100, strBuilder35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.appendWithSeparators(objArray36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        int int54 = strBuilder48.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.appendln(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator('1', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder18.appendln((java.lang.Object) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder18.appendln(134);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test15010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15010");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((double) 5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.delete((int) (short) 100, 37);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test15011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15011");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendln('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln((long) '#');
        java.util.stream.IntStream intStream23 = strBuilder20.chars();
        boolean boolean25 = strBuilder20.contains('1');
        java.lang.String str27 = strBuilder20.substring((int) (byte) 0);
        java.lang.StringBuffer stringBuffer28 = strBuilder20.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder15.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder15.appendln((double) 35);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        boolean boolean43 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList44 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder31.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList44, "4a4java.io.IOException: #4#a4#");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "35\n" + "'", str27, "35\n");
        org.junit.Assert.assertNotNull(stringBuffer28);
        org.junit.Assert.assertEquals(stringBuffer28.toString(), "35\n");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test15012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15012");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) strMatcher15, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder4.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.replaceFirst(' ', ' ');
        int int31 = strBuilder24.lastIndexOf("#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.append(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder20.appendln(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("");
        char[] charArray56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(charArray56);
        boolean boolean58 = strBuilder55.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        boolean boolean64 = strBuilder63.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("hi!");
        java.lang.String str70 = strBuilder69.getNullText();
        char[] charArray72 = new char[] { 'a' };
        char[] charArray73 = strBuilder69.getChars(charArray72);
        int int75 = strMatcher66.isMatch(charArray73, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder63.append(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder55.insert((int) (byte) 1, charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, "StrTokenizer[#4#a4#]");
        char[] charArray80 = strBuilder47.getChars(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder20.appendln(charArray80);
        boolean boolean85 = strBuilder20.endsWith("StrTokenizer[eslf48]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "100.012");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "100.012");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[1, 0, 0, ., 0, 1, 2]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test15013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15013");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendln('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.minimizeCapacity();
        int int17 = strBuilder15.lastIndexOf(' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.insert(168, "Except");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 168");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test15014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15014");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        int int4 = strTokenizer2.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        char[] charArray14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(charArray14);
        boolean boolean16 = strBuilder13.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        boolean boolean22 = strBuilder21.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str28 = strBuilder27.getNullText();
        char[] charArray30 = new char[] { 'a' };
        char[] charArray31 = strBuilder27.getChars(charArray30);
        int int33 = strMatcher24.isMatch(charArray31, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.append(charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder13.insert((int) (byte) 1, charArray31);
        int int37 = strMatcher5.isMatch(charArray31, (int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '\000', '0');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strMatcher41);
    }

    @Test
    public void test15015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15015");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("zer[not tokenized yet]", ".oi.ava0.0j0.1");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test15016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15016");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert(4, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator('#');
        java.util.stream.IntStream intStream29 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append("1false0\n\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.deleteFirst('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test15017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15017");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher35);
        int int38 = strBuilder16.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.deleteFirst(strMatcher35);
        boolean boolean41 = strBuilder0.contains("true\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        int int45 = strBuilder0.lastIndexOf(strMatcher43, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder0.appendSeparator("", 10);
        java.util.stream.IntStream intStream49 = strBuilder0.chars();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(intStream49);
    }

    @Test
    public void test15018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15018");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        int int45 = strBuilder36.lastIndexOf("10\n\n", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(false);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("hi!");
        boolean boolean67 = strTokenizer64.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder51.appendFixedWidthPadRight((java.lang.Object) strTokenizer64, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int74 = strBuilder71.indexOf(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.appendln((int) (short) 10);
        boolean boolean81 = strBuilder51.equalsIgnoreCase(strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer86.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder51.replaceFirst(strMatcher87, "100.01210\n");
        boolean boolean90 = strBuilder36.equals(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder36.appendFixedWidthPadRight(18, 53, '0');
        boolean boolean96 = strBuilder94.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder94.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test15019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15019");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.String str33 = strBuilder31.rightString((int) (short) -1);
        java.lang.String str35 = strBuilder31.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoreEmptyTokens(false);
        int int42 = strTokenizer39.previousIndex();
        java.lang.Object obj43 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.append((java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.reverse();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator("va.io.IOExceptionfalse1001.");
        java.io.Writer writer51 = writer9.append((java.lang.CharSequence) strBuilder48, (int) (byte) 0, 38);
        writer9.write(".text.StrMatcher$CharMat");
        writer9.write(206);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(writer51);
    }

    @Test
    public void test15020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15020");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append("#4#a4#");
        java.lang.String str17 = strBuilder10.leftString((int) (short) 100);
        int int19 = strBuilder10.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String str20 = strBuilder10.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder10.append((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        boolean boolean27 = strBuilder26.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        int int38 = strMatcher29.isMatch(charArray36, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.append(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append("#4#a4#");
        java.lang.String str47 = strBuilder40.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.append(false);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("hi!");
        boolean boolean69 = strTokenizer66.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder53.appendFixedWidthPadRight((java.lang.Object) strTokenizer66, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int76 = strBuilder73.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendln((int) (short) 10);
        boolean boolean83 = strBuilder53.equalsIgnoreCase(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder53.reverse();
        java.lang.StringBuffer stringBuffer85 = strBuilder84.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder40.append(stringBuffer85, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder26.append(stringBuffer85, 6, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder10.appendln(stringBuffer85);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder3.append(stringBuffer85);
        java.util.stream.IntStream intStream94 = strBuilder93.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.append('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder93.appendSeparator('a', 37);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(stringBuffer85);
        org.junit.Assert.assertEquals(stringBuffer85.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(intStream94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test15021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15021");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert(4, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator('#');
        java.util.stream.IntStream intStream29 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append("1false0\n\n#");
        java.util.stream.IntStream intStream32 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int47 = strBuilder44.lastIndexOf(strMatcher45, (int) (short) -1);
        java.io.Reader reader48 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder26.append(strBuilder55, 5, 21);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test15022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15022");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '0');
        boolean boolean12 = strTokenizer11.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strMatcher13);
    }

    @Test
    public void test15023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15023");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        int int11 = strBuilder5.lastIndexOf('a');
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("hi!");
        boolean boolean29 = strTokenizer26.isIgnoreEmptyTokens();
        java.lang.String str30 = strTokenizer26.next();
        int int31 = strList16.indexOf((java.lang.Object) strTokenizer26);
        java.util.ListIterator<java.lang.String> strItor33 = strList16.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor34 = strList16.iterator();
        java.lang.String[] strArray38 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        boolean boolean52 = strTokenizer49.isIgnoreEmptyTokens();
        java.lang.String str53 = strTokenizer49.next();
        int int54 = strList39.indexOf((java.lang.Object) strTokenizer49);
        boolean boolean55 = strList16.addAll((java.util.Collection<java.lang.String>) strList39);
        java.util.ListIterator<java.lang.String> strItor56 = strList39.listIterator();
        boolean boolean58 = strList39.add("");
        java.util.ListIterator<java.lang.String> strItor59 = strList39.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        boolean boolean62 = strList39.add(" falsezinekoTrtSeslaf \n10.0");
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor64 = strList39.listIterator((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test15024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15024");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append((double) 24);
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test15025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15025");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getQuoteMatcher();
        boolean boolean7 = strTokenizer3.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.deleteFirst(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.minimizeCapacity();
        char[] charArray32 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        int int43 = strBuilder33.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder24.replace(strMatcher41, "", 2, (int) (short) 100, 10);
        char[] charArray52 = strBuilder24.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        int int64 = strMatcher53.isMatch(charArray60, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer66.getDelimiterMatcher();
        boolean boolean70 = strTokenizer66.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer3.setQuoteMatcher(strMatcher71);
        boolean boolean73 = strTokenizer3.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test15026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15026");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(strBuilder9, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.insert(2, (java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.appendln((int) (short) 100);
        java.lang.String str23 = strBuilder14.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append('3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test15027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15027");
        char[] charArray7 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        java.lang.String str12 = strTokenizer11.nextToken();
        boolean boolean13 = strTokenizer11.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setQuoteChar('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setEmptyTokenAsNull(false);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        int int56 = strBuilder46.indexOf(strMatcher54);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher54, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer31.setDelimiterMatcher(strMatcher69);
        int int72 = strBuilder22.indexOf(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer15.setDelimiterMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("aa");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("1false0\nfalse", strMatcher69, strMatcher75);
        boolean boolean77 = strTokenizer76.hasNext();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test15028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15028");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert((int) (byte) 0, (int) (short) -1);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("hi!");
        boolean boolean45 = strTokenizer42.isIgnoreEmptyTokens();
        java.lang.String str46 = strTokenizer42.next();
        int int47 = strList32.indexOf((java.lang.Object) strTokenizer42);
        java.util.ListIterator<java.lang.String> strItor49 = strList32.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor50 = strList32.iterator();
        java.lang.String[] strArray54 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setDelimiterString("hi!");
        boolean boolean68 = strTokenizer65.isIgnoreEmptyTokens();
        java.lang.String str69 = strTokenizer65.next();
        int int70 = strList55.indexOf((java.lang.Object) strTokenizer65);
        boolean boolean71 = strList32.addAll((java.util.Collection<java.lang.String>) strList55);
        java.util.ListIterator<java.lang.String> strItor72 = strList55.listIterator();
        boolean boolean74 = strList55.add("");
        int int75 = strList55.size();
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.setDelimiterString("hi!");
        boolean boolean87 = strTokenizer84.hasNext();
        java.util.List<java.lang.String> strList88 = strTokenizer84.getTokenList();
        boolean boolean89 = strList55.removeAll((java.util.Collection<java.lang.String>) strList88);
        strList55.add((int) (byte) 1, "0.012true104444444444444444444444444444444444444444444444  \n");
        boolean boolean93 = strList55.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strList55, (int) '1', '3');
        boolean boolean98 = strBuilder24.contains('c');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "#4#a4#" + "'", str46, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "#4#a4#" + "'", str69, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 4 + "'", int75 == 4);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test15029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15029");
        java.io.IOException iOException1 = new java.io.IOException("1.0java.io.IOEx");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test15030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15030");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        java.util.stream.IntStream intStream5 = strBuilder3.codePoints();
        int int8 = strBuilder3.lastIndexOf(".0jav", 52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strBuilder3.substring(22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test15031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15031");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String str19 = strBuilder18.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("10\n\n", "0\nzinekoTrtSeslaf ");
        int int26 = strBuilder21.lastIndexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.appendSeparator(".0j", "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((long) 1);
        int int35 = strBuilder29.indexOf(" 10\n1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n", (int) '3');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.replace(strMatcher36, "false19.0", 20, 63, 59);
        int int43 = strBuilder29.indexOf("java.io.IOException:  10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder29.deleteAll(" 10\n0java.io.IOExceptionfalse100\n100.01");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator('a', 158);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test15032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15032");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((double) '\000');
        java.util.stream.IntStream intStream29 = strBuilder28.codePoints();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
    }

    @Test
    public void test15033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15033");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        int int31 = strBuilder29.lastIndexOf(" 10\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str34 = strTokenizer33.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setQuoteChar(' ');
        java.lang.String str37 = strTokenizer33.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray57 = strBuilder49.getChars(charArray55);
        int int59 = strMatcher38.isMatch(charArray55, 51);
        int int61 = strBuilder29.lastIndexOf(strMatcher38, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder29.appendln(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test15034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15034");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.clear();
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("", throwable14);
        java.io.IOException iOException16 = new java.io.IOException("#4#a4#", throwable14);
        java.io.IOException iOException17 = new java.io.IOException(throwable14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1.0f, iOException17, false, 100, strBuilder20 };
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.appendWithSeparators(objArray21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder6.appendln(strBuilder25, 4, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(37);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append("#4#");
        java.io.Writer writer33 = strBuilder30.asWriter();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(writer33);
    }

    @Test
    public void test15035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15035");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getQuoteMatcher();
        boolean boolean7 = strTokenizer3.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.deleteFirst(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.minimizeCapacity();
        char[] charArray32 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        int int43 = strBuilder33.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder24.replace(strMatcher41, "", 2, (int) (short) 100, 10);
        char[] charArray52 = strBuilder24.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        int int64 = strMatcher53.isMatch(charArray60, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer66.getDelimiterMatcher();
        boolean boolean70 = strTokenizer66.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer3.setQuoteMatcher(strMatcher71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = strTokenizer72.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test15036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15036");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setIgnoredChar('1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar('3');
        int int9 = strTokenizer6.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test15037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15037");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendFixedWidthPadLeft((int) (short) 100, 27, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.replaceAll(strMatcher10, "StrTokenizer[#4#a4#]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert(37, (float) 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 37");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test15038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15038");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        java.lang.String str13 = strBuilder11.leftString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        java.lang.Throwable throwable21 = null;
        java.io.IOException iOException22 = new java.io.IOException("", throwable21);
        java.io.IOException iOException23 = new java.io.IOException("#4#a4#", throwable21);
        java.io.IOException iOException24 = new java.io.IOException(throwable21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1.0f, iOException24, false, 100, strBuilder27 };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.appendWithSeparators(objArray28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        java.lang.String str36 = strBuilder34.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder17.append((java.lang.CharSequence) str36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append("#4#a4#");
        boolean boolean46 = strBuilder39.equals(strBuilder45);
        int int49 = strBuilder45.indexOf('a', 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.append((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strBuilder51, (int) (short) 1, ' ');
        boolean boolean56 = strBuilder54.contains("1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n");
        int int57 = strBuilder54.length();
        char[] charArray58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.append(charArray58, 190, 60);
        int int63 = strBuilder54.indexOf("-1.0#4#a4# 100\na");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1false0\n" + "'", str13, "1false0\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 9 + "'", int57 == 9);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test15039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15039");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append("#4#a4#");
        java.lang.String str20 = strBuilder13.leftString((int) (short) 100);
        int int22 = strBuilder13.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder13.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder13.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int41 = strBuilder38.lastIndexOf(strMatcher39, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder13.replaceFirst(strMatcher39, "#4#a4#");
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        int int55 = strBuilder43.lastIndexOf(strMatcher53, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterChar('#');
        java.util.List<java.lang.String> strList62 = strTokenizer61.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream63 = strList62.stream();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        int int68 = strBuilder66.capacity();
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.appendln(stringBuffer69, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder66.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder66.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append('a');
        int int80 = strList62.lastIndexOf((java.lang.Object) strBuilder79);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 15 + "'", int55 == 15);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test15040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15040");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendln(10L);
        int int13 = strBuilder7.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append("#4#a4#");
        java.lang.String str24 = strBuilder17.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(false);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) strTokenizer43, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int53 = strBuilder50.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln((int) (short) 10);
        boolean boolean60 = strBuilder30.equalsIgnoreCase(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder30.reverse();
        java.lang.StringBuffer stringBuffer62 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder17.append(stringBuffer62, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder16.append(stringBuffer62);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder3.appendln(stringBuffer62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.clear();
        java.lang.String str73 = strBuilder71.rightString((int) (short) -1);
        java.lang.String str75 = strBuilder71.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setIgnoreEmptyTokens(false);
        int int82 = strTokenizer79.previousIndex();
        java.lang.Object obj83 = strTokenizer79.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder71.append((java.lang.Object) strTokenizer79);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder84.reverse();
        java.io.Reader reader86 = strBuilder85.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.appendSeparator("va.io.IOExceptionfalse1001.");
        java.lang.Object obj89 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.appendln(obj89);
        boolean boolean91 = strBuilder67.equalsIgnoreCase(strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder67.deleteFirst('f');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(stringBuffer62);
        org.junit.Assert.assertEquals(stringBuffer62.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(reader86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test15041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15041");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.stream.Stream<java.lang.String> strStream20 = strList4.stream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher24);
        int int27 = strTokenizer26.size();
        java.util.List<java.lang.String> strList28 = strTokenizer26.getTokenList();
        java.util.ListIterator<java.lang.String> strItor29 = strList28.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int53 = strBuilder48.indexOf(strMatcher51, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.replace(strMatcher51, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        boolean boolean59 = strList28.contains((java.lang.Object) (byte) 1);
        java.lang.Object[] objArray60 = strList28.toArray();
        boolean boolean61 = strList4.removeAll((java.util.Collection<java.lang.String>) strList28);
        java.util.Spliterator<java.lang.String> strSpliterator62 = strList4.spliterator();
        java.util.stream.Stream<java.lang.String> strStream63 = strList4.stream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[#4#a4#]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strSpliterator62);
        org.junit.Assert.assertNotNull(strStream63);
    }

    @Test
    public void test15042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15042");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.append(stringBuffer4, (int) '4', 10);
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.setNullText("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendSeparator('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        int int24 = strBuilder20.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int40 = strBuilder35.indexOf(strMatcher38, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder35.asTokenizer();
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        boolean boolean44 = strList42.add("0\nzinekoTrtSeslaf ");
        java.lang.Object[] objArray45 = strList42.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) objArray45, 60, 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder14.appendWithSeparators(objArray45, " falsezinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.ensureCapacity(65);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.setNewLineText(" 10\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[10, 0\nzinekoTrtSeslaf ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[10, 0\nzinekoTrtSeslaf ]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test15043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15043");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        java.lang.String str18 = strBuilder3.substring(2);
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        int int38 = strList23.indexOf((java.lang.Object) strTokenizer33);
        java.util.ListIterator<java.lang.String> strItor40 = strList23.listIterator((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder3.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList23, "#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append(59);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendFixedWidthPadRight(66, (int) ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.append('1');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str18, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test15044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15044");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.lang.String[] strArray49 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        boolean boolean63 = strTokenizer60.isIgnoreEmptyTokens();
        java.lang.String str64 = strTokenizer60.next();
        int int65 = strList50.indexOf((java.lang.Object) strTokenizer60);
        java.util.ListIterator<java.lang.String> strItor67 = strList50.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor68 = strList50.iterator();
        java.lang.String[] strArray72 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        char[] charArray81 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setDelimiterString("hi!");
        boolean boolean86 = strTokenizer83.isIgnoreEmptyTokens();
        java.lang.String str87 = strTokenizer83.next();
        int int88 = strList73.indexOf((java.lang.Object) strTokenizer83);
        boolean boolean89 = strList50.addAll((java.util.Collection<java.lang.String>) strList73);
        java.util.ListIterator<java.lang.String> strItor90 = strList73.listIterator();
        boolean boolean92 = strList73.add("");
        java.util.ListIterator<java.lang.String> strItor93 = strList73.listIterator();
        boolean boolean94 = strList4.removeAll((java.util.Collection<java.lang.String>) strList73);
        strList73.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList98 = strList73.subList(77, 36);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 36");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#4#a4#" + "'", str64, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(strItor93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test15045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15045");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceAll("0\nfalse32.0", "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test15046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15046");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        java.lang.String str12 = strBuilder7.rightString((int) 'a');
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.replaceAll(strMatcher25, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        java.lang.String[] strArray46 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder33.appendAll((java.lang.Object[]) strArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder7.appendWithSeparators((java.lang.Object[]) strArray46, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.trim();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln((long) '#');
        java.util.stream.IntStream intStream59 = strBuilder56.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int75 = strBuilder72.lastIndexOf(strMatcher73, (int) (short) 10);
        int int77 = strBuilder56.indexOf(strMatcher73, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer51.setTrimmerMatcher(strMatcher73);
        java.util.List<java.lang.String> strList79 = strTokenizer78.getTokenList();
        java.lang.String[] strArray80 = strTokenizer78.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder49.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer78, "0");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceAll("StrTokenizer[#4#, 4#]", "\n0.001");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.setNullText("1.0java.io.IOExceptionfalse1001.");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10\n\n" + "'", str12, "10\n\n");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(intStream59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test15047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15047");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        java.lang.String str51 = strBuilder49.rightString((int) (short) -1);
        java.lang.String str53 = strBuilder49.rightString((int) (short) 100);
        int int55 = strBuilder49.indexOf('#');
        boolean boolean56 = strList26.contains((java.lang.Object) int55);
        strList26.clear();
        strList26.clear();
        java.util.Iterator<java.lang.String> strItor59 = strList26.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = strList26.set(57, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 57, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strItor59);
    }

    @Test
    public void test15048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15048");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append("#4#a4#", 4, 2);
        boolean boolean10 = strBuilder2.endsWith("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.setNewLineText("a4 435\n10\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test15049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15049");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList12.spliterator();
        boolean boolean23 = strList12.add("59.052.0");
        int int24 = strList12.size();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
    }

    @Test
    public void test15050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15050");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(10L);
        int int28 = strBuilder22.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append("#4#a4#");
        java.lang.String str39 = strBuilder32.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.append(false);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        boolean boolean61 = strTokenizer58.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder45.appendFixedWidthPadRight((java.lang.Object) strTokenizer58, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.appendln((int) (short) 10);
        boolean boolean75 = strBuilder45.equalsIgnoreCase(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder45.reverse();
        java.lang.StringBuffer stringBuffer77 = strBuilder76.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder32.append(stringBuffer77, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder31.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder16.append((java.lang.Object) stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder7.appendln(strBuilder16);
        char[] charArray86 = strBuilder83.toCharArray((int) (short) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray86);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#4#a4#" + "'", str39, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test15051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15051");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasNext();
        java.util.List<java.lang.String> strList12 = strTokenizer8.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream13 = strList12.parallelStream();
        java.lang.String str16 = strList12.set((int) (byte) 0, "ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        java.util.stream.Stream<java.lang.String> strStream17 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        java.lang.String str23 = strBuilder21.rightString((int) (short) -1);
        java.lang.String str25 = strBuilder21.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendFixedWidthPadLeft((java.lang.Object) "4#", 51, '3');
        boolean boolean33 = strList12.remove((java.lang.Object) strBuilder21);
        java.util.stream.Stream<java.lang.String> strStream34 = strList12.stream();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#4#a4#" + "'", str16, "#4#a4#");
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strStream34);
    }

    @Test
    public void test15052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15052");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.trim();
        java.lang.Object[] objArray19 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.appendAll(objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert(71, "ue\n65\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 71");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test15053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15053");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        int int5 = strTokenizer4.size();
        java.lang.String str6 = strTokenizer4.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.reset("a.io.IOExceptionfalse");
        java.lang.String str10 = strTokenizer9.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int14 = strBuilder11.indexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append("#4#a4#");
        java.lang.String str18 = strBuilder11.leftString((int) (short) 100);
        int int20 = strBuilder11.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str28 = strBuilder27.getNullText();
        char[] charArray30 = new char[] { 'a' };
        char[] charArray31 = strBuilder27.getChars(charArray30);
        char[] charArray36 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray37 = strBuilder27.getChars(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int51 = strBuilder48.lastIndexOf(strMatcher49, (int) (short) 10);
        boolean boolean52 = strBuilder27.contains(strMatcher49);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        java.lang.String str64 = strTokenizer63.nextToken();
        java.util.List<java.lang.String> strList65 = strTokenizer63.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer63.setTrimmerMatcher(strMatcher66);
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74);
        int int79 = strMatcher66.isMatch(charArray74, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher49, strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder11.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer9.setDelimiterMatcher(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "a.io.IOExceptionfalse" + "'", str10, "a.io.IOExceptionfalse");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#4#a4#" + "'", str64, "#4#a4#");
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strTokenizer82);
    }

    @Test
    public void test15054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15054");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String str10 = strBuilder0.toString();
        int int13 = strBuilder0.lastIndexOf(' ', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.insert(55, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 55");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#4#a4#" + "'", str10, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test15055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15055");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder32.replace(strMatcher37, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[#4#a4#]", strMatcher37, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder5.deleteAll(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst('0', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendSeparator('a', 55);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test15056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15056");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        boolean boolean60 = strList27.retainAll((java.util.Collection<java.lang.String>) strList57);
        java.util.Iterator<java.lang.String> strItor61 = strList57.iterator();
        int int62 = strList57.size();
        java.util.Iterator<java.lang.String> strItor63 = strList57.iterator();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strItor61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(strItor63);
    }

    @Test
    public void test15057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15057");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        int int38 = strBuilder28.indexOf(strMatcher36);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher36, strMatcher51);
        int int53 = reader13.read(charArray22);
        long long55 = reader13.skip(0L);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        int int66 = reader13.read(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        int int71 = strTokenizer70.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = strTokenizer70.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test15058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15058");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append((double) 1.0f);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer36.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer40.setQuoteChar('0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer40.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer40.set("35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not tokenized yet]\n59.00000000000000000000000000000");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
    }

    @Test
    public void test15059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15059");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        java.util.Iterator<java.lang.String> strItor8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendAll(strItor8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.setNewLineText("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendPadding(2, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendPadding(61, ' ');
        int int20 = strBuilder14.indexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.deleteAll('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.appendln("1.0java.io.IOExcept", 4, (int) (byte) 0);
        int int28 = strBuilder26.indexOf("e1001.0\n1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test15060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15060");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        writer54.write(52);
        writer54.write(18);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str60 = strBuilder59.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.deleteAll(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.appendln((java.lang.Object) strBuilder61);
        java.util.Iterator<java.lang.String> strItor67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder59.appendAll(strItor67);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer71 = writer54.append((java.lang.CharSequence) strBuilder68, (int) (short) -1, 65);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test15061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15061");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.setCharAt(37, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.setNewLineText("100.0zinekoTrtSeslaf1");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll("a", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendln("4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getQuoteMatcher();
        int int60 = strBuilder54.lastIndexOf(strMatcher59);
        boolean boolean61 = strBuilder45.contains(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("hi!");
        java.lang.String str66 = strBuilder65.getNullText();
        char[] charArray68 = new char[] { 'a' };
        char[] charArray69 = strBuilder65.getChars(charArray68);
        char[] charArray74 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray75 = strBuilder65.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, 'a');
        boolean boolean78 = strTokenizer77.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer77.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("zinekoTrtSeslaf ", strMatcher79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder45.replaceFirst(strMatcher79, "4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder33.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder33.appendSeparator('I', 'I');
        boolean boolean87 = strBuilder86.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test15062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15062");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String str19 = strBuilder18.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("10\n\n", "0\nzinekoTrtSeslaf ");
        int int26 = strBuilder21.lastIndexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.appendSeparator(".0j", "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.reverse();
        java.util.stream.IntStream intStream31 = strBuilder30.chars();
        java.io.Reader reader32 = strBuilder30.asReader();
        long long34 = reader32.skip((long) 0);
        java.nio.CharBuffer charBuffer35 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int36 = reader32.read(charBuffer35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test15063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15063");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setTrimmerMatcher(strMatcher13);
        java.lang.String str15 = strTokenizer14.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterChar('a');
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        int int31 = strTokenizer29.size();
        java.lang.String str32 = strTokenizer29.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer14.setTrimmerMatcher(strMatcher35);
        boolean boolean37 = strTokenizer36.hasPrevious();
        boolean boolean38 = strTokenizer36.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#4#a4#" + "'", str15, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#" + "'", str32, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test15064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15064");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream8 = strList7.parallelStream();
        boolean boolean9 = strList7.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream10 = strList7.parallelStream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterChar(' ');
        java.util.List<java.lang.String> strList16 = strTokenizer15.getTokenList();
        int int17 = strList7.indexOf((java.lang.Object) strTokenizer15);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer15.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strStream10);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test15065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15065");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator("ja", (int) '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        int int20 = strBuilder14.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendSeparator("", 1);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln((float) 6);
        java.util.Iterator<java.lang.String> strItor38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendWithSeparators(strItor38, "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.appendFixedWidthPadLeft((java.lang.Object) strBuilder35, 25, 'e');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test15066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15066");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        java.io.IOException iOException5 = new java.io.IOException("#4#a4#", throwable3);
        java.io.IOException iOException6 = new java.io.IOException(".0j", (java.lang.Throwable) iOException5);
        java.lang.Throwable throwable9 = null;
        java.io.IOException iOException10 = new java.io.IOException(throwable9);
        java.io.IOException iOException12 = new java.io.IOException("StrTokenizer[#4#a4#]");
        iOException10.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException("eptionfalse1001.0\n35.0\n1false0\n\n", (java.lang.Throwable) iOException10);
        java.io.IOException iOException15 = new java.io.IOException(" 10\n", (java.lang.Throwable) iOException10);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray17 = iOException16.getSuppressed();
        iOException6.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.lang.Throwable[] throwableArray20 = iOException16.getSuppressed();
        java.io.IOException iOException22 = new java.io.IOException("StrTokenizer[#4#a4#]");
        iOException16.addSuppressed((java.lang.Throwable) iOException22);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test15067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15067");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.lang.String str47 = strList26.get(1);
        strList26.add(1, "1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln((long) '#');
        java.util.stream.IntStream intStream59 = strBuilder56.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int75 = strBuilder72.lastIndexOf(strMatcher73, (int) (short) 10);
        int int77 = strBuilder56.indexOf(strMatcher73, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer51.setTrimmerMatcher(strMatcher73);
        java.util.List<java.lang.String> strList79 = strTokenizer78.getTokenList();
        java.util.ListIterator<java.lang.String> strItor80 = strList79.listIterator();
        boolean boolean81 = strList26.addAll((java.util.Collection<java.lang.String>) strList79);
        boolean boolean82 = strList79.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList85 = strList79.subList(24, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 29");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(intStream59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test15068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15068");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(true);
        int int11 = strBuilder5.lastIndexOf("java.io.IOException: StrTokenizer[#4#a4#]", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.appendln((float) 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.appendln("StrTokenizer[]", 0, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.deleteAll("lse1001.0\n3");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln(true);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test15069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15069");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.replace(strMatcher12, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[#4#a4#]", strMatcher12, strMatcher23);
        boolean boolean25 = strTokenizer24.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test15070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15070");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((int) (byte) 0);
        java.lang.String str22 = strBuilder21.getNullText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1false0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("java.io.IOException: StrTokenizer[");
        boolean boolean27 = strBuilder21.equals((java.lang.Object) strTokenizer26);
        java.lang.String str28 = strBuilder21.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.append((float) 12);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test15071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15071");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("0.012true104444444444444444444444444444444444444444444444  \n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar('a');
        java.lang.String str4 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        char[] charArray16 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray17 = strBuilder7.getChars(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int21 = strBuilder18.indexOf(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.append(' ');
        java.util.stream.IntStream intStream24 = strBuilder23.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int27 = strBuilder23.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int42 = strBuilder39.lastIndexOf(strMatcher40, (int) (short) -1);
        boolean boolean43 = strBuilder23.contains(strMatcher40);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher57, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher40, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int65 = strTokenizer64.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer64.setTrimmerMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer1.setIgnoredMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer1.setIgnoredChar(':');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.012true104444444444444444444444444444444444444444444444  \n" + "'", str4, "0.012true104444444444444444444444444444444444444444444444  \n");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test15072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15072");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        boolean boolean17 = reader13.ready();
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray24);
        int int29 = reader13.read(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'I', '#');
        java.lang.Object obj33 = strTokenizer32.clone();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test15073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15073");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        java.lang.String str18 = strBuilder3.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.deleteFirst("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder3.append('#');
        java.lang.StringBuffer stringBuffer23 = strBuilder3.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder3.appendln((double) 66);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str18, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "1.0jva.io.IOExceptionfalse100#");
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test15074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15074");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.append((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('\000', 'c');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test15075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15075");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        java.util.ListIterator<java.lang.String> strItor8 = strList7.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.clear();
        java.lang.String str14 = strBuilder12.rightString((int) (short) -1);
        java.lang.String str16 = strBuilder12.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoreEmptyTokens(false);
        int int23 = strTokenizer20.previousIndex();
        java.lang.Object obj24 = strTokenizer20.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.append((java.lang.Object) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.reverse();
        java.io.Reader reader27 = strBuilder26.asReader();
        int int28 = strList7.indexOf((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.appendln(strBuilder48);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int54 = strBuilder40.lastIndexOf(strMatcher52, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.appendSeparator("StrTokenizer[#4#a4#]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.clear();
        java.lang.Throwable throwable65 = null;
        java.io.IOException iOException66 = new java.io.IOException("", throwable65);
        java.io.IOException iOException67 = new java.io.IOException("#4#a4#", throwable65);
        java.io.IOException iOException68 = new java.io.IOException(throwable65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray72 = new java.lang.Object[] { 1.0f, iOException68, false, 100, strBuilder71 };
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder61.appendWithSeparators(objArray72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strBuilder81.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder40.appendAll((java.util.Iterator<java.lang.String>) strTokenizer82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder40.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.replaceAll('.', 'a');
        char[] charArray89 = strBuilder88.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray89);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder30.appendln(charArray89, 64, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 7");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strItor8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "  \nStrTokenizer[#4#a4#]1a0javaaioaIOExceptionfalse1001a035a04");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "  \nStrTokenizer[#4#a4#]1a0javaaioaIOExceptionfalse1001a035a04");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[ ,  , \n, S, t, r, T, o, k, e, n, i, z, e, r, [, #, 4, #, a, 4, #, ], 1, a, 0, j, a, v, a, a, i, o, a, I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, a, 0, 3, 5, a, 0, 4]");
        org.junit.Assert.assertNotNull(strTokenizer90);
    }

    @Test
    public void test15076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15076");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        java.util.Spliterator<java.lang.String> strSpliterator58 = strList4.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        char[] charArray67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln(charArray67);
        boolean boolean69 = strBuilder66.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.clear();
        boolean boolean75 = strBuilder74.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("hi!");
        java.lang.String str81 = strBuilder80.getNullText();
        char[] charArray83 = new char[] { 'a' };
        char[] charArray84 = strBuilder80.getChars(charArray83);
        int int86 = strMatcher77.isMatch(charArray84, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder74.append(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder66.insert((int) (byte) 1, charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray84);
        java.lang.String[] strArray93 = strTokenizer92.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer92.setDelimiterString("0\n");
        boolean boolean96 = strList4.remove((java.lang.Object) strTokenizer95);
        java.util.Iterator<java.lang.String> strItor97 = strList4.iterator();
        java.util.stream.Stream<java.lang.String> strStream98 = strList4.stream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strSpliterator58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(strItor97);
        org.junit.Assert.assertNotNull(strStream98);
    }

    @Test
    public void test15077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15077");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.ensureCapacity(39);
        boolean boolean11 = strBuilder9.endsWith(".0jav");
        char[] charArray16 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray18 = strBuilder9.getChars(charArray16);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        java.lang.String str30 = strTokenizer29.nextToken();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        char[] charArray43 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray44 = strBuilder34.getChars(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        int int46 = strList31.indexOf((java.lang.Object) charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int52 = strTokenizer51.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer51.setTrimmerMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher50, strMatcher54);
        java.util.List<java.lang.String> strList57 = strTokenizer56.getTokenList();
        boolean boolean58 = strList57.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator59 = strList57.spliterator();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strSpliterator59);
    }

    @Test
    public void test15078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15078");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.deleteAll(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.append((float) (byte) 0);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int57 = strBuilder52.indexOf(strMatcher55, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.replaceFirst(strMatcher55, "100.0false\n");
        int int62 = strBuilder28.lastIndexOf(strMatcher55, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder18.replaceAll(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterChar(' ');
        boolean boolean69 = strTokenizer68.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer68.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder18.deleteAll(strMatcher70);
        java.lang.String str72 = strBuilder71.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.deleteAll(" falseStrTokeniz");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteAll('I');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append("-");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test15079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15079");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        int int14 = strBuilder12.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendSeparator(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer17.reset();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer18);
    }

    @Test
    public void test15080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15080");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        int int11 = strBuilder5.lastIndexOf('a');
        java.lang.String str13 = strBuilder5.leftString(16);
        int int14 = strBuilder5.capacity();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setIgnoreEmptyTokens(false);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        boolean boolean25 = strList24.isEmpty();
        java.lang.String[] strArray29 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        boolean boolean43 = strTokenizer40.isIgnoreEmptyTokens();
        java.lang.String str44 = strTokenizer40.next();
        int int45 = strList30.indexOf((java.lang.Object) strTokenizer40);
        java.util.ListIterator<java.lang.String> strItor47 = strList30.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor48 = strList30.iterator();
        java.lang.String[] strArray52 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterString("hi!");
        boolean boolean66 = strTokenizer63.isIgnoreEmptyTokens();
        java.lang.String str67 = strTokenizer63.next();
        int int68 = strList53.indexOf((java.lang.Object) strTokenizer63);
        boolean boolean69 = strList30.addAll((java.util.Collection<java.lang.String>) strList53);
        java.util.ListIterator<java.lang.String> strItor70 = strList53.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int74 = strBuilder71.indexOf(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int80 = strBuilder77.indexOf(strMatcher79);
        int int81 = strBuilder71.indexOf(strMatcher79);
        int int82 = strList53.indexOf((java.lang.Object) strBuilder71);
        int int83 = strList53.size();
        java.lang.Object[] objArray84 = strList53.toArray();
        boolean boolean85 = strList24.addAll((java.util.Collection<java.lang.String>) strList53);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder5.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList53, "001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder5.append((double) 17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strBuilder5.asTokenizer();
        java.lang.String str92 = strBuilder5.leftString(6);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " 10\n" + "'", str13, " 10\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#4#a4#" + "'", str67, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[, , ]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + " 10\n00" + "'", str92, " 10\n00");
    }

    @Test
    public void test15081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15081");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendSeparator('4', '#');
        int int28 = strBuilder5.capacity();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setTrimmerMatcher(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.replaceFirst(strMatcher34, "StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((long) 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test15082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15082");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("a", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.insert((int) (short) 0, (double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str14 = strBuilder13.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteAll(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNewLineText("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.deleteCharAt((int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder9.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test15083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15083");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert((int) '3', "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        char[] charArray25 = strBuilder15.getChars(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.Throwable throwable33 = null;
        java.io.IOException iOException34 = new java.io.IOException("", throwable33);
        java.io.IOException iOException35 = new java.io.IOException("#4#a4#", throwable33);
        java.io.IOException iOException36 = new java.io.IOException(throwable33);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1.0f, iOException36, false, 100, strBuilder39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendWithSeparators(objArray40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int58 = strBuilder56.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        java.util.List<java.lang.String> strList61 = strTokenizer60.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder1.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList61, "2.0 ");
        boolean boolean65 = strBuilder63.contains('c');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test15084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15084");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer37);
        java.lang.String str44 = strBuilder18.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder18.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder18.insert(8, (int) 'I');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder18.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test15085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15085");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder9.setNullText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceFirst('1', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) 41);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test15086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15086");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(strBuilder26, (int) 'a', 1);
        java.lang.String str32 = strBuilder29.midString(37, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        char[] charArray55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(charArray55);
        boolean boolean57 = strBuilder54.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.clear();
        boolean boolean63 = strBuilder62.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        java.lang.String str69 = strBuilder68.getNullText();
        char[] charArray71 = new char[] { 'a' };
        char[] charArray72 = strBuilder68.getChars(charArray71);
        int int74 = strMatcher65.isMatch(charArray72, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder62.append(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder54.insert((int) (byte) 1, charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, "StrTokenizer[#4#a4#]");
        char[] charArray79 = strBuilder46.getChars(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder29.insert(3, (java.lang.Object) charArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln(29);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.append(67);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0\n" + "'", str32, "0\n");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "100.012");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "100.012");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[1, 0, 0, ., 0, 1, 2]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test15087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15087");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(' ');
        java.util.stream.IntStream intStream64 = strBuilder63.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int67 = strBuilder63.lastIndexOf(strMatcher66);
        boolean boolean68 = strList4.remove((java.lang.Object) strMatcher66);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = strList4.set((int) '3', "java.io.IOException: StrTokenizer[100.0\n]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 51, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test15088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15088");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst('#');
        java.lang.String str22 = strBuilder21.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.append(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder2.appendFixedWidthPadLeft((int) '\n', 11, '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + " " + "'", str22, " ");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test15089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15089");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(strBuilder26, (int) 'a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.appendln((double) (short) 10);
        java.lang.String str33 = strBuilder31.substring(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("", '1', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(" ", ".0jav");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer37.setTrimmerMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.deleteFirst(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n10.0\n" + "'", str33, "1.0java.io.IOExceptionfalse1001.0\n35.0\n10.0\n");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test15090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15090");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        java.lang.String str12 = strBuilder7.rightString((int) 'a');
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.replaceAll(strMatcher25, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        int int33 = strBuilder29.lastIndexOf(" a10\nfalse\n", 63);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10\n\n" + "'", str12, "10\n\n");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test15091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15091");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int21 = strBuilder18.indexOf(strMatcher20);
        int int22 = strBuilder12.indexOf(strMatcher20);
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher20, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        int int53 = strBuilder39.length();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(" a10\n");
        int int56 = strBuilder39.indexOf(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset("eslf\n\n181111");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 6 + "'", int53 == 6);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertNotNull(strTokenizer59);
    }

    @Test
    public void test15092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15092");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        java.lang.String str13 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder4.appendSeparator('a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        java.lang.Throwable throwable27 = null;
        java.io.IOException iOException28 = new java.io.IOException("", throwable27);
        java.io.IOException iOException29 = new java.io.IOException("#4#a4#", throwable27);
        java.io.IOException iOException30 = new java.io.IOException(throwable27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1.0f, iOException30, false, 100, strBuilder33 };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendWithSeparators(objArray34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((double) (short) 1);
        int int39 = strBuilder38.size();
        char[] charArray40 = strBuilder38.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.insert(71, charArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 71");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 34 + "'", int39 == 34);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n]");
    }

    @Test
    public void test15093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15093");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendSeparator('1', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append('#');
        java.lang.String str50 = strBuilder47.midString(23, (int) 'I');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("hi!");
        java.lang.String str66 = strBuilder65.getNullText();
        char[] charArray68 = new char[] { 'a' };
        char[] charArray69 = strBuilder65.getChars(charArray68);
        char[] charArray74 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray75 = strBuilder65.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder56.appendln(charArray74, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder56.appendln((long) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln((long) 5);
        java.lang.Throwable throwable87 = null;
        java.io.IOException iOException88 = new java.io.IOException("", throwable87);
        java.io.IOException iOException89 = new java.io.IOException("hi!", throwable87);
        java.io.IOException iOException90 = new java.io.IOException((java.lang.Throwable) iOException89);
        java.lang.Throwable[] throwableArray91 = iOException89.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder82.appendWithSeparators((java.lang.Object[]) throwableArray91, "o.IOExceptionfalse1001.0\n35.0\n##a#");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder47.appendAll((java.lang.Object[]) throwableArray91);
        java.lang.CharSequence charSequence97 = strBuilder94.subSequence((int) (byte) 10, 13);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "alse1001.0\n35.0\n1false0\n\nava.io.IOE\n1#" + "'", str50, "alse1001.0\n35.0\n1false0\n\nava.io.IOE\n1#");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(throwableArray91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertEquals("'" + charSequence97 + "' != '" + ".IO" + "'", charSequence97, ".IO");
    }

    @Test
    public void test15094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15094");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append(stringBuffer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator('.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean17 = strTokenizer16.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        int int38 = strList23.indexOf((java.lang.Object) strTokenizer33);
        java.util.ListIterator<java.lang.String> strItor40 = strList23.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor41 = strList23.iterator();
        java.lang.String[] strArray45 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.isIgnoreEmptyTokens();
        java.lang.String str60 = strTokenizer56.next();
        int int61 = strList46.indexOf((java.lang.Object) strTokenizer56);
        boolean boolean62 = strList23.addAll((java.util.Collection<java.lang.String>) strList46);
        java.util.ListIterator<java.lang.String> strItor63 = strList46.listIterator();
        boolean boolean65 = strList46.add("");
        int int66 = strList46.size();
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("hi!");
        boolean boolean78 = strTokenizer75.hasNext();
        java.util.List<java.lang.String> strList79 = strTokenizer75.getTokenList();
        boolean boolean80 = strList46.removeAll((java.util.Collection<java.lang.String>) strList79);
        java.lang.Object[] objArray81 = strList79.toArray();
        boolean boolean82 = strList18.containsAll((java.util.Collection<java.lang.String>) strList79);
        java.io.IOException iOException84 = new java.io.IOException("1false0\nfalse");
        java.io.IOException iOException86 = new java.io.IOException("StrTokenizer[not tokenized yet]");
        iOException84.addSuppressed((java.lang.Throwable) iOException86);
        boolean boolean88 = strList79.remove((java.lang.Object) iOException84);
        java.lang.Object[] objArray89 = strList79.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder9.appendAll(objArray89);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "#4#a4#" + "'", str60, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[#4#a4#]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test15095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15095");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst(' ', ' ');
        int int10 = strBuilder3.lastIndexOf("#4#");
        int int12 = strBuilder3.indexOf("10.0\n97");
        java.lang.StringBuffer stringBuffer13 = strBuilder3.toStringBuffer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer13);
        org.junit.Assert.assertEquals(stringBuffer13.toString(), "false");
    }

    @Test
    public void test15096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15096");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        java.lang.String str4 = strBuilder3.getNullText();
        char[] charArray6 = new char[] { 'a' };
        char[] charArray7 = strBuilder3.getChars(charArray6);
        char[] charArray12 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray13 = strBuilder3.getChars(charArray12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int27 = strBuilder24.lastIndexOf(strMatcher25, (int) (short) 10);
        boolean boolean28 = strBuilder3.contains(strMatcher25);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        int int55 = strMatcher42.isMatch(charArray50, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher25, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int58 = strTokenizer57.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer57.setTrimmerMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer56.setTrimmerMatcher(strMatcher60);
        int int63 = strTokenizer56.size();
        boolean boolean64 = strTokenizer56.hasPrevious();
        java.util.List<java.lang.String> strList65 = strTokenizer56.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer56.setIgnoredChar('e');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer56.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
    }

    @Test
    public void test15097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15097");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNullText("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        java.lang.Object obj8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(obj8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln(10L);
        int int18 = strBuilder12.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append("#4#a4#");
        java.lang.String str29 = strBuilder22.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(false);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        boolean boolean51 = strTokenizer48.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strTokenizer48, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln((int) (short) 10);
        boolean boolean65 = strBuilder35.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder35.reverse();
        java.lang.StringBuffer stringBuffer67 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder22.append(stringBuffer67, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder21.append(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int75 = strBuilder72.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.append((int) (short) -1);
        boolean boolean82 = strBuilder21.equalsIgnoreCase(strBuilder81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder83.reverse();
        int int85 = strBuilder83.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder9.appendFixedWidthPadRight((java.lang.Object) int85, (int) '1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder9.appendSeparator('1');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#4#a4#" + "'", str29, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 24 + "'", int85 == 24);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test15098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15098");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.replaceAll("java.io.IOException: StrTokenizer[#4#a4#]", "#4#a4#");
        int int20 = strBuilder17.lastIndexOf(" ", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.replaceAll(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", "eptionfalse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.appendSeparator("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.deleteFirst("##########################110\n\ni###############################################################################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(12, "1.0");
        java.lang.String str33 = strBuilder32.getNewLineText();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test15099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15099");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.write("0java.io.IOExceptionfalse100", 4, 4);
        writer9.flush();
        java.io.Writer writer31 = writer9.append('4');
        writer9.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer31);
    }

    @Test
    public void test15100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15100");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        int int39 = strBuilder29.indexOf(strMatcher37);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher37, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.replace(strMatcher67, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int74 = strBuilder56.lastIndexOf(strMatcher67, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer54.setTrimmerMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int79 = strBuilder76.indexOf(strMatcher78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int85 = strBuilder82.indexOf(strMatcher84);
        int int86 = strBuilder76.indexOf(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer54.setTrimmerMatcher(strMatcher84);
        int int88 = strTokenizer87.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
    }

    @Test
    public void test15101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15101");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        writer37.flush();
        writer37.write("10\n ");
        writer37.write("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        writer37.write(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
    }

    @Test
    public void test15102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15102");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor45 = strList27.iterator();
        boolean boolean46 = strList4.remove((java.lang.Object) strItor45);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList51.iterator();
        boolean boolean70 = strList4.addAll((java.util.Collection<java.lang.String>) strList51);
        java.util.ListIterator<java.lang.String> strItor72 = strList4.listIterator((int) (byte) 0);
        java.lang.String str75 = strList4.set((int) (short) 1, "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n");
        java.util.ListIterator<java.lang.String> strItor76 = strList4.listIterator();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator77 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList4.replaceAll(strUnaryOperator77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(strItor76);
    }

    @Test
    public void test15103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15103");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        boolean boolean46 = reader13.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        char[] charArray58 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray59 = strBuilder49.getChars(charArray58);
        java.io.Reader reader60 = strBuilder49.asReader();
        reader60.mark(10);
        reader60.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        char[] charArray73 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder66.appendln(charArray73);
        int int76 = reader60.read(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        java.lang.String str80 = strBuilder79.getNullText();
        char[] charArray82 = new char[] { 'a' };
        char[] charArray83 = strBuilder79.getChars(charArray82);
        char[] charArray88 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray89 = strBuilder79.getChars(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray88);
        int int92 = reader60.read(charArray88);
        int int93 = reader13.read(charArray88);
        boolean boolean94 = reader13.ready();
        reader13.mark(0);
        int int97 = reader13.read();
        int int98 = reader13.read();
        boolean boolean99 = reader13.ready();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test15104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15104");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(' ');
        java.util.stream.IntStream intStream19 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int22 = strBuilder18.lastIndexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int37 = strBuilder34.lastIndexOf(strMatcher35, (int) (short) -1);
        boolean boolean38 = strBuilder18.contains(strMatcher35);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher52, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher35, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int60 = strTokenizer59.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer59.setTrimmerMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher62);
        boolean boolean65 = strTokenizer64.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer64.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer64.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setDelimiterString("a");
        java.lang.Object obj71 = strTokenizer68.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer68.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer73);
    }

    @Test
    public void test15105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15105");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        int int3 = strTokenizer2.nextIndex();
        java.lang.Object obj4 = strTokenizer2.clone();
        int int5 = strTokenizer2.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int14 = strBuilder11.indexOf(strMatcher13);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer23);
        java.lang.String str27 = strBuilder11.midString((int) (byte) 1, (-1));
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.replaceFirst(strMatcher40, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder11.appendSeparator("", "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.deleteAll(strMatcher49);
        int int52 = strBuilder11.lastIndexOf(strMatcher49, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer8.setQuoteMatcher(strMatcher49);
        java.lang.String str54 = strTokenizer53.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer53.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer2.setIgnoredMatcher(strMatcher55);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str54, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
    }

    @Test
    public void test15106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15106");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor45 = strList27.iterator();
        boolean boolean46 = strList4.remove((java.lang.Object) strItor45);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList51.iterator();
        boolean boolean70 = strList4.addAll((java.util.Collection<java.lang.String>) strList51);
        java.util.ListIterator<java.lang.String> strItor72 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor73 = strList4.iterator();
        int int74 = strList4.size();
        int int75 = strList4.size();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 6 + "'", int74 == 6);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 6 + "'", int75 == 6);
    }

    @Test
    public void test15107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15107");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        java.lang.StringBuffer stringBuffer37 = strBuilder36.toStringBuffer();
        java.lang.String[] strArray41 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        boolean boolean55 = strTokenizer52.isIgnoreEmptyTokens();
        java.lang.String str56 = strTokenizer52.next();
        int int57 = strList42.indexOf((java.lang.Object) strTokenizer52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.clear();
        java.lang.Throwable throwable65 = null;
        java.io.IOException iOException66 = new java.io.IOException("", throwable65);
        java.io.IOException iOException67 = new java.io.IOException("#4#a4#", throwable65);
        java.io.IOException iOException68 = new java.io.IOException(throwable65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray72 = new java.lang.Object[] { 1.0f, iOException68, false, 100, strBuilder71 };
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder61.appendWithSeparators(objArray72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder76.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder76.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder76.setLength((int) ' ');
        int int88 = strList42.lastIndexOf((java.lang.Object) strBuilder76);
        java.util.stream.Stream<java.lang.String> strStream89 = strList42.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder36.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList42, "true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder91.insert(9, (long) 31);
        int int95 = strBuilder94.capacity();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(stringBuffer37);
        org.junit.Assert.assertEquals(stringBuffer37.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strStream89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 32 + "'", int95 == 32);
    }

    @Test
    public void test15108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15108");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int28 = strBuilder25.lastIndexOf(strMatcher26, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder0.replaceFirst(strMatcher26, "#4#a4#");
        java.lang.String str31 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.reverse();
        boolean boolean43 = strBuilder37.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.appendln(48);
        char[] charArray46 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.replaceFirst(strMatcher48, "#");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.trim();
        java.lang.Object[] objArray63 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendAll(objArray63);
        char[] charArray65 = strBuilder61.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '\000', '0');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray65);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = strMatcher48.isMatch(charArray65, 19, 88, 43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "eslf48\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "eslf48\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[e, s, l, f, 4, 8, \n]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher70);
    }

    @Test
    public void test15109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15109");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.appendFixedWidthPadLeft((java.lang.Object) "4#", 51, '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll("java.io.IOException: StrTokenizer[#4#a4#]", "1.0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.insert((int) '#', (double) 73);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test15110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15110");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "59.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        boolean boolean34 = strBuilder33.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        int int45 = strMatcher36.isMatch(charArray43, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.append(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        boolean boolean49 = strTokenizer48.isIgnoreEmptyTokens();
        java.lang.String str50 = strTokenizer48.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer48.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray20);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "a" + "'", str50, "a");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher53);
    }

    @Test
    public void test15111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15111");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", '#', '#');
        java.lang.String str4 = strTokenizer3.toString();
        int int5 = strTokenizer3.nextIndex();
        int int6 = strTokenizer3.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str9 = strTokenizer8.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        java.io.Reader reader25 = strBuilder14.asReader();
        reader25.mark(10);
        reader25.close();
        boolean boolean29 = reader25.markSupported();
        int int30 = reader25.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        char[] charArray42 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray43 = strBuilder33.getChars(charArray42);
        java.io.Reader reader44 = strBuilder33.asReader();
        long long46 = reader44.skip((long) 59);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        int int69 = strBuilder59.indexOf(strMatcher67);
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher67, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray53);
        int int85 = reader44.read(charArray53);
        int int86 = reader25.read(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer11.reset(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer3.reset(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, "59.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, "java.io.IOException: a10\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test15112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15112");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.insert(0, charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        java.lang.String str55 = strTokenizer54.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer43.setTrimmerMatcher(strMatcher60);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer61.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#4#a4#" + "'", str55, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
    }

    @Test
    public void test15113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15113");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("", throwable2);
        java.io.IOException iOException5 = new java.io.IOException("0.012true104444444444444444444444444444444444444444444444  \n");
        iOException3.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException("1.0java.io.IOExceptionfalse1001.0\ntrue\n", (java.lang.Throwable) iOException7);
    }

    @Test
    public void test15114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15114");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.setQuoteChar(' ');
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer39.setDelimiterString("false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append("#4#a4#");
        java.lang.String str54 = strBuilder47.leftString((int) (short) 100);
        int int56 = strBuilder47.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder47.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int75 = strBuilder72.lastIndexOf(strMatcher73, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.replaceFirst(strMatcher73, "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer44.setIgnoredMatcher(strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer28.setQuoteMatcher(strMatcher73);
        boolean boolean80 = strTokenizer28.hasNext();
        int int81 = strTokenizer28.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer28.setDelimiterString("22.0\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "#4#a4#" + "'", str54, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strTokenizer83);
    }

    @Test
    public void test15115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15115");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write("0java.io.IOExceptionfalse100", 0, 0);
        writer37.flush();
        java.io.Writer writer61 = writer37.append('#');
        java.io.Writer writer63 = writer61.append('0');
        writer61.write(64);
        writer61.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(writer63);
    }

    @Test
    public void test15116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15116");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("java.io.IOException");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("aa4");
        boolean boolean5 = strTokenizer4.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test15117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15117");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(strBuilder9, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.insert(2, (java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.appendln((int) (short) 100);
        java.lang.String str23 = strBuilder14.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        java.lang.Throwable throwable31 = null;
        java.io.IOException iOException32 = new java.io.IOException("", throwable31);
        java.io.IOException iOException33 = new java.io.IOException("#4#a4#", throwable31);
        java.io.IOException iOException34 = new java.io.IOException(throwable31);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray38 = new java.lang.Object[] { 1.0f, iOException34, false, 100, strBuilder37 };
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder27.appendWithSeparators(objArray38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendPadding(52, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder14.append((java.lang.CharSequence) strBuilder52, 0, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.append(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test15118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15118");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        int int24 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, (int) '4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.String str33 = strBuilder31.rightString((int) (short) -1);
        java.lang.String str35 = strBuilder31.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoreEmptyTokens(false);
        int int42 = strTokenizer39.previousIndex();
        java.lang.Object obj43 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.append((java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder27.appendSeparator("1false0\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        java.lang.String str51 = strBuilder50.getNullText();
        char[] charArray53 = new char[] { 'a' };
        char[] charArray54 = strBuilder50.getChars(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder50.appendPadding((int) (byte) 1, '4');
        java.lang.String str60 = strBuilder59.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.replaceFirst(strMatcher61, "java.io.IOException: java.io.IOException: java.io.IOException: hi!");
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterString("hi!");
        java.lang.String str75 = strTokenizer74.nextToken();
        java.util.List<java.lang.String> strList76 = strTokenizer74.getTokenList();
        boolean boolean78 = strList76.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str81 = strTokenizer80.getContent();
        boolean boolean82 = strList76.equals((java.lang.Object) strTokenizer80);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean84 = strList76.equals((java.lang.Object) strMatcher83);
        java.lang.Object[] objArray85 = strList76.toArray();
        java.lang.String str87 = strList76.get((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder63.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList76, "se1001.035.04");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder47.appendFixedWidthPadLeft((java.lang.Object) "se1001.035.04", (int) (short) 100, 'c');
        int int95 = strBuilder47.indexOf('1', 47);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "#4#a4#" + "'", str75, "#4#a4#");
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[#4#a4#, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[#4#a4#, hi!]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 58 + "'", int95 == 58);
    }

    @Test
    public void test15119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15119");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        boolean boolean9 = strBuilder0.contains("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendFixedWidthPadLeft(11, (-1), '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append(false);
        boolean boolean25 = strBuilder23.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.replaceAll("10\n\n", "#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendSeparator(' ', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder13.append(strBuilder33, 2, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test15120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15120");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.setCharAt(2, '\000');
        boolean boolean78 = strBuilder77.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendSeparator("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln(0.0d);
        boolean boolean86 = strBuilder82.endsWith("1.0java.io.IOExceptionfalse1001.0\n35.0\n100.012true\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray91 = strTokenizer88.getTokenArray();
        java.lang.String str92 = strTokenizer88.toString();
        int int93 = strTokenizer88.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer88.getDelimiterMatcher();
        boolean boolean95 = strBuilder82.equals((java.lang.Object) strTokenizer88);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "StrTokenizer[]" + "'", str92, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test15121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15121");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(stringBuffer5, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.ensureCapacity(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append((double) 'a');
        int int18 = strBuilder13.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.setLength(112);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.minimizeCapacity();
        java.io.Writer writer22 = strBuilder20.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.replace(42, (int) '\000', "");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 6 + "'", int18 == 6);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(writer22);
    }

    @Test
    public void test15122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15122");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        boolean boolean4 = strTokenizer1.hasNext();
        java.util.List<java.lang.String> strList5 = strTokenizer1.getTokenList();
        java.lang.Object[] objArray6 = strList5.toArray();
        java.lang.Object[] objArray7 = strList5.toArray();
        boolean boolean9 = strList5.add("0.1");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("hi!");
        boolean boolean27 = strTokenizer24.isIgnoreEmptyTokens();
        java.lang.String str28 = strTokenizer24.next();
        int int29 = strList14.indexOf((java.lang.Object) strTokenizer24);
        java.util.ListIterator<java.lang.String> strItor31 = strList14.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor32 = strList14.iterator();
        java.lang.String[] strArray36 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setDelimiterString("hi!");
        boolean boolean50 = strTokenizer47.isIgnoreEmptyTokens();
        java.lang.String str51 = strTokenizer47.next();
        int int52 = strList37.indexOf((java.lang.Object) strTokenizer47);
        boolean boolean53 = strList14.addAll((java.util.Collection<java.lang.String>) strList37);
        java.util.ListIterator<java.lang.String> strItor54 = strList37.listIterator();
        boolean boolean56 = strList37.add("");
        int int57 = strList37.size();
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("hi!");
        boolean boolean69 = strTokenizer66.hasNext();
        java.util.List<java.lang.String> strList70 = strTokenizer66.getTokenList();
        boolean boolean71 = strList37.removeAll((java.util.Collection<java.lang.String>) strList70);
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.setDelimiterString("hi!");
        java.lang.String str83 = strTokenizer82.nextToken();
        java.util.List<java.lang.String> strList84 = strTokenizer82.getTokenList();
        boolean boolean85 = strList70.removeAll((java.util.Collection<java.lang.String>) strList84);
        boolean boolean86 = strList84.isEmpty();
        boolean boolean88 = strList84.add("100.0false\n");
        boolean boolean90 = strList84.add("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        java.util.ListIterator<java.lang.String> strItor91 = strList84.listIterator();
        int int92 = strList84.size();
        int int93 = strList84.size();
        boolean boolean95 = strList84.add("");
        boolean boolean96 = strList5.removeAll((java.util.Collection<java.lang.String>) strList84);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#4#a4#" + "'", str28, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strItor31);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "#4#a4#" + "'", str51, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 4 + "'", int57 == 4);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "#4#a4#" + "'", str83, "#4#a4#");
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 3 + "'", int92 == 3);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 3 + "'", int93 == 3);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test15123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15123");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.append(19);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        char[] charArray20 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.appendln(charArray20);
        int int25 = strBuilder22.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.CharSequence charSequence32 = strBuilder29.subSequence(21, 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln("1");
        boolean boolean35 = strBuilder10.equalsIgnoreCase(strBuilder34);
        java.lang.Iterable<java.lang.String> strIterable36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder10.appendWithSeparators(strIterable36, "StrTokenizer[not tokenized yet]\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("");
        int int48 = strBuilder44.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln((double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("1.1.0\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\00066\000\000\000\000\000\000\000\000\000\000\000\000ava.io.IOExce\n");
        boolean boolean60 = strBuilder38.equals(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "#" + "'", charSequence32, "#");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test15124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15124");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer60 = strBuilder54.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder30.appendln(stringBuffer60, 13, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32", "eptionfalse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.setCharAt(41, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceAll("false1001.0\n35.0\n1.0#4#4#", "java.io.IOException: a10\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(stringBuffer60);
        org.junit.Assert.assertEquals(stringBuffer60.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test15125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15125");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        int int9 = strBuilder3.lastIndexOf("1false0\n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.insert((int) '\000', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.deleteFirst('a');
        java.io.Writer writer17 = strBuilder12.asWriter();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(writer17);
    }

    @Test
    public void test15126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15126");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.deleteFirst(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder8.appendln(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(true);
        int int31 = strBuilder27.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
    }

    @Test
    public void test15127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15127");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.util.stream.Stream<java.lang.String> strStream46 = strList4.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor48 = strList4.listIterator((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
    }

    @Test
    public void test15128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15128");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        int int24 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, (int) '4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        java.util.stream.IntStream intStream29 = strBuilder27.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test15129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15129");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(" falsezinekoTrtSeslaf \n10.0", ' ');
    }

    @Test
    public void test15130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15130");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        java.lang.String str53 = strTokenizer52.nextToken();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer52.setTrimmerMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("aa", strMatcher41, strMatcher55);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("hi!");
        boolean boolean69 = strTokenizer66.isIgnoreEmptyTokens();
        java.lang.String str70 = strTokenizer66.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse", strMatcher55, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder30.replaceFirst(strMatcher71, "java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln('f');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#4#a4#" + "'", str70, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test15131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15131");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        java.io.Writer writer39 = writer37.append('1');
        java.io.Writer writer41 = writer37.append('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.append("#4#a4#");
        java.lang.String str49 = strBuilder42.leftString((int) (short) 100);
        int int51 = strBuilder42.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder42.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder42.appendSeparator(' ');
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setDelimiterString("hi!");
        java.lang.String str68 = strTokenizer67.nextToken();
        java.util.List<java.lang.String> strList69 = strTokenizer67.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer67.setTrimmerMatcher(strMatcher70);
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        int int83 = strMatcher70.isMatch(charArray78, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder56.append(charArray78);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray78);
        writer37.write(charArray78);
        writer37.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(writer41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "#4#a4#" + "'", str49, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "#4#a4#" + "'", str68, "#4#a4#");
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMatcher85);
    }

    @Test
    public void test15132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15132");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        int int14 = strBuilder0.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln("1false0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setIgnoreEmptyTokens(false);
        java.lang.String str21 = strTokenizer18.nextToken();
        char[] charArray27 = new char[] { 'a', 'a', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.appendln(charArray27);
        java.lang.String str31 = strBuilder29.substring(19);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendSeparator('a', '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert(4, 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.append((float) 158);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "aa## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "aa## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, a, #, #,  ]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + " \n" + "'", str31, " \n");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test15133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15133");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.insert(0, (double) (byte) 100);
        java.io.Reader reader29 = strBuilder28.asReader();
        boolean boolean30 = strList12.remove((java.lang.Object) reader29);
        strList12.clear();
        java.util.stream.Stream<java.lang.String> strStream32 = strList12.stream();
        java.lang.Object[] objArray33 = strList12.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = strList12.get(33);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 33, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
    }

    @Test
    public void test15134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15134");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((long) '#');
        java.util.stream.IntStream intStream34 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.appendFixedWidthPadLeft((java.lang.Object) strBuilder31, 32, '1');
        java.lang.String str44 = strBuilder42.leftString(52);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.delete(2, (int) '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("\naa");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getIgnoredMatcher();
        int int51 = strBuilder47.lastIndexOf(strMatcher50);
        java.util.stream.IntStream intStream52 = strBuilder47.codePoints();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111" + "'", str44, "001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(intStream52);
    }

    @Test
    public void test15135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15135");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer21, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setDelimiterChar(' ');
        int int26 = strTokenizer25.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test15136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15136");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append((double) 52);
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test15137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15137");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        java.util.stream.IntStream intStream16 = strBuilder2.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendSeparator('#');
        boolean boolean19 = strBuilder18.isEmpty();
        char[] charArray20 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(charArray20);
        boolean boolean25 = strBuilder23.contains("a10\n");
        boolean boolean27 = strBuilder23.endsWith(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendSeparator("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse", "35\n10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((double) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test15138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15138");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.setNewLineText("a4aa# ");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(14, (float) 72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 14");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test15139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15139");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendln('#');
        boolean boolean15 = strBuilder2.contains("aa");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("1a0\n\n0\n3");
        int int19 = strBuilder2.lastIndexOf(strMatcher17, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder2.deleteCharAt(7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 7");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test15140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15140");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("a10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        java.lang.Throwable throwable27 = null;
        java.io.IOException iOException28 = new java.io.IOException("", throwable27);
        java.io.IOException iOException29 = new java.io.IOException("#4#a4#", throwable27);
        java.io.IOException iOException30 = new java.io.IOException(throwable27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1.0f, iOException30, false, 100, strBuilder33 };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendWithSeparators(objArray34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendln(10L);
        int int52 = strBuilder46.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendln(10L);
        int int66 = strBuilder60.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder60.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder55.appendln((java.lang.Object) strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.appendln("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder17.append((java.lang.Object) strBuilder74);
        java.lang.String str77 = strBuilder17.substring(19);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\n" + "'", str77, "\n");
    }

    @Test
    public void test15141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15141");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        java.util.stream.IntStream intStream61 = strBuilder60.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int64 = strBuilder60.lastIndexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int79 = strBuilder76.lastIndexOf(strMatcher77, (int) (short) -1);
        boolean boolean80 = strBuilder60.contains(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.deleteAll('#');
        java.io.Writer writer83 = writer54.append((java.lang.CharSequence) strBuilder60);
        writer83.close();
        writer83.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(writer83);
    }

    @Test
    public void test15142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15142");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.deleteAll(strMatcher30);
        boolean boolean32 = strBuilder5.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder5.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln(' ');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test15143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15143");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        java.lang.String str16 = strBuilder0.midString((int) (byte) 1, (-1));
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.replaceFirst(strMatcher29, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder0.deleteAll('#');
        char[] charArray40 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        int int51 = strBuilder41.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher56, strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder0.deleteFirst(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: ", 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("1truefalse0\nzinekoTrtSeslaf true");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer66, "trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int72 = strTokenizer71.nextIndex();
        boolean boolean73 = strTokenizer71.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer66.setQuoteMatcher(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer66.setDelimiterChar('f');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer77);
    }

    @Test
    public void test15144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15144");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("0\nzinekoTrtSeslaf ", '0', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        char[] charArray18 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray19 = strBuilder9.getChars(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray19);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.reset(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        java.lang.String str39 = strBuilder38.getNullText();
        char[] charArray41 = new char[] { 'a' };
        char[] charArray42 = strBuilder38.getChars(charArray41);
        char[] charArray47 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray48 = strBuilder38.getChars(charArray47);
        java.io.Reader reader49 = strBuilder38.asReader();
        reader49.mark((int) (byte) 0);
        boolean boolean52 = reader49.markSupported();
        boolean boolean53 = reader49.markSupported();
        boolean boolean54 = reader49.ready();
        reader49.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream57 = strBuilder56.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        boolean boolean64 = strBuilder61.equals(strBuilder63);
        char[] charArray65 = strBuilder61.toCharArray();
        int int66 = reader49.read(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer35.reset(charArray65);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = strMatcher6.isMatch(charArray65, 132);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(intStream57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strTokenizer67);
    }

    @Test
    public void test15145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15145");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        java.util.stream.IntStream intStream16 = strBuilder2.codePoints();
        int int18 = strBuilder2.indexOf("o.IOExceptionfalse1001.0\n35.0\n##a#");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test15146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15146");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        java.lang.String str32 = strTokenizer31.nextToken();
        java.util.List<java.lang.String> strList33 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer31.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.append((java.lang.Object) strTokenizer35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        java.lang.String str55 = strBuilder54.getNullText();
        char[] charArray57 = new char[] { 'a' };
        char[] charArray58 = strBuilder54.getChars(charArray57);
        char[] charArray63 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray64 = strBuilder54.getChars(charArray63);
        int int68 = strMatcher51.isMatch(charArray63, (int) (short) 100, (int) (short) 1, (int) (byte) 10);
        int int69 = strBuilder37.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder37.append('o');
        boolean boolean73 = strBuilder71.startsWith("java.io.IOException: 1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str36, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test15147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15147");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (byte) 0);
        java.io.Reader reader34 = strBuilder29.asReader();
        java.lang.String str36 = strBuilder29.leftString(62);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1a0\n\n0\n" + "'", str36, "1a0\n\n0\n");
    }

    @Test
    public void test15148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15148");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.append(strBuilder24, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.insert(6, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.append(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strBuilder44.asTokenizer();
        java.lang.Object obj46 = strTokenizer45.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer45.setQuoteChar('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer49);
    }

    @Test
    public void test15149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15149");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append((double) 1.0f);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer36.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer40);
        int int42 = strBuilder41.capacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 66 + "'", int42 == 66);
    }

    @Test
    public void test15150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15150");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer37);
        boolean boolean44 = strTokenizer37.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test15151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15151");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder16.indexOf(strMatcher19, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        boolean boolean23 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.nextToken();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        boolean boolean39 = strList37.add("hi!");
        java.util.Iterator<java.lang.String> strItor40 = strList37.iterator();
        boolean boolean41 = strList37.isEmpty();
        boolean boolean42 = strList24.removeAll((java.util.Collection<java.lang.String>) strList37);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        int int56 = strTokenizer54.size();
        java.lang.String str57 = strTokenizer54.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer54.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList60 = strTokenizer54.getTokenList();
        boolean boolean62 = strList60.add("0\n 10\n");
        boolean boolean63 = strList37.containsAll((java.util.Collection<java.lang.String>) strList60);
        boolean boolean64 = strList60.isEmpty();
        boolean boolean65 = strList60.isEmpty();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "#4#a4#" + "'", str36, "#4#a4#");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#4#" + "'", str57, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test15152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15152");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("10");
        int int2 = strTokenizer1.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test15153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15153");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(10L);
        int int28 = strBuilder22.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append("#4#a4#");
        java.lang.String str39 = strBuilder32.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.append(false);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        boolean boolean61 = strTokenizer58.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder45.appendFixedWidthPadRight((java.lang.Object) strTokenizer58, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.appendln((int) (short) 10);
        boolean boolean75 = strBuilder45.equalsIgnoreCase(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder45.reverse();
        java.lang.StringBuffer stringBuffer77 = strBuilder76.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder32.append(stringBuffer77, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder31.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder16.append((java.lang.Object) stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder7.appendln(strBuilder16);
        char[] charArray86 = strBuilder83.toCharArray((int) (short) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray86);
        java.lang.String str89 = strTokenizer88.previousToken();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#4#a4#" + "'", str39, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test15154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15154");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        java.lang.String str26 = strBuilder5.leftString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder5.append("aa", (int) (short) 1, 0);
        char[] charArray31 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        int int34 = strTokenizer33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer33);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.delete(156, 88);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test15155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15155");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', '#');
        java.lang.Object obj16 = strTokenizer15.clone();
        int int17 = strTokenizer15.nextIndex();
        java.lang.String[] strArray18 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder(100);
        java.io.Writer writer21 = strBuilder20.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendln(10L);
        int int30 = strBuilder24.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln('a');
        char[] charArray43 = strBuilder40.toCharArray(0, 9);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder52.replace(strMatcher57, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int64 = strBuilder46.lastIndexOf(strMatcher57, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setIgnoreEmptyTokens(false);
        boolean boolean69 = strTokenizer66.hasPrevious();
        boolean boolean70 = strTokenizer66.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer66.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher57, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder20.deleteFirst(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer15.setQuoteMatcher(strMatcher57);
        java.lang.String str75 = strTokenizer74.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "1a\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "1a\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[1, a, \n]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "aa" + "'", str75, "aa");
    }

    @Test
    public void test15156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15156");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendln('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendPadding(4, '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.append("StrTokenizer[1false0\n\n#]", (int) 'j', 71);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test15157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15157");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append("#4#a4#");
        java.lang.String str20 = strBuilder13.leftString((int) (short) 100);
        int int22 = strBuilder13.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder13.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder13.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int41 = strBuilder38.lastIndexOf(strMatcher39, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder13.replaceFirst(strMatcher39, "#4#a4#");
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        int int55 = strBuilder43.lastIndexOf(strMatcher53, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterChar('#');
        java.util.List<java.lang.String> strList62 = strTokenizer61.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream63 = strList62.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = strList62.get(71);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 71, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 15 + "'", int55 == 15);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strStream63);
    }

    @Test
    public void test15158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15158");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("hi!", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("true\n", strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.replace(strMatcher16, "java.io.IOException: StrTokenizer[not tokenized yet]", 0, 27, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        java.lang.Throwable throwable30 = null;
        java.io.IOException iOException31 = new java.io.IOException("", throwable30);
        java.io.IOException iOException32 = new java.io.IOException("#4#a4#", throwable30);
        java.io.IOException iOException33 = new java.io.IOException(throwable30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 1.0f, iOException33, false, 100, strBuilder36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.appendWithSeparators(objArray37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append(false);
        java.io.Writer writer46 = strBuilder45.asWriter();
        java.lang.String str48 = strBuilder45.substring((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder22.appendln((java.lang.Object) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln((long) 57);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        java.lang.String str60 = strBuilder59.getNullText();
        char[] charArray62 = new char[] { 'a' };
        char[] charArray63 = strBuilder59.getChars(charArray62);
        int int65 = strMatcher56.isMatch(charArray63, 100);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder49.getChars(24, 28, charArray63, 73);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 28");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse" + "'", str48, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test15159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15159");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert((int) '\000', "4#");
        boolean boolean31 = strBuilder30.isEmpty();
        int int34 = strBuilder30.indexOf('\000', 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.append("es");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test15160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15160");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        boolean boolean28 = strBuilder27.isEmpty();
        java.io.Writer writer29 = strBuilder27.asWriter();
        writer29.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(writer29);
    }

    @Test
    public void test15161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15161");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln((long) '#');
        java.util.stream.IntStream intStream8 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int24 = strBuilder21.lastIndexOf(strMatcher22, (int) (short) 10);
        int int26 = strBuilder5.indexOf(strMatcher22, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer0.setTrimmerMatcher(strMatcher22);
        boolean boolean28 = strTokenizer0.hasNext();
        boolean boolean29 = strTokenizer0.hasNext();
        boolean boolean30 = strTokenizer0.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test15162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15162");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.append((java.lang.CharSequence) strBuilder22);
        java.lang.String str28 = strBuilder22.rightString((int) (short) 1);
        int int30 = strBuilder22.indexOf("OExceptionfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder22.appendSeparator("100.012true", 0);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\n" + "'", str28, "\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test15163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15163");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.setLength(16);
        java.io.Reader reader75 = strBuilder74.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendSeparator("StrTokenizer[100.0\n]");
        java.lang.Object obj79 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.insert((int) ' ', obj79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst('a', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder80.replaceFirst(' ', '.');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test15164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15164");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.ensureCapacity((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((long) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendln((int) (short) 10);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getIgnoredMatcher();
        int int54 = strBuilder35.indexOf(strMatcher52, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder35.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder29.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.insert(58, 168);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test15165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15165");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "1false0\nfalse");
        int int3 = strTokenizer2.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(strMatcher4);
    }

    @Test
    public void test15166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15166");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        int int37 = strBuilder35.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.append(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst('4');
        java.lang.StringBuffer stringBuffer41 = strBuilder40.toStringBuffer();
        char[] charArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.insert((int) (short) -1, charArray43, 87, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(stringBuffer41);
        org.junit.Assert.assertEquals(stringBuffer41.toString(), " 0\nfalse\n");
    }

    @Test
    public void test15167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15167");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int8 = strBuilder5.indexOf(strMatcher7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.append("#4#a4#");
        java.lang.String str12 = strBuilder5.leftString((int) (short) 100);
        int int14 = strBuilder5.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder5.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('0', '\000');
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray28);
        int int30 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer2.setIgnoredMatcher(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "1.\000-1.0#4#a4# 100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "1.\000-1.0#4#a4# 100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[1, ., \000, -, 1, ., 0, #, 4, #, a, 4, #,  , 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test15168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15168");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.append(strBuilder24, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.append('4');
        java.lang.String str44 = strBuilder39.getNullText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer47, "0\nfalse32.0");
        boolean boolean52 = strBuilder31.equalsIgnoreCase(strBuilder39);
        java.lang.String str54 = strBuilder31.rightString(0);
        java.lang.String str55 = strBuilder31.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test15169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15169");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        char[] charArray28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(charArray28);
        boolean boolean30 = strBuilder27.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        boolean boolean36 = strBuilder35.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        int int47 = strMatcher38.isMatch(charArray45, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.append(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder27.insert((int) (byte) 1, charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder19.appendln(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.delete(4, 39);
        java.io.Reader reader56 = strBuilder52.asReader();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(reader56);
    }

    @Test
    public void test15170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15170");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        java.lang.String str32 = strTokenizer31.nextToken();
        java.util.List<java.lang.String> strList33 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer31.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.append((java.lang.Object) strTokenizer35);
        boolean boolean38 = strBuilder37.isEmpty();
        java.io.Reader reader39 = strBuilder37.asReader();
        boolean boolean40 = reader39.ready();
        long long42 = reader39.skip((long) 43);
        boolean boolean43 = reader39.ready();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str36, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 43L + "'", long42 == 43L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test15171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15171");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher35);
        int int38 = strBuilder16.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.deleteFirst(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.setCharAt(0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder(46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln((long) 34);
        char[] charArray50 = null;
        char[] charArray51 = strBuilder47.getChars(charArray50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder45.appendln(charArray51, 206, 51);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "34\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "34\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[3, 4, \n]");
    }

    @Test
    public void test15172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15172");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        java.lang.String str18 = strBuilder3.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.deleteFirst("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder3.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.appendln(strBuilder43);
        java.lang.StringBuffer stringBuffer47 = strBuilder35.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder25.appendln(strBuilder48, 62, 206);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str18, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "  \n");
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test15173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15173");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int28 = strBuilder25.lastIndexOf(strMatcher26, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder0.replaceFirst(strMatcher26, "#4#a4#");
        java.lang.String str33 = strBuilder30.midString((int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.insert(0, ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.insert(23, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 23");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test15174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15174");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt((int) '\000');
        java.util.stream.IntStream intStream43 = strBuilder40.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.append(strBuilder54);
        int int59 = strBuilder40.lastIndexOf('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        java.lang.String str63 = strBuilder62.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.deleteAll(strMatcher64);
        int int67 = strBuilder40.lastIndexOf(strMatcher64, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder40.appendln(strBuilder68);
        int int71 = strBuilder40.lastIndexOf(" a10\n.IOExceptionfalse1001.0\n35.0\n1false0\n\n32false\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder40.append(" 10.0\nStrTokenizer[#4#a4#]\n", 29, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 15 + "'", int59 == 15);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test15175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15175");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.ensureCapacity(39);
        boolean boolean11 = strBuilder9.endsWith(".0jav");
        char[] charArray16 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray18 = strBuilder9.getChars(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'e', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer22);
    }

    @Test
    public void test15176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15176");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        java.lang.String str4 = strBuilder3.getNullText();
        char[] charArray6 = new char[] { 'a' };
        char[] charArray7 = strBuilder3.getChars(charArray6);
        char[] charArray12 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray13 = strBuilder3.getChars(charArray12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int27 = strBuilder24.lastIndexOf(strMatcher25, (int) (short) 10);
        boolean boolean28 = strBuilder3.contains(strMatcher25);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        int int55 = strMatcher42.isMatch(charArray50, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher25, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("I.oi.avaj0.1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer56.setIgnoredMatcher(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
    }

    @Test
    public void test15177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15177");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.lang.String str12 = strTokenizer10.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer10.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test15178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15178");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.trim();
        java.lang.Object[] objArray39 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendAll(objArray39);
        char[] charArray41 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.append(charArray41);
        boolean boolean44 = strBuilder42.startsWith("java.io.IOException: StrTokenizer[not tokenized yet]");
        java.lang.Throwable throwable47 = null;
        java.io.IOException iOException48 = new java.io.IOException("", throwable47);
        java.io.IOException iOException49 = new java.io.IOException("#4#a4#", throwable47);
        java.io.IOException iOException50 = new java.io.IOException(throwable47);
        java.lang.Throwable[] throwableArray51 = iOException50.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder42.appendWithSeparators((java.lang.Object[]) throwableArray51, "0\nfalse32.0");
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setDelimiterString("hi!");
        java.lang.String str65 = strTokenizer64.nextToken();
        java.util.List<java.lang.String> strList66 = strTokenizer64.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer64.setTrimmerMatcher(strMatcher67);
        java.lang.String str69 = strTokenizer68.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterChar('a');
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        int int85 = strTokenizer83.size();
        java.lang.String str86 = strTokenizer83.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer83.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer83.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer68.setTrimmerMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder53.replaceFirst(strMatcher89, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder53.appendln("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder94.appendln("-1 #4#a4#-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder96.clear();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "#4#a4#" + "'", str69, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "#4#" + "'", str86, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test15179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15179");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("100.0\na");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((float) 41);
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test15180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15180");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer21, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setDelimiterChar(' ');
        int int26 = strTokenizer25.nextIndex();
        boolean boolean27 = strTokenizer25.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test15181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15181");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfals");
    }

    @Test
    public void test15182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15182");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append("1false0\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.deleteFirst("##########################110\n\ni###############################################################################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        char[] charArray14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(charArray14);
        boolean boolean16 = strBuilder13.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        boolean boolean22 = strBuilder21.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str28 = strBuilder27.getNullText();
        char[] charArray30 = new char[] { 'a' };
        char[] charArray31 = strBuilder27.getChars(charArray30);
        int int33 = strMatcher24.isMatch(charArray31, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.append(charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder13.insert((int) (byte) 1, charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendln((int) (byte) 0);
        int int41 = strBuilder35.lastIndexOf("0.012true104444444444444444444444444444444444444444444444  \n");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOExceptionfalse1001.0\n35.0\nhi!100hi!ahi!");
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder1.appendln(strBuilder35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = strBuilder35.substring(200, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test15183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15183");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        writer37.flush();
        writer37.flush();
        writer37.write((int) '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
    }

    @Test
    public void test15184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15184");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.write("0java.io.IOExceptionfalse100", 4, 4);
        writer9.flush();
        java.io.Writer writer31 = writer9.append('4');
        writer9.close();
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray39);
        writer9.write(charArray39);
        java.io.Writer writer47 = writer9.append('e');
        writer47.close();
        writer47.close();
        writer47.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(writer47);
    }

    @Test
    public void test15185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15185");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        java.lang.String str5 = strBuilder2.leftString((int) (short) -1);
        int int7 = strBuilder2.indexOf("0\nzinekoTrtSeslaf ");
        int int10 = strBuilder2.lastIndexOf("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", (int) 'c');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test15186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15186");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator('\000', 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test15187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15187");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.flush();
        writer9.write("StrTokenizer[#4#a4#]");
        writer9.write("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]", 39, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((long) '#');
        java.util.stream.IntStream intStream39 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendNull();
        java.io.Writer writer46 = writer9.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.ensureCapacity(13);
        // The following exception was thrown during execution in test generation
        try {
            char char50 = strBuilder48.charAt((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test15188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15188");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int23 = strBuilder18.indexOf(strMatcher21, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.replace(strMatcher21, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        java.lang.String str45 = strBuilder29.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        int int54 = strBuilder48.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.append((java.lang.Object) strBuilder60);
        boolean boolean62 = strBuilder10.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int77 = strBuilder74.lastIndexOf(strMatcher75, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder61.replace(strMatcher75, "a", 2, 15, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln((double) (byte) 10);
        boolean boolean86 = strBuilder82.endsWith("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder82.appendFixedWidthPadRight((int) (short) -1, (int) (short) 10, ' ');
        java.io.Reader reader91 = strBuilder90.asReader();
        boolean boolean92 = reader91.ready();
        java.nio.CharBuffer charBuffer93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int94 = reader91.read(charBuffer93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(reader91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test15189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15189");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        boolean boolean16 = reader13.markSupported();
        boolean boolean17 = reader13.markSupported();
        boolean boolean18 = reader13.ready();
        boolean boolean19 = reader13.markSupported();
        boolean boolean20 = reader13.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException("", throwable28);
        java.io.IOException iOException30 = new java.io.IOException("#4#a4#", throwable28);
        java.io.IOException iOException31 = new java.io.IOException(throwable28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1.0f, iOException31, false, 100, strBuilder34 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder24.appendWithSeparators(objArray35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        java.lang.String str43 = strBuilder41.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.append((java.lang.CharSequence) str43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 0);
        char[] charArray47 = strBuilder44.toCharArray();
        java.lang.String str50 = strBuilder44.substring(0, 30);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.appendSeparator(" ", "\naa");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        char[] charArray65 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray66 = strBuilder56.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder44.appendln(charArray66);
        int int71 = reader13.read(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, "0.01221");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "1.0java.io.IOExceptionfalse1000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "1.0java.io.IOExceptionfalse1000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1.0java.io.IOExceptionfalse100" + "'", str50, "1.0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test15190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15190");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(false);
        java.io.Writer writer23 = strBuilder22.asWriter();
        java.lang.String str25 = strBuilder22.substring((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.insert(36, (float) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse" + "'", str25, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test15191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15191");
        java.io.IOException iOException1 = new java.io.IOException("eslaf");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("", throwable5);
        java.io.IOException iOException7 = new java.io.IOException("#4#a4#", throwable5);
        java.io.IOException iOException8 = new java.io.IOException(throwable5);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        iOException1.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test15192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15192");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.setNewLineText("35\n");
        java.lang.String str7 = strBuilder5.rightString(40);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln(10L);
        int int18 = strBuilder12.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator("aa4#4\n4\n \n", "1.0jva.io.IOExceptionfalse100#");
        boolean boolean29 = strBuilder9.equalsIgnoreCase(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder9.setNewLineText("0\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test15193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15193");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(' ');
        java.util.stream.IntStream intStream64 = strBuilder63.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int67 = strBuilder63.lastIndexOf(strMatcher66);
        boolean boolean68 = strList4.remove((java.lang.Object) strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder71.appendln(strBuilder78);
        boolean boolean82 = strList4.remove((java.lang.Object) strBuilder78);
        boolean boolean84 = strList4.add("a");
        java.util.stream.Stream<java.lang.String> strStream85 = strList4.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator86 = strList4.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor88 = strList4.listIterator(19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 19");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strStream85);
        org.junit.Assert.assertNotNull(strSpliterator86);
    }

    @Test
    public void test15194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15194");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer37);
        java.io.Reader reader44 = strBuilder18.asReader();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader44);
    }

    @Test
    public void test15195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15195");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        java.lang.String str18 = strBuilder3.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.deleteFirst("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(10L);
        int int34 = strBuilder28.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder28.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendSeparator(".0jav");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder23.appendln((java.lang.Object) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.deleteFirst("100.01210\n");
        java.lang.Class<?> wildcardClass52 = strBuilder46.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str18, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test15196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15196");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("1.0\n35.0\n1fal");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test15197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15197");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int32 = strBuilder30.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append("10\n\n");
        boolean boolean38 = strBuilder34.startsWith("a#4#a4#hi!");
        boolean boolean40 = strBuilder34.contains(".");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test15198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15198");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        java.lang.Throwable throwable29 = null;
        java.io.IOException iOException30 = new java.io.IOException("", throwable29);
        java.io.IOException iOException31 = new java.io.IOException("#4#a4#", throwable29);
        java.io.IOException iOException32 = new java.io.IOException(throwable29);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1.0f, iOException32, false, 100, strBuilder35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.appendWithSeparators(objArray36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert((int) (byte) 0, (int) (short) -1);
        boolean boolean50 = strList12.remove((java.lang.Object) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNull();
        boolean boolean56 = strBuilder54.equals((java.lang.Object) 100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.ensureCapacity(2);
        boolean boolean59 = strBuilder46.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int73 = strBuilder70.indexOf(strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder69.appendln(strBuilder77);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int83 = strBuilder69.lastIndexOf(strMatcher81, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder54.replaceAll(strMatcher81, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder54.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder54.appendFixedWidthPadLeft(24, 65, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder54.append('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder54.deleteAll("a4 435\n10\n\n48.0\n35.0\n1.0java.io.IOExc\n\n");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test15199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15199");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.deleteFirst(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("");
        char[] charArray57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(charArray57);
        boolean boolean59 = strBuilder56.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.clear();
        boolean boolean65 = strBuilder64.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteFirst("hi!");
        java.lang.String str71 = strBuilder70.getNullText();
        char[] charArray73 = new char[] { 'a' };
        char[] charArray74 = strBuilder70.getChars(charArray73);
        int int76 = strMatcher67.isMatch(charArray74, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder64.append(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder56.insert((int) (byte) 1, charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ', '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        char[] charArray87 = strBuilder46.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray87);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n.IOExceptionfalse1001.0\n35.0\n1false0\n\n3232.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n.IOExceptionfalse1001.0\n35.0\n1false0\n\n3232.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, 1, f, a, l, s, e, 0, \n, \n, a, v, a, ., i, o, ., I, O, E, \n, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, 1, f, a, l, s, e, 0, \n, \n, 3, 2, 3, 2, ., 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test15200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15200");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a4 4");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setDelimiterString("hi!");
        boolean boolean20 = strTokenizer17.isIgnoreEmptyTokens();
        java.lang.String str21 = strTokenizer17.next();
        int int22 = strList7.indexOf((java.lang.Object) strTokenizer17);
        java.lang.String str23 = strTokenizer17.toString();
        java.lang.String str24 = strTokenizer17.toString();
        java.lang.String[] strArray25 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer17.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.deleteAll(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.trim();
        java.lang.Object[] objArray46 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendAll(objArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendAll(objArray46);
        java.lang.String str49 = strBuilder48.toString();
        java.lang.CharSequence charSequence50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(charSequence50, 34, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.clear();
        boolean boolean58 = strBuilder57.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        java.lang.String str64 = strBuilder63.getNullText();
        char[] charArray66 = new char[] { 'a' };
        char[] charArray67 = strBuilder63.getChars(charArray66);
        int int69 = strMatcher60.isMatch(charArray67, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder57.append(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        char[] charArray73 = strBuilder48.getChars(charArray67);
        int int77 = strMatcher26.isMatch(charArray67, (int) '4', 12, (int) '3');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("0\n1false0\n\n#", strMatcher2, strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#4#a4#" + "'", str21, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str23, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str24, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "59.0" + "'", str49, "59.0");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "59.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "59.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[5, 9, ., 0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(strMatcher80);
    }

    @Test
    public void test15201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15201");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: ", '4');
        java.lang.String str3 = strTokenizer2.getContent();
        boolean boolean4 = strTokenizer2.hasPrevious();
        int int5 = strTokenizer2.previousIndex();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "java.io.IOException: " + "'", str3, "java.io.IOException: ");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test15202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15202");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor45 = strList27.iterator();
        boolean boolean46 = strList4.remove((java.lang.Object) strItor45);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList51.iterator();
        boolean boolean70 = strList4.addAll((java.util.Collection<java.lang.String>) strList51);
        boolean boolean72 = strList4.add("o.IOExceptio");
        boolean boolean74 = strList4.add("a4aa# ");
        boolean boolean75 = strList4.isEmpty();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test15203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15203");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder18.ensureCapacity(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(32);
        int int34 = strBuilder33.capacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 39 + "'", int34 == 39);
    }

    @Test
    public void test15204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15204");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        writer9.write((int) (short) 1);
        writer9.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        writer9.write(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '\000', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer26.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
    }

    @Test
    public void test15205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15205");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int23 = strBuilder9.lastIndexOf(strMatcher21, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.appendSeparator("StrTokenizer[#4#a4#]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strBuilder50.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder9.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder9.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll('.', 'a');
        char[] charArray58 = strBuilder57.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "  \nStrTokenizer[#4#a4#]1a0javaaioaIOExceptionfalse1001a035a04");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "  \nStrTokenizer[#4#a4#]1a0javaaioaIOExceptionfalse1001a035a04");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ ,  , \n, S, t, r, T, o, k, e, n, i, z, e, r, [, #, 4, #, a, 4, #, ], 1, a, 0, j, a, v, a, a, i, o, a, I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, a, 0, 3, 5, a, 0, 4]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer60);
    }

    @Test
    public void test15206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15206");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert(4, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.reverse();
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        java.lang.String[] strArray39 = strTokenizer36.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.appendAll((java.lang.Object[]) strArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder26.appendSeparator(' ', 42);
        int int46 = strBuilder43.indexOf('0', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder((int) ' ');
        java.lang.String[] strArray52 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterString("hi!");
        boolean boolean66 = strTokenizer63.isIgnoreEmptyTokens();
        java.lang.String str67 = strTokenizer63.next();
        int int68 = strList53.indexOf((java.lang.Object) strTokenizer63);
        java.util.ListIterator<java.lang.String> strItor70 = strList53.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor71 = strList53.iterator();
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.setDelimiterString("hi!");
        boolean boolean83 = strTokenizer80.isIgnoreEmptyTokens();
        java.lang.String str84 = strTokenizer80.next();
        boolean boolean85 = strList53.equals((java.lang.Object) strTokenizer80);
        java.lang.Object[] objArray86 = strList53.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder48.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList53, "1false0\nfalse");
        java.lang.Object[] objArray89 = strList53.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder43.appendAll(objArray89);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n1001.0.0");
        int int93 = strBuilder43.indexOf(strMatcher92);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#4#a4#" + "'", str67, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "#4#a4#" + "'", str84, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test15207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15207");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendSeparator("001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111", "#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder8.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder5.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replace(strMatcher22, "java.io.IOException:  10\n", 72, 200, 109);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test15208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15208");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln("4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int14 = strBuilder11.indexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        int int21 = strBuilder11.indexOf(strMatcher19);
        int int24 = strBuilder11.indexOf("java.io.IOException: StrTokenizer[not tokenized yet]", (int) (byte) -1);
        java.lang.String str25 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(10L);
        int int34 = strBuilder28.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder28.append("java.io.IOException: ");
        java.lang.StringBuffer stringBuffer41 = strBuilder28.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) stringBuffer41, (int) 'c', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder10.appendln(stringBuffer41);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(stringBuffer41);
        org.junit.Assert.assertEquals(stringBuffer41.toString(), "java.io.IOException: ");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test15209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15209");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.setLength(1);
        int int16 = strBuilder13.indexOf('#', 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.setCharAt(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('\000', '\000');
        int int24 = strBuilder19.lastIndexOf('\000');
        int int26 = strBuilder19.indexOf("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.clear();
        java.util.stream.IntStream intStream28 = strBuilder27.chars();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
    }

    @Test
    public void test15210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15210");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder18.ensureCapacity(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator(" \nStrTokenizer[#4#a4#]1.0java.io.IOExceptionfalse1001.035.0", (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator("1.0java.io.IOExceptionfalse1001.0\n35.0\n1.0java");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        java.lang.Throwable throwable44 = null;
        java.io.IOException iOException45 = new java.io.IOException("", throwable44);
        java.io.IOException iOException46 = new java.io.IOException("#4#a4#", throwable44);
        java.io.IOException iOException47 = new java.io.IOException(throwable44);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1.0f, iOException47, false, 100, strBuilder50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder40.appendWithSeparators(objArray51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.replaceAll('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder40.appendSeparator('a');
        java.util.Iterator<java.lang.String> strItor60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder40.appendWithSeparators(strItor60, "java.io.IOException: StrTokenizer[");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.ensureCapacity(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln("lse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder36.append((java.lang.CharSequence) "lse1001.0\n35.0\n1false0\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test15211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15211");
        java.io.IOException iOException2 = new java.io.IOException("false");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("a10\n");
        java.io.IOException iOException8 = new java.io.IOException("\n59\n97\n", (java.lang.Throwable) iOException7);
        iOException2.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("0.01221", (java.lang.Throwable) iOException7);
    }

    @Test
    public void test15212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15212");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        int int8 = strBuilder3.capacity();
        int int9 = strBuilder3.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.appendln(true);
        java.io.Writer writer12 = strBuilder11.asWriter();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((long) '#');
        java.util.stream.IntStream intStream21 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int37 = strBuilder34.lastIndexOf(strMatcher35, (int) (short) 10);
        int int39 = strBuilder18.indexOf(strMatcher35, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer13.setTrimmerMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer13.getIgnoredMatcher();
        char[] charArray48 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        int int59 = strBuilder49.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher57);
        int int64 = strMatcher41.isMatch(charArray48, 19, (int) 'a', (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "100.012");
        // The following exception was thrown during execution in test generation
        try {
            writer12.write(charArray48, 22, 63);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 63");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test15213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15213");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.replaceFirst("#4#", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteAll(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteAll("10\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.ensureCapacity(18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln((java.lang.Object) "35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[no");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test15214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15214");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendSeparator("true\n", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        char[] charArray31 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray32 = strBuilder22.getChars(charArray31);
        java.io.Reader reader33 = strBuilder22.asReader();
        java.lang.String str34 = strBuilder22.toString();
        java.lang.StringBuffer stringBuffer35 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder11.appendln(stringBuffer35);
        java.lang.String str38 = strBuilder36.leftString(27);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln((long) '4');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(stringBuffer35);
        org.junit.Assert.assertEquals(stringBuffer35.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + " 10\ntrue\n\n" + "'", str38, " 10\ntrue\n\n");
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test15215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15215");
        char[] charArray7 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        java.lang.String str12 = strTokenizer11.nextToken();
        java.util.List<java.lang.String> strList13 = strTokenizer11.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        char[] charArray25 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray26 = strBuilder16.getChars(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray26);
        int int28 = strList13.indexOf((java.lang.Object) charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '.');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.stringMatcher(".0jva.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("01StrTokenizer[not tokenized yet]\n", strMatcher31, strMatcher33);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
    }

    @Test
    public void test15216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15216");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.reset();
        boolean boolean15 = reader13.ready();
        long long17 = reader13.skip((long) 73);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test15217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15217");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        java.lang.String str24 = strBuilder20.leftString(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.trim();
        java.lang.Object[] objArray37 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendAll(objArray37);
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder20.append(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4');
        boolean boolean46 = strTokenizer45.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str24, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test15218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15218");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.append(stringBuffer4, (int) '4', 10);
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.setNullText("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendSeparator('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        int int24 = strBuilder20.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int40 = strBuilder35.indexOf(strMatcher38, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder35.asTokenizer();
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        boolean boolean44 = strList42.add("0\nzinekoTrtSeslaf ");
        java.lang.Object[] objArray45 = strList42.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) objArray45, 60, 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder14.appendWithSeparators(objArray45, " falsezinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder14.appendFixedWidthPadLeft(47, 91, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.setLength((int) (short) 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[10, 0\nzinekoTrtSeslaf ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[10, 0\nzinekoTrtSeslaf ]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test15219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15219");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        boolean boolean17 = reader13.ready();
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray24);
        int int29 = reader13.read(charArray24);
        reader13.close();
        boolean boolean31 = reader13.markSupported();
        java.nio.CharBuffer charBuffer32 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int33 = reader13.read(charBuffer32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test15220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15220");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        java.lang.String str5 = strBuilder4.getNullText();
        char[] charArray7 = new char[] { 'a' };
        char[] charArray8 = strBuilder4.getChars(charArray7);
        int int12 = strMatcher1.isMatch(charArray8, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, ".0j");
        boolean boolean15 = strTokenizer14.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("35\n", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer17.reset();
        boolean boolean19 = strTokenizer18.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test15221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15221");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(24);
        java.lang.String str2 = strBuilder1.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendSeparator("false32.0");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strBuilder4);
    }

    @Test
    public void test15222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15222");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.reset("a");
        java.lang.String str19 = strTokenizer18.toString();
        boolean boolean20 = strTokenizer18.hasPrevious();
        boolean boolean21 = strTokenizer18.hasPrevious();
        char[] charArray22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.reset(charArray22);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test15223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15223");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.appendSeparator(' ', 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.deleteAll("java.io.IOException: #4#a4#");
        int int34 = strBuilder33.capacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 66 + "'", int34 == 66);
    }

    @Test
    public void test15224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15224");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int6 = strBuilder3.indexOf(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.append("#4#a4#");
        java.lang.String str10 = strBuilder3.leftString((int) (short) 100);
        int int12 = strBuilder3.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int31 = strBuilder28.lastIndexOf(strMatcher29, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder3.replaceFirst(strMatcher29, "#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        java.lang.String str38 = strBuilder37.getNullText();
        char[] charArray40 = new char[] { 'a' };
        char[] charArray41 = strBuilder37.getChars(charArray40);
        char[] charArray46 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray47 = strBuilder37.getChars(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int61 = strBuilder58.lastIndexOf(strMatcher59, (int) (short) 10);
        boolean boolean62 = strBuilder37.contains(strMatcher59);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setDelimiterString("hi!");
        java.lang.String str74 = strTokenizer73.nextToken();
        java.util.List<java.lang.String> strList75 = strTokenizer73.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer73.setTrimmerMatcher(strMatcher76);
        char[] charArray84 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray84);
        int int89 = strMatcher76.isMatch(charArray84, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher59, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("100.01210\n", strMatcher29, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer1.setQuoteMatcher(strMatcher29);
        int int93 = strTokenizer92.nextIndex();
        boolean boolean94 = strTokenizer92.hasPrevious();
        boolean boolean95 = strTokenizer92.hasNext();
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#4#a4#" + "'", str10, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "#4#a4#" + "'", str74, "#4#a4#");
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test15225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15225");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor19 = strList12.listIterator();
        int int20 = strList12.size();
        int int21 = strList12.size();
        int int22 = strList12.size();
        java.util.Iterator<java.lang.String> strItor23 = strList12.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor25 = strList12.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(strItor23);
    }

    @Test
    public void test15226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15226");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer18.setEmptyTokenAsNull(true);
        java.lang.String[] strArray31 = strTokenizer18.getTokenArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test15227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15227");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.insert(0, (double) (byte) 100);
        java.io.Reader reader29 = strBuilder28.asReader();
        boolean boolean30 = strList12.remove((java.lang.Object) reader29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.deleteFirst(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.minimizeCapacity();
        char[] charArray55 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        int int66 = strBuilder56.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder47.replace(strMatcher64, "", 2, (int) (short) 100, 10);
        char[] charArray75 = strBuilder47.toCharArray((int) (byte) 0, (int) (byte) 0);
        int int76 = reader29.read(charArray75);
        reader29.reset();
        long long79 = reader29.skip(0L);
        long long81 = reader29.skip((long) 88);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 5L + "'", long81 == 5L);
    }

    @Test
    public void test15228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15228");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", '1', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(" ", ".0jav");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setTrimmerMatcher(strMatcher7);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int12 = strBuilder9.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.append(false);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        boolean boolean30 = strTokenizer27.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.appendFixedWidthPadRight((java.lang.Object) strTokenizer27, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln((int) (short) 10);
        boolean boolean44 = strBuilder14.equalsIgnoreCase(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln(false);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        java.lang.String str61 = strTokenizer60.nextToken();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("hi!");
        java.lang.String str66 = strBuilder65.getNullText();
        char[] charArray68 = new char[] { 'a' };
        char[] charArray69 = strBuilder65.getChars(charArray68);
        char[] charArray74 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray75 = strBuilder65.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray75);
        int int77 = strList62.indexOf((java.lang.Object) charArray75);
        char[] charArray78 = strBuilder49.getChars(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer3.reset(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("", '1', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(" ", ".0jav");
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer84.setTrimmerMatcher(strMatcher88);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer84.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher90);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#4#a4#" + "'", str61, "#4#a4#");
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strMatcher90);
    }

    @Test
    public void test15229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15229");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadLeft((java.lang.Object) 100, (int) (short) 0, ' ');
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendln(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.appendPadding(19, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer39.getDelimiterMatcher();
        int int45 = strBuilder23.indexOf(strMatcher43, (int) 'I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test15230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15230");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("aa");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset("4#");
        java.lang.String str4 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset("10\nfalse");
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4#" + "'", str4, "4#");
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test15231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15231");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" a4a4");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        java.lang.String str6 = strBuilder5.getNullText();
        char[] charArray8 = new char[] { 'a' };
        char[] charArray9 = strBuilder5.getChars(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        int int21 = strBuilder15.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.deleteFirst(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int47 = strBuilder44.indexOf(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int58 = strBuilder55.lastIndexOf(strMatcher56, (int) (short) -1);
        int int59 = strBuilder43.indexOf(strMatcher56);
        boolean boolean60 = strBuilder26.contains(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("");
        char[] charArray69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(charArray69);
        boolean boolean71 = strBuilder68.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.clear();
        boolean boolean77 = strBuilder76.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteFirst("hi!");
        java.lang.String str83 = strBuilder82.getNullText();
        char[] charArray85 = new char[] { 'a' };
        char[] charArray86 = strBuilder82.getChars(charArray85);
        int int88 = strMatcher79.isMatch(charArray86, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder76.append(charArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder68.insert((int) (byte) 1, charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer92.setDelimiterChar('a');
        int int95 = strTokenizer92.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strTokenizer92.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher56, strMatcher96);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder1.insert(23, charArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 23");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(strMatcher96);
    }

    @Test
    public void test15232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15232");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        java.util.stream.IntStream intStream6 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int9 = strBuilder5.lastIndexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int24 = strBuilder21.lastIndexOf(strMatcher22, (int) (short) -1);
        boolean boolean25 = strBuilder5.contains(strMatcher22);
        java.io.Writer writer26 = strBuilder5.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendSeparator('#', 95);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.append('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.appendSeparator('\000', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln("alse1001.0\n35.0\n1false0\n\nava.io.IOE\n1#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder29.append((java.lang.CharSequence) "alse1001.0\n35.0\n1false0\n\nava.io.IOE\n1#");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test15233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15233");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.clear();
        boolean boolean75 = strBuilder73.contains("100.0-1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendln(true);
        boolean boolean80 = strBuilder78.endsWith("1false0\nfalse");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test15234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15234");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteFirst('#');
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendPadding(21, 'j');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test15235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15235");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("0\nzinekoTrtSeslaf ", '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterString("35.0\n");
        java.lang.String[] strArray5 = strTokenizer2.getTokenArray();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test15236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15236");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        java.lang.Throwable throwable18 = null;
        java.io.IOException iOException19 = new java.io.IOException("", throwable18);
        java.io.IOException iOException20 = new java.io.IOException("#4#a4#", throwable18);
        java.io.IOException iOException21 = new java.io.IOException(throwable18);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 1.0f, iOException21, false, 100, strBuilder24 };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.appendWithSeparators(objArray25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator("#4#a4#", (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.replace(1, 5, "StrTokenizer[100.0\n]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder8.append((java.lang.CharSequence) strBuilder44);
        int int46 = strBuilder44.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendln(stringBuffer47, 18, (int) 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 110 + "'", int46 == 110);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test15237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15237");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.ensureCapacity(39);
        boolean boolean11 = strBuilder9.endsWith(".0jav");
        char[] charArray16 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray18 = strBuilder9.getChars(charArray16);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        java.lang.String str30 = strTokenizer29.nextToken();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        char[] charArray43 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray44 = strBuilder34.getChars(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        int int46 = strList31.indexOf((java.lang.Object) charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int52 = strTokenizer51.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer51.setTrimmerMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher50, strMatcher54);
        java.util.List<java.lang.String> strList57 = strTokenizer56.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream58 = strList57.parallelStream();
        int int59 = strList57.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
    }

    @Test
    public void test15238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15238");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer54.reset();
        java.lang.String str56 = strTokenizer54.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.reset("e1001.0\ntrue\n");
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strArray59);
    }

    @Test
    public void test15239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15239");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        int int27 = strList12.indexOf((java.lang.Object) charArray25);
        boolean boolean28 = strList12.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream29 = strList12.parallelStream();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("hi!");
        boolean boolean47 = strTokenizer44.isIgnoreEmptyTokens();
        java.lang.String str48 = strTokenizer44.next();
        int int49 = strList34.indexOf((java.lang.Object) strTokenizer44);
        int int50 = strTokenizer44.nextIndex();
        java.util.List<java.lang.String> strList51 = strTokenizer44.getTokenList();
        java.util.Spliterator<java.lang.String> strSpliterator52 = strList51.spliterator();
        boolean boolean53 = strList12.addAll((java.util.Collection<java.lang.String>) strList51);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#4#a4#" + "'", str48, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test15240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15240");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.ensureCapacity((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((long) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        java.lang.Throwable throwable37 = null;
        java.io.IOException iOException38 = new java.io.IOException("", throwable37);
        java.io.IOException iOException39 = new java.io.IOException("#4#a4#", throwable37);
        java.io.IOException iOException40 = new java.io.IOException(throwable37);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1.0f, iOException40, false, 100, strBuilder43 };
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.appendWithSeparators(objArray44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.append(true);
        int int59 = strBuilder56.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.insert(1, (float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append(100L);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        boolean boolean69 = strBuilder67.contains(strMatcher68);
        int int72 = strBuilder67.indexOf("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]", (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder67.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        int int75 = strBuilder29.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder29.append('I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test15241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15241");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        int int17 = strBuilder14.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        java.lang.Throwable throwable25 = null;
        java.io.IOException iOException26 = new java.io.IOException("", throwable25);
        java.io.IOException iOException27 = new java.io.IOException("#4#a4#", throwable25);
        java.io.IOException iOException28 = new java.io.IOException(throwable25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1.0f, iOException28, false, 100, strBuilder31 };
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendWithSeparators(objArray32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.deleteAll('a');
        boolean boolean46 = strBuilder45.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        char[] charArray70 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray71 = strBuilder61.getChars(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder52.appendln(charArray70, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder45.appendln(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder14.appendln(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '1', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer86.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer85);
    }

    @Test
    public void test15242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15242");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.append(' ');
        char[] charArray29 = strBuilder28.toCharArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 10\n0java.io.IOExceptionfalse100\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 10\n0java.io.IOExceptionfalse100\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 1, 0, \n, 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, \n,  ]");
    }

    @Test
    public void test15243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15243");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test15244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15244");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("35\n10\n\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test15245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15245");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.reset("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.deleteFirst(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int50 = strBuilder47.lastIndexOf(strMatcher48, (int) (short) -1);
        int int51 = strBuilder35.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer18.setTrimmerMatcher(strMatcher48);
        java.lang.String[] strArray53 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str56 = strTokenizer55.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        char[] charArray70 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray71 = strBuilder61.getChars(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder61.appendln("java.io.IOException: ");
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder73.replaceFirst(strMatcher84, "#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer58.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer18.setIgnoredMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer18.getDelimiterMatcher();
        java.util.List<java.lang.String> strList91 = strTokenizer18.getTokenList();
        java.lang.Object obj92 = null;
        int int93 = strList91.indexOf(obj92);
        int int94 = strList91.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = strList91.remove(71);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 71, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test15246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15246");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append("#4#a4#");
        boolean boolean32 = strBuilder25.equals(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder25.replaceFirst(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", "java.io.IOException: 10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.appendln("1fal");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append(" \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst('4', '\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder25.appendln(strBuilder52, 88, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test15247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15247");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.insert(0, (double) (byte) 100);
        java.io.Reader reader29 = strBuilder28.asReader();
        boolean boolean30 = strList12.remove((java.lang.Object) reader29);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        int int42 = strTokenizer39.previousIndex();
        boolean boolean43 = strList12.contains((java.lang.Object) int42);
        int int44 = strList12.size();
        boolean boolean45 = strList12.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream46 = strList12.stream();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        java.lang.Throwable throwable54 = null;
        java.io.IOException iOException55 = new java.io.IOException("", throwable54);
        java.io.IOException iOException56 = new java.io.IOException("#4#a4#", throwable54);
        java.io.IOException iOException57 = new java.io.IOException(throwable54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 1.0f, iOException57, false, 100, strBuilder60 };
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.appendWithSeparators(objArray61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteAll("1false0\n");
        boolean boolean77 = strList12.contains((java.lang.Object) strBuilder76);
        java.util.Spliterator<java.lang.String> strSpliterator78 = strList12.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList81 = strList12.subList(0, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strSpliterator78);
    }

    @Test
    public void test15248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15248");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        int int16 = reader13.read();
        int int17 = reader13.read();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test15249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15249");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendSeparator('\000', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.append(stringBuffer27);
        java.io.Writer writer29 = strBuilder28.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        writer29.write(charArray41);
        writer29.write("0java.io.IOExceptionfalse100", 4, 4);
        writer29.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((long) '#');
        java.util.stream.IntStream intStream57 = strBuilder54.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendSeparator("10\n\n");
        java.io.Writer writer60 = writer29.append((java.lang.CharSequence) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendSeparator("StrTokenizer[100.0\n]", (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder18.append(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert(11, (int) '\n');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setIgnoreEmptyTokens(false);
        java.lang.String str72 = strTokenizer69.nextToken();
        char[] charArray78 = new char[] { 'a', 'a', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer69.reset(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        char[] charArray82 = strBuilder64.getChars(charArray78);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(intStream57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(writer60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "aa## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "aa## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a, a, #, #,  ]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "001eslf150\0001035\n10\n\nStrTokenizer[100.0\n]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "001eslf150\0001035\n10\n\nStrTokenizer[100.0\n]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[0, 0, 1, e, s, l, f, 1, 5, 0, \000, 1, 0, 3, 5, \n, 1, 0, \n, \n, S, t, r, T, o, k, e, n, i, z, e, r, [, 1, 0, 0, ., 0, \n, ]]");
    }

    @Test
    public void test15250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15250");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoreEmptyTokens(false);
        boolean boolean43 = strTokenizer42.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder15.appendAll((java.lang.Object[]) strArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.append('4');
        char[] charArray60 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder15.append(charArray60);
        java.lang.String str62 = strBuilder61.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray65 = strBuilder61.toCharArray(53, 26);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test15251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15251");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.ensureCapacity(39);
        boolean boolean11 = strBuilder9.endsWith(".0jav");
        char[] charArray16 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray18 = strBuilder9.getChars(charArray16);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        java.lang.String str30 = strTokenizer29.nextToken();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        char[] charArray43 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray44 = strBuilder34.getChars(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        int int46 = strList31.indexOf((java.lang.Object) charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int52 = strTokenizer51.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer51.setTrimmerMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher50, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setIgnoreEmptyTokens(false);
        java.lang.String str61 = strTokenizer58.previousToken();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test15252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15252");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        boolean boolean32 = strTokenizer29.isIgnoreEmptyTokens();
        int int33 = strTokenizer29.nextIndex();
        int int34 = strTokenizer29.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer29.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder17.replaceAll(strMatcher37, "35.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln(112);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendPadding(62, 'a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test15253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15253");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendln(10L);
        int int68 = strBuilder62.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder59.appendln(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder59.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder59.insert(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder32.append(strBuilder59);
        java.io.IOException iOException80 = new java.io.IOException("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendFixedWidthPadRight((java.lang.Object) iOException80, 4, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.append((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder78.replace(38, (int) '.', "aa");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder78.insert((int) '0', 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder92.appendNewLine();
        java.lang.String str95 = strBuilder93.rightString(55);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\njava97\n" + "'", str95, "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\njava97\n");
    }

    @Test
    public void test15254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15254");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        java.lang.String str32 = strTokenizer31.nextToken();
        java.util.List<java.lang.String> strList33 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer31.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.append((java.lang.Object) strTokenizer35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        java.lang.String str55 = strBuilder54.getNullText();
        char[] charArray57 = new char[] { 'a' };
        char[] charArray58 = strBuilder54.getChars(charArray57);
        char[] charArray63 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray64 = strBuilder54.getChars(charArray63);
        int int68 = strMatcher51.isMatch(charArray63, (int) (short) 100, (int) (short) 1, (int) (byte) 10);
        int int69 = strBuilder37.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder37.appendSeparator('f', 'c');
        java.lang.Object obj73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder37.appendFixedWidthPadLeft(obj73, 31, '1');
        int int79 = strBuilder37.lastIndexOf(' ', 200);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str36, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test15255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15255");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", '#', '#');
        java.lang.String str4 = strTokenizer3.toString();
        int int5 = strTokenizer3.nextIndex();
        int int6 = strTokenizer3.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str9 = strTokenizer8.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        java.io.Reader reader25 = strBuilder14.asReader();
        reader25.mark(10);
        reader25.close();
        boolean boolean29 = reader25.markSupported();
        int int30 = reader25.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        char[] charArray42 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray43 = strBuilder33.getChars(charArray42);
        java.io.Reader reader44 = strBuilder33.asReader();
        long long46 = reader44.skip((long) 59);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        int int69 = strBuilder59.indexOf(strMatcher67);
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher67, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray53);
        int int85 = reader44.read(charArray53);
        int int86 = reader25.read(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer11.reset(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer3.reset(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, "59.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setIgnoredChar('\000');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer93);
    }

    @Test
    public void test15256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15256");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("", throwable2);
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.Throwable throwable8 = null;
        java.io.IOException iOException9 = new java.io.IOException("", throwable8);
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.Throwable throwable12 = null;
        java.io.IOException iOException13 = new java.io.IOException(throwable12);
        java.io.IOException iOException15 = new java.io.IOException("StrTokenizer[#4#a4#]");
        iOException13.addSuppressed((java.lang.Throwable) iOException15);
        iOException9.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException19 = new java.io.IOException("1false0\nfalse");
        java.io.IOException iOException21 = new java.io.IOException("StrTokenizer[not tokenized yet]");
        iOException19.addSuppressed((java.lang.Throwable) iOException21);
        iOException13.addSuppressed((java.lang.Throwable) iOException21);
        iOException5.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException25 = new java.io.IOException("a", (java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray26 = iOException5.getSuppressed();
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException5);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test15257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15257");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.deleteFirst(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.append((int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        java.lang.String str54 = strBuilder53.getNullText();
        char[] charArray56 = new char[] { 'a' };
        char[] charArray57 = strBuilder53.getChars(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '0', '0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        int int63 = strBuilder50.indexOf(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
    }

    @Test
    public void test15258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15258");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        java.lang.String str14 = strBuilder13.getNullText();
        char[] charArray16 = new char[] { 'a' };
        char[] charArray17 = strBuilder13.getChars(charArray16);
        char[] charArray22 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray23 = strBuilder13.getChars(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int37 = strBuilder34.lastIndexOf(strMatcher35, (int) (short) 10);
        boolean boolean38 = strBuilder13.contains(strMatcher35);
        int int39 = strBuilder9.lastIndexOf(strMatcher35);
        java.io.Reader reader40 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendPadding((int) (short) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int65 = strBuilder62.lastIndexOf(strMatcher63, (int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("10\n100.0", strMatcher63);
        int int67 = strBuilder43.lastIndexOf(strMatcher63);
        int int68 = strBuilder9.lastIndexOf(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test15259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15259");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln((long) '#');
        java.util.stream.IntStream intStream8 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int24 = strBuilder21.lastIndexOf(strMatcher22, (int) (short) 10);
        int int26 = strBuilder5.indexOf(strMatcher22, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer0.setTrimmerMatcher(strMatcher22);
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.appendNewLine();
        java.lang.String str49 = strBuilder48.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        java.lang.Throwable throwable57 = null;
        java.io.IOException iOException58 = new java.io.IOException("", throwable57);
        java.io.IOException iOException59 = new java.io.IOException("#4#a4#", throwable57);
        java.io.IOException iOException60 = new java.io.IOException(throwable57);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1.0f, iOException60, false, 100, strBuilder63 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.appendWithSeparators(objArray64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.deleteAll('a');
        boolean boolean79 = strBuilder77.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.appendln((long) 100);
        boolean boolean83 = strBuilder81.startsWith("zinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder48.appendFixedWidthPadLeft((java.lang.Object) "zinekoTrtSeslaf ", (int) 'e', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder48.insert(59, 6);
        int int90 = strList28.lastIndexOf((java.lang.Object) strBuilder48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor92 = strList28.listIterator(44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 44");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test15260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15260");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterString("hi!");
        java.lang.String str73 = strTokenizer72.nextToken();
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        boolean boolean75 = strList60.removeAll((java.util.Collection<java.lang.String>) strList74);
        boolean boolean76 = strList74.isEmpty();
        boolean boolean78 = strList74.add("100.0false\n");
        boolean boolean80 = strList74.add("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        java.util.ListIterator<java.lang.String> strItor81 = strList74.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList84 = strList74.subList(73, 51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 51");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strItor81);
    }

    @Test
    public void test15261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15261");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        java.util.Spliterator<java.lang.String> strSpliterator20 = strList18.spliterator();
        java.lang.String[] strArray24 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("hi!");
        boolean boolean38 = strTokenizer35.isIgnoreEmptyTokens();
        java.lang.String str39 = strTokenizer35.next();
        int int40 = strList25.indexOf((java.lang.Object) strTokenizer35);
        java.util.ListIterator<java.lang.String> strItor42 = strList25.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor43 = strList25.iterator();
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        boolean boolean61 = strTokenizer58.isIgnoreEmptyTokens();
        java.lang.String str62 = strTokenizer58.next();
        int int63 = strList48.indexOf((java.lang.Object) strTokenizer58);
        boolean boolean64 = strList25.addAll((java.util.Collection<java.lang.String>) strList48);
        java.util.ListIterator<java.lang.String> strItor65 = strList48.listIterator();
        boolean boolean67 = strList48.add("");
        int int68 = strList48.size();
        boolean boolean69 = strList48.isEmpty();
        java.util.ListIterator<java.lang.String> strItor70 = strList48.listIterator();
        java.util.stream.Stream<java.lang.String> strStream71 = strList48.parallelStream();
        boolean boolean72 = strList18.addAll((java.util.Collection<java.lang.String>) strList48);
        java.util.stream.Stream<java.lang.String> strStream73 = strList18.parallelStream();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strSpliterator20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#4#a4#" + "'", str39, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strItor42);
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#4#a4#" + "'", str62, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertNotNull(strStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strStream73);
    }

    @Test
    public void test15262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15262");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append(' ');
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("hi!");
        java.lang.String str31 = strTokenizer30.nextToken();
        java.util.List<java.lang.String> strList32 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strList32);
        java.lang.Object[] objArray34 = strList32.toArray();
        boolean boolean35 = strList32.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder13.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList32, "StrTokenizer[true\n]");
        java.lang.Class<?> wildcardClass38 = strList32.getClass();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[#4#a4#]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test15263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15263");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.deleteCharAt(80);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 80");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test15264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15264");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher35);
        int int38 = strBuilder16.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.deleteFirst(strMatcher35);
        boolean boolean41 = strBuilder0.contains("true\n");
        java.lang.String str44 = strBuilder0.substring(0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder0.appendSeparator("59.052.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNullText("35.0");
        boolean boolean50 = strBuilder48.contains("-1.0#4#a4# java.io.IOException: ");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test15265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15265");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        int int20 = strTokenizer14.nextIndex();
        java.util.List<java.lang.String> strList21 = strTokenizer14.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer14.setIgnoreEmptyTokens(false);
        java.lang.String str24 = strTokenizer14.getContent();
        int int25 = strTokenizer14.nextIndex();
        java.lang.String str26 = strTokenizer14.nextToken();
        boolean boolean27 = strTokenizer14.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer14.setIgnoredChar('.');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getIgnoredMatcher();
        java.lang.String[] strArray31 = strTokenizer29.getTokenArray();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test15266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15266");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln((long) (short) -1);
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append(charArray6);
        int int10 = strBuilder5.lastIndexOf("0\nzinekoTrtSeslaf ", 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendln('c');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = strBuilder12.substring(46);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test15267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15267");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setDelimiterString("hi!");
        boolean boolean18 = strTokenizer15.isIgnoreEmptyTokens();
        java.lang.String str19 = strTokenizer15.next();
        int int20 = strList5.indexOf((java.lang.Object) strTokenizer15);
        int int21 = strTokenizer15.nextIndex();
        java.util.List<java.lang.String> strList22 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer15.getContent();
        int int26 = strTokenizer15.nextIndex();
        java.lang.String str27 = strTokenizer15.nextToken();
        boolean boolean28 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer15.setIgnoredChar('.');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse10", strMatcher31);
        boolean boolean33 = strTokenizer32.hasNext();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4#a4#" + "'", str25, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test15268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15268");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        boolean boolean5 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test15269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15269");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        boolean boolean24 = strTokenizer21.isIgnoreEmptyTokens();
        java.lang.String str25 = strTokenizer21.next();
        int int26 = strList11.indexOf((java.lang.Object) strTokenizer21);
        java.util.ListIterator<java.lang.String> strItor28 = strList11.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor29 = strList11.iterator();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("hi!");
        boolean boolean47 = strTokenizer44.isIgnoreEmptyTokens();
        java.lang.String str48 = strTokenizer44.next();
        int int49 = strList34.indexOf((java.lang.Object) strTokenizer44);
        boolean boolean50 = strList11.addAll((java.util.Collection<java.lang.String>) strList34);
        java.util.ListIterator<java.lang.String> strItor51 = strList34.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        int int62 = strBuilder52.indexOf(strMatcher60);
        int int63 = strList34.indexOf((java.lang.Object) strBuilder52);
        int int64 = strList34.size();
        java.lang.Object[] objArray65 = strList34.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder5.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder5.appendSeparator("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendPadding(41, '.');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4#a4#" + "'", str25, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#4#a4#" + "'", str48, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test15270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15270");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0", '4', '0');
        int int4 = strTokenizer3.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = strTokenizer3.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test15271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15271");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write("0java.io.IOExceptionfalse100", 0, 0);
        writer37.flush();
        writer37.write(15);
        writer37.close();
        java.io.Writer writer64 = writer37.append('4');
        char[] charArray71 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setDelimiterString("hi!");
        java.lang.String str76 = strTokenizer75.nextToken();
        java.util.List<java.lang.String> strList77 = strTokenizer75.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("hi!");
        java.lang.String str81 = strBuilder80.getNullText();
        char[] charArray83 = new char[] { 'a' };
        char[] charArray84 = strBuilder80.getChars(charArray83);
        char[] charArray89 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray90 = strBuilder80.getChars(charArray89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray90);
        int int92 = strList77.indexOf((java.lang.Object) charArray90);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray90);
        // The following exception was thrown during execution in test generation
        try {
            writer64.write(charArray90, 98, (int) '3');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "#4#a4#" + "'", str76, "#4#a4#");
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(strMatcher93);
    }

    @Test
    public void test15272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15272");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(" \nStrTokenizer[#4#a4#]1.0java.io.IOExceptionfalse1001.035.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        java.lang.String str5 = strBuilder4.getNullText();
        char[] charArray7 = new char[] { 'a' };
        char[] charArray8 = strBuilder4.getChars(charArray7);
        char[] charArray13 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray14 = strBuilder4.getChars(charArray13);
        java.io.Reader reader15 = strBuilder4.asReader();
        reader15.mark(10);
        reader15.close();
        boolean boolean19 = reader15.markSupported();
        int int20 = reader15.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        java.lang.String str24 = strBuilder23.getNullText();
        char[] charArray26 = new char[] { 'a' };
        char[] charArray27 = strBuilder23.getChars(charArray26);
        char[] charArray32 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray33 = strBuilder23.getChars(charArray32);
        java.io.Reader reader34 = strBuilder23.asReader();
        long long36 = reader34.skip((long) 59);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        int int59 = strBuilder49.indexOf(strMatcher57);
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher57, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray43);
        int int75 = reader34.read(charArray43);
        int int76 = reader15.read(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, "aa");
        int int83 = strMatcher1.isMatch(charArray43, 5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4');
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test15273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15273");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator("100.01210\n");
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        int int28 = strTokenizer25.previousIndex();
        char[] charArray35 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        int int46 = strBuilder36.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher51, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer25.setIgnoredMatcher(strMatcher55);
        int int59 = strBuilder2.indexOf(strMatcher55, (int) '0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strBuilder2.asTokenizer();
        int int61 = strTokenizer60.previousIndex();
        java.lang.Object obj62 = strTokenizer60.clone();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test15274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15274");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.clear();
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        int int24 = strMatcher15.isMatch(charArray22, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.append(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.appendAll((java.util.Iterator<java.lang.String>) strTokenizer30);
        java.util.List<java.lang.String> strList32 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher36);
        int int39 = strTokenizer38.size();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream41 = strList40.parallelStream();
        boolean boolean42 = strList40.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int53 = strBuilder48.indexOf(strMatcher51, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strBuilder48.asTokenizer();
        java.util.List<java.lang.String> strList55 = strTokenizer54.getTokenList();
        boolean boolean57 = strList55.add("0\nzinekoTrtSeslaf ");
        boolean boolean58 = strList40.removeAll((java.util.Collection<java.lang.String>) strList55);
        boolean boolean59 = strList55.isEmpty();
        boolean boolean60 = strList32.retainAll((java.util.Collection<java.lang.String>) strList55);
        java.util.ListIterator<java.lang.String> strItor61 = strList32.listIterator();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strItor61);
    }

    @Test
    public void test15275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15275");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst('#');
        java.lang.String str22 = strBuilder21.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.append(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder2.appendln(' ');
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        int int40 = strTokenizer36.nextIndex();
        int int41 = strTokenizer36.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer36.setIgnoreEmptyTokens(false);
        int int44 = strTokenizer36.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer36.reset("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.deleteFirst(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int67 = strBuilder64.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int78 = strBuilder75.lastIndexOf(strMatcher76, (int) (short) -1);
        int int79 = strBuilder63.indexOf(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer46.setTrimmerMatcher(strMatcher76);
        java.lang.String[] strArray81 = strTokenizer46.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder2.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        java.util.List<java.lang.String> strList83 = strTokenizer46.getTokenList();
        strList83.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + " " + "'", str22, " ");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strList83);
    }

    @Test
    public void test15276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15276");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator("#4#a4#", (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.setCharAt(36, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        java.lang.String str36 = strBuilder35.getNullText();
        char[] charArray38 = new char[] { 'a' };
        char[] charArray39 = strBuilder35.getChars(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.append(19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        int int48 = strTokenizer46.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer46.getQuoteMatcher();
        int int50 = strBuilder35.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder32.append((java.lang.CharSequence) strBuilder35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.insert(87, (double) 73);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 87");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test15277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15277");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.deleteAll("100.0false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (byte) 0, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteCharAt(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.deleteAll("zinekoTrtSeslaf ");
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        int int40 = strTokenizer38.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.appendln((java.lang.Object) int40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        int int44 = strBuilder41.lastIndexOf(strMatcher42, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.clear();
        java.lang.Throwable throwable52 = null;
        java.io.IOException iOException53 = new java.io.IOException("", throwable52);
        java.io.IOException iOException54 = new java.io.IOException("#4#a4#", throwable52);
        java.io.IOException iOException55 = new java.io.IOException(throwable52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray59 = new java.lang.Object[] { 1.0f, iOException55, false, 100, strBuilder58 };
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder48.appendWithSeparators(objArray59, "");
        java.lang.String str63 = strBuilder48.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder48.deleteFirst("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder48.append('#');
        java.lang.StringBuffer stringBuffer68 = strBuilder48.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder41.append(stringBuffer68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder12.append(stringBuffer68);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str63, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(stringBuffer68);
        org.junit.Assert.assertEquals(stringBuffer68.toString(), "1.0jva.io.IOExceptionfalse100#");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test15278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15278");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        int int20 = strBuilder14.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append("#4#a4#");
        java.lang.String str31 = strBuilder24.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder37.reverse();
        java.lang.StringBuffer stringBuffer69 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.append(stringBuffer69, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder23.append(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder9.appendln(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.setLength(1);
        boolean boolean78 = strBuilder74.endsWith(".0jav");
        char[] charArray79 = strBuilder74.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray79);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[ ]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer84);
    }

    @Test
    public void test15279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15279");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        java.lang.Throwable throwable15 = null;
        java.io.IOException iOException16 = new java.io.IOException("", throwable15);
        java.io.IOException iOException17 = new java.io.IOException("#4#a4#", throwable15);
        java.io.IOException iOException18 = new java.io.IOException(throwable15);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1.0f, iOException18, false, 100, strBuilder21 };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendWithSeparators(objArray22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer32 = strBuilder26.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder7.append(stringBuffer32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) 13);
        java.lang.String str37 = strBuilder35.leftString(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln("java.io.IOException: java.io.IOException: hi!", (int) (byte) 1, 21);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.reverse();
        java.io.Reader reader43 = strBuilder41.asReader();
        int int44 = strBuilder41.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.insert(1, "Except");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(stringBuffer32);
        org.junit.Assert.assertEquals(stringBuffer32.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1.0" + "'", str37, "1.0");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 63 + "'", int44 == 63);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test15280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15280");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        java.lang.String str24 = strTokenizer23.nextToken();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        boolean boolean27 = strList25.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str30 = strTokenizer29.getContent();
        boolean boolean31 = strList25.equals((java.lang.Object) strTokenizer29);
        boolean boolean32 = strList12.addAll((java.util.Collection<java.lang.String>) strList25);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        boolean boolean44 = strTokenizer41.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer41.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream46 = strList45.parallelStream();
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setDelimiterString("hi!");
        java.lang.String str58 = strTokenizer57.nextToken();
        java.util.List<java.lang.String> strList59 = strTokenizer57.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        java.lang.String str63 = strBuilder62.getNullText();
        char[] charArray65 = new char[] { 'a' };
        char[] charArray66 = strBuilder62.getChars(charArray65);
        char[] charArray71 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray72 = strBuilder62.getChars(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray72);
        int int74 = strList59.indexOf((java.lang.Object) charArray72);
        strList59.clear();
        java.util.ListIterator<java.lang.String> strItor76 = strList59.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str78 = strBuilder77.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.deleteAll(strMatcher82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder77.appendln((java.lang.Object) strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.trim();
        int int86 = strList59.lastIndexOf((java.lang.Object) strBuilder85);
        java.util.Iterator<java.lang.String> strItor87 = strList59.iterator();
        boolean boolean88 = strList45.removeAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean89 = strList12.removeAll((java.util.Collection<java.lang.String>) strList45);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "#4#a4#" + "'", str58, "#4#a4#");
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strItor76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strItor87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test15281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15281");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterString("hi!");
        java.lang.String str73 = strTokenizer72.nextToken();
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        boolean boolean75 = strList60.removeAll((java.util.Collection<java.lang.String>) strList74);
        boolean boolean76 = strList74.isEmpty();
        boolean boolean78 = strList74.add("100.0false\n");
        boolean boolean80 = strList74.add("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        int int82 = strList74.indexOf((java.lang.Object) "1.0jva.io.IOExceptionfalse100#");
        java.util.ListIterator<java.lang.String> strItor83 = strList74.listIterator();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strItor83);
    }

    @Test
    public void test15282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15282");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        int int24 = strBuilder18.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendSeparator('\000', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder18.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test15283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15283");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        java.lang.Throwable throwable46 = null;
        java.io.IOException iOException47 = new java.io.IOException("", throwable46);
        java.io.IOException iOException48 = new java.io.IOException("#4#a4#", throwable46);
        java.io.IOException iOException49 = new java.io.IOException(throwable46);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1.0f, iOException49, false, 100, strBuilder52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.appendWithSeparators(objArray53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((double) (short) 1);
        int int60 = strBuilder55.lastIndexOf("java.io.IOException: ", (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        int int72 = strMatcher61.isMatch(charArray68, 0, 0, (int) (byte) 10);
        char[] charArray73 = strBuilder55.getChars(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder37.insert(0, charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("100.0false\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer75.setIgnoreEmptyTokens(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer75.set("a4 4");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test15284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15284");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '0', 'a');
        int int4 = strTokenizer3.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterChar('e');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test15285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15285");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray19);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        java.util.Iterator<java.lang.String> strItor25 = strList24.iterator();
        boolean boolean26 = strList12.containsAll((java.util.Collection<java.lang.String>) strList24);
        java.util.ListIterator<java.lang.String> strItor27 = strList24.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        java.lang.String str32 = strBuilder30.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        java.lang.String str36 = strBuilder35.getNullText();
        char[] charArray38 = new char[] { 'a' };
        char[] charArray39 = strBuilder35.getChars(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.replaceAll('#', ' ');
        java.util.stream.IntStream intStream44 = strBuilder30.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder30.deleteAll('a');
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.lang.String[] strArray72 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        char[] charArray81 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setDelimiterString("hi!");
        boolean boolean86 = strTokenizer83.isIgnoreEmptyTokens();
        java.lang.String str87 = strTokenizer83.next();
        int int88 = strList73.indexOf((java.lang.Object) strTokenizer83);
        java.util.ListIterator<java.lang.String> strItor90 = strList73.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor91 = strList73.iterator();
        boolean boolean92 = strList51.removeAll((java.util.Collection<java.lang.String>) strList73);
        boolean boolean93 = strBuilder46.equals((java.lang.Object) strList51);
        boolean boolean94 = strList24.retainAll((java.util.Collection<java.lang.String>) strList51);
        boolean boolean96 = strList51.add("");
        java.util.stream.Stream<java.lang.String> strStream97 = strList51.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator98 = strList51.spliterator();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(strStream97);
        org.junit.Assert.assertNotNull(strSpliterator98);
    }

    @Test
    public void test15286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15286");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String str19 = strBuilder18.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("10\n\n", "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln(strBuilder31, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        java.lang.String str38 = strBuilder37.getNullText();
        char[] charArray40 = new char[] { 'a' };
        char[] charArray41 = strBuilder37.getChars(charArray40);
        char[] charArray46 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray47 = strBuilder37.getChars(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder37.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.append(strBuilder49, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strBuilder34, (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("0java.io.IOExceptionfalse100");
        int int58 = strTokenizer57.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer57, "0\nfalse32.0");
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("hi!");
        java.lang.String str72 = strTokenizer71.nextToken();
        java.util.List<java.lang.String> strList73 = strTokenizer71.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer71.setTrimmerMatcher(strMatcher74);
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray82);
        int int87 = strMatcher74.isMatch(charArray82, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray82);
        int int90 = strBuilder24.lastIndexOf(strMatcher88, 80);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder24.append(91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strBuilder92.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "#4#a4#" + "'", str72, "#4#a4#");
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 80 + "'", int90 == 80);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strTokenizer93);
    }

    @Test
    public void test15287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15287");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator("a10\n", (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test15288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15288");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        java.lang.String str6 = strBuilder5.getNullText();
        char[] charArray8 = new char[] { 'a' };
        char[] charArray9 = strBuilder5.getChars(charArray8);
        int int13 = strMatcher2.isMatch(charArray9, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.replaceAll(strMatcher2, "java.io.IOException: ");
        java.util.stream.IntStream intStream16 = strBuilder0.codePoints();
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        java.lang.String[] strArray28 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder0.append((java.lang.Object) strArray28);
        java.io.Reader reader30 = strBuilder29.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendFixedWidthPadRight(100, (int) 'a', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.appendln((float) 16);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test15289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15289");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.setNewLineText(" ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setEmptyTokenAsNull(false);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        int int65 = strBuilder55.indexOf(strMatcher63);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher63, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer40.setDelimiterMatcher(strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer40.setIgnoreEmptyTokens(true);
        int int83 = strTokenizer40.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer40.getTrimmerMatcher();
        boolean boolean85 = strBuilder33.contains(strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder33.append('c');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.append(206);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test15290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15290");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.replaceAll('3', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.deleteFirst("o.IOExceptionfalse1001.0\n35.0\n##a#");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test15291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15291");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: StrTokenizer[not tokenized yet]");
        int int2 = strBuilder1.length();
        java.lang.String str3 = strBuilder1.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int7 = strBuilder4.indexOf(strMatcher6);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.append(' ');
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        java.lang.String str21 = strTokenizer20.nextToken();
        java.util.List<java.lang.String> strList22 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder4.appendAll((java.lang.Iterable<java.lang.String>) strList22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder4.appendln((float) 1L);
        java.io.Writer writer26 = strBuilder4.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder4.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(49);
        boolean boolean30 = strBuilder1.equals(strBuilder29);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "java.io.IOException: StrTokenizer[not tokenized yet]" + "'", str3, "java.io.IOException: StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#4#a4#" + "'", str21, "#4#a4#");
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test15292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15292");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(4, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.insert(34, (float) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln("100.0false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceFirst("\nzinekoTrtSeslaf \n", " falsezinekoTrtSeslaf \n");
        boolean boolean47 = strBuilder45.contains("2.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll("java.io.IOException: java.io.IOException", "35.0\n19");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test15293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15293");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("a", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln("4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getQuoteMatcher();
        int int24 = strBuilder18.lastIndexOf(strMatcher23);
        boolean boolean25 = strBuilder9.contains(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        java.lang.String str30 = strBuilder29.getNullText();
        char[] charArray32 = new char[] { 'a' };
        char[] charArray33 = strBuilder29.getChars(charArray32);
        char[] charArray38 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray39 = strBuilder29.getChars(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        boolean boolean42 = strTokenizer41.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("zinekoTrtSeslaf ", strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.replaceFirst(strMatcher43, "4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        char[] charArray58 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray59 = strBuilder49.getChars(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, "ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.appendln(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher67);
    }

    @Test
    public void test15294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15294");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.setCharAt(2, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.appendSeparator('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.ensureCapacity(64);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.replaceFirst('f', 'e');
        java.lang.StringBuffer stringBuffer85 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder79.appendln(stringBuffer85);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test15295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15295");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator("100.01210\n");
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        int int28 = strTokenizer25.previousIndex();
        char[] charArray35 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        int int46 = strBuilder36.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher51, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer25.setIgnoredMatcher(strMatcher55);
        int int59 = strBuilder2.indexOf(strMatcher55, (int) '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder2.appendln("zinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.setCharAt(37, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.ensureCapacity(72);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.replaceAll('1', 'j');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test15296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15296");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.append((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.append(false);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strTokenizer37, 10, ' ');
        int int44 = strTokenizer37.previousIndex();
        boolean boolean45 = strTokenizer37.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer37.reset("#4#a4#");
        java.util.List<java.lang.String> strList48 = strTokenizer37.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder3.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer37, "StrTokenizer[not tokenized yet]");
        java.util.List<java.lang.String> strList51 = strTokenizer37.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream52 = strList51.parallelStream();
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        java.lang.String str64 = strTokenizer63.nextToken();
        java.util.List<java.lang.String> strList65 = strTokenizer63.getTokenList();
        boolean boolean67 = strList65.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str70 = strTokenizer69.getContent();
        boolean boolean71 = strList65.equals((java.lang.Object) strTokenizer69);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean73 = strList65.equals((java.lang.Object) strMatcher72);
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.setDelimiterString("hi!");
        java.lang.String str85 = strTokenizer84.nextToken();
        java.util.List<java.lang.String> strList86 = strTokenizer84.getTokenList();
        boolean boolean88 = strList86.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str91 = strTokenizer90.getContent();
        boolean boolean92 = strList86.equals((java.lang.Object) strTokenizer90);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean94 = strList86.equals((java.lang.Object) strMatcher93);
        boolean boolean95 = strList65.retainAll((java.util.Collection<java.lang.String>) strList86);
        boolean boolean96 = strList51.containsAll((java.util.Collection<java.lang.String>) strList86);
        java.util.ListIterator<java.lang.String> strItor97 = strList86.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = strList86.remove(39);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 39, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#4#a4#" + "'", str64, "#4#a4#");
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "#4#a4#" + "'", str85, "#4#a4#");
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(strItor97);
    }

    @Test
    public void test15297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15297");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        java.lang.String str18 = strBuilder3.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.deleteFirst("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        boolean boolean27 = strBuilder23.startsWith(" ###################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll("0.012true104444444444444444444444444444444444444444444444  \n", "0\n4444444444#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.insert(14, (double) 93);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str18, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test15298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15298");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("100.01210\n", "");
        java.util.stream.IntStream intStream16 = strBuilder15.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.ensureCapacity(200);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append((float) 91);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        boolean boolean33 = strTokenizer30.isIgnoreEmptyTokens();
        int int34 = strTokenizer30.nextIndex();
        int int35 = strTokenizer30.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer30.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((long) '#');
        java.util.stream.IntStream intStream46 = strBuilder43.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder43.appendFixedWidthPadRight((java.lang.Object) strMatcher54, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder43.appendln('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        java.lang.String str64 = strBuilder63.getNullText();
        char[] charArray66 = new char[] { 'a' };
        char[] charArray67 = strBuilder63.getChars(charArray66);
        int int71 = strMatcher60.isMatch(charArray67, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray67);
        int int73 = strBuilder43.indexOf(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException", strMatcher38, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder15.deleteFirst(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test15299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15299");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append(false);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("hi!");
        boolean boolean27 = strTokenizer24.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder11.appendFixedWidthPadRight((java.lang.Object) strTokenizer24, 10, ' ');
        int int31 = strTokenizer24.previousIndex();
        boolean boolean32 = strTokenizer24.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer24.reset("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.deleteFirst(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.minimizeCapacity();
        char[] charArray59 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int69 = strBuilder66.indexOf(strMatcher68);
        int int70 = strBuilder60.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder51.replace(strMatcher68, "", 2, (int) (short) 100, 10);
        char[] charArray79 = strBuilder51.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.deleteFirst("hi!");
        java.lang.String str84 = strBuilder83.getNullText();
        char[] charArray86 = new char[] { 'a' };
        char[] charArray87 = strBuilder83.getChars(charArray86);
        int int91 = strMatcher80.isMatch(charArray87, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer34.setDelimiterMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder3.deleteAll(strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder3.deleteFirst('a');
        int int98 = strBuilder96.indexOf(':');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test15300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15300");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNullText("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln((long) '#');
        java.util.stream.IntStream intStream53 = strBuilder50.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int69 = strBuilder66.lastIndexOf(strMatcher67, (int) (short) 10);
        int int71 = strBuilder50.indexOf(strMatcher67, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer45.setTrimmerMatcher(strMatcher67);
        java.util.List<java.lang.String> strList73 = strTokenizer72.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendAll((java.lang.Iterable<java.lang.String>) strList73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.appendFixedWidthPadLeft(50, 28, ':');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(intStream53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 5 + "'", int71 == 5);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test15301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15301");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("aaaaaaaaaaaaaaaaaaaaaaaa100", '0', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("1false0");
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test15302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15302");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        boolean boolean4 = strTokenizer1.hasNext();
        java.util.List<java.lang.String> strList5 = strTokenizer1.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        strList5.add(0, "100.0\n48.0\n");
        strList5.clear();
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test15303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15303");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        java.util.ListIterator<java.lang.String> strItor47 = strList27.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendPadding((int) (short) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.ensureCapacity(2);
        int int59 = strList27.lastIndexOf((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.setNewLineText("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        int int62 = strBuilder61.capacity();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str65 = strTokenizer64.getContent();
        char[] charArray71 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer64.reset(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, '4', '#');
        boolean boolean79 = strTokenizer78.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer78.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder61.append((java.lang.Object) strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder61.appendSeparator(" 0\nfalse\n\000", (int) '4');
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test15304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15304");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(strBuilder9, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.insert(2, (java.lang.Object) strBuilder19);
        java.lang.String str21 = strBuilder20.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test15305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15305");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteAll(strMatcher11);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        boolean boolean30 = strTokenizer27.isIgnoreEmptyTokens();
        java.lang.String str31 = strTokenizer27.next();
        int int32 = strList17.indexOf((java.lang.Object) strTokenizer27);
        java.util.ListIterator<java.lang.String> strItor34 = strList17.listIterator((int) (byte) 0);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        boolean boolean52 = strTokenizer49.isIgnoreEmptyTokens();
        java.lang.String str53 = strTokenizer49.next();
        int int54 = strList39.indexOf((java.lang.Object) strTokenizer49);
        java.util.ListIterator<java.lang.String> strItor56 = strList39.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor57 = strList39.iterator();
        boolean boolean58 = strList17.removeAll((java.util.Collection<java.lang.String>) strList39);
        java.util.Iterator<java.lang.String> strItor59 = strList17.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder8.appendFixedWidthPadRight((java.lang.Object) strItor59, (int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder8.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append('#');
        int int67 = strList7.indexOf((java.lang.Object) '#');
        java.util.Iterator<java.lang.String> strItor68 = strList7.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.clear();
        java.lang.Throwable throwable76 = null;
        java.io.IOException iOException77 = new java.io.IOException("", throwable76);
        java.io.IOException iOException78 = new java.io.IOException("#4#a4#", throwable76);
        java.io.IOException iOException79 = new java.io.IOException(throwable76);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray83 = new java.lang.Object[] { 1.0f, iOException79, false, 100, strBuilder82 };
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder72.appendWithSeparators(objArray83, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder72.replaceAll('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.appendSeparator("", "java.io.IOException: StrTokenizer[#4#a4#]");
        int int94 = strBuilder88.indexOf('I', 33);
        boolean boolean95 = strList7.contains((java.lang.Object) int94);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertNotNull(strItor57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test15306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15306");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.clear();
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        int int24 = strMatcher15.isMatch(charArray22, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.append(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.appendAll((java.util.Iterator<java.lang.String>) strTokenizer30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        java.lang.String str37 = strBuilder35.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNull();
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.append(stringBuffer42, (int) '4', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.appendln((java.lang.Object) stringBuffer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder31.appendln(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.deleteAll('a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.appendln("35\n10\n\na", 42, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test15307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15307");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.insert(0, charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.setLength(44);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.replace(strMatcher53, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder41.append((java.lang.Object) strTokenizer59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder41.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("0\nhi!hi!truehi!");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test15308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15308");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int28 = strBuilder25.lastIndexOf(strMatcher26, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder0.replaceFirst(strMatcher26, "#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder0.deleteFirst(" 0\n1.0java.io.IOExceptionfalse10005");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str34 = strBuilder33.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        java.lang.String str39 = strBuilder37.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        java.lang.String str43 = strBuilder42.getNullText();
        char[] charArray45 = new char[] { 'a' };
        char[] charArray46 = strBuilder42.getChars(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder37.append((java.lang.Object) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder37.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder33.append((java.lang.CharSequence) strBuilder50);
        boolean boolean52 = strBuilder33.isEmpty();
        int int55 = strBuilder33.lastIndexOf("35\n", 37);
        boolean boolean57 = strBuilder33.startsWith("0.012true104444444444444444444444444444444444444444444444");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder33.replaceFirst("\n5", "java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray65 = strTokenizer62.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder33.appendAll((java.lang.Object[]) strArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder0.append(strBuilder33);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.delete(38, 21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test15309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15309");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.String[] strArray8 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        java.lang.String str23 = strTokenizer19.next();
        int int24 = strList9.indexOf((java.lang.Object) strTokenizer19);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        int int47 = strBuilder37.indexOf(strMatcher45);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher45, strMatcher60);
        boolean boolean62 = strList9.equals((java.lang.Object) strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        java.util.stream.IntStream intStream69 = strBuilder68.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int72 = strBuilder68.lastIndexOf(strMatcher71);
        boolean boolean73 = strList9.remove((java.lang.Object) strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer1.setTrimmerMatcher(strMatcher71);
        boolean boolean75 = strTokenizer1.isEmptyTokenAsNull();
        java.lang.String str76 = strTokenizer1.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer1.setQuoteMatcher(strMatcher77);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#4#a4#" + "'", str23, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(intStream69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test15310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15310");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(false);
        boolean boolean14 = strBuilder11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str20 = strBuilder19.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert(1, (float) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln((java.lang.Object) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder18.deleteFirst("");
        int int34 = strBuilder18.lastIndexOf('4', 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.append((long) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst('I', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.appendFixedWidthPadRight((int) 'a', 52, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.append(".0java.io.IOExceptionfalse1000");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("59.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.deleteFirst(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.setNewLineText("10\n\n");
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("hi!");
        boolean boolean78 = strTokenizer75.isIgnoreEmptyTokens();
        java.lang.String str79 = strTokenizer75.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer75.getIgnoredMatcher();
        int int82 = strBuilder63.indexOf(strMatcher80, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder57.appendFixedWidthPadRight((java.lang.Object) strMatcher80, 30, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder18.appendln(strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.deleteCharAt(18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer90.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray93 = strTokenizer90.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder88.appendAll((java.lang.Object[]) strArray93);
        java.lang.String str96 = strBuilder94.substring(70);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 12 + "'", int34 == 12);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "#4#a4#" + "'", str79, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "ceptionfalse1000org.apache.commons.lang3.text." + "'", str96, "ceptionfalse1000org.apache.commons.lang3.text.");
    }

    @Test
    public void test15311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15311");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.append(stringBuffer4, (int) '4', 10);
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.setNullText("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        char[] charArray11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        boolean boolean13 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        char[] charArray25 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray26 = strBuilder16.getChars(charArray25);
        java.io.Reader reader27 = strBuilder16.asReader();
        reader27.mark(10);
        reader27.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        char[] charArray40 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.appendln(charArray40);
        int int43 = reader27.read(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, "StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer12.reset(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder10.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer12, "StrTokenizer[true\n]");
        java.lang.String str54 = strTokenizer12.previous();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        java.lang.Throwable throwable62 = null;
        java.io.IOException iOException63 = new java.io.IOException("", throwable62);
        java.io.IOException iOException64 = new java.io.IOException("#4#a4#", throwable62);
        java.io.IOException iOException65 = new java.io.IOException(throwable62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1.0f, iOException65, false, 100, strBuilder68 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.appendWithSeparators(objArray69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.clear();
        java.lang.String str77 = strBuilder75.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder58.append((java.lang.CharSequence) str77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((float) 100L);
        char[] charArray89 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray89);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder80.replaceAll(strMatcher94, "\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer12.setQuoteMatcher(strMatcher94);
        boolean boolean98 = strTokenizer97.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "aa4#4" + "'", str54, "aa4#4");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strTokenizer97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test15312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15312");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.append(stringBuffer4, (int) '4', 10);
        int int8 = strBuilder3.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.replaceAll('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.deleteFirst('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append((float) (short) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("hi!");
        boolean boolean34 = strTokenizer31.isIgnoreEmptyTokens();
        java.lang.String str35 = strTokenizer31.next();
        int int36 = strList21.indexOf((java.lang.Object) strTokenizer31);
        java.util.ListIterator<java.lang.String> strItor38 = strList21.listIterator((int) (byte) 0);
        java.lang.String[] strArray42 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        boolean boolean56 = strTokenizer53.isIgnoreEmptyTokens();
        java.lang.String str57 = strTokenizer53.next();
        int int58 = strList43.indexOf((java.lang.Object) strTokenizer53);
        java.util.ListIterator<java.lang.String> strItor60 = strList43.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor61 = strList43.iterator();
        boolean boolean62 = strList21.removeAll((java.util.Collection<java.lang.String>) strList43);
        boolean boolean64 = strList43.add("java.io.IOException: StrTokenizer[#4#a4#]");
        java.lang.Object[] objArray65 = strList43.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder16.appendAll((java.lang.Iterable<java.lang.String>) strList43);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#4#a4#" + "'", str35, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#4#a4#" + "'", str57, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strItor60);
        org.junit.Assert.assertNotNull(strItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[, , , java.io.IOException: StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[, , , java.io.IOException: StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test15313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15313");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        java.lang.String str16 = strBuilder0.midString((int) (byte) 1, (-1));
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.replaceFirst(strMatcher29, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder0.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder0.trim();
        java.io.Reader reader35 = strBuilder34.asReader();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader35);
    }

    @Test
    public void test15314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15314");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        int int11 = strBuilder10.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.deleteAll("#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.deleteFirst("1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce");
        java.util.stream.IntStream intStream16 = strBuilder10.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder10.appendln(strBuilder17, 3, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendFixedWidthPadRight(88, 31, '.');
        int int25 = strBuilder10.capacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 76 + "'", int25 == 76);
    }

    @Test
    public void test15315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15315");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator('\000', 24);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        int int26 = strMatcher15.isMatch(charArray22, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str30 = strTokenizer29.getContent();
        char[] charArray36 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer29.reset(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, "a");
        int int42 = strMatcher27.isMatch(charArray36, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder11.replace(strMatcher27, " ", (int) (byte) 1, (int) 'a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder11.appendln('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        java.lang.Throwable throwable57 = null;
        java.io.IOException iOException58 = new java.io.IOException("", throwable57);
        java.io.IOException iOException59 = new java.io.IOException("#4#a4#", throwable57);
        java.io.IOException iOException60 = new java.io.IOException(throwable57);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1.0f, iOException60, false, 100, strBuilder63 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.appendWithSeparators(objArray64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.appendSeparator("#4#a4#", (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendSeparator('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder74.appendPadding(47, 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder11.append(strBuilder74, 6, 47);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test15316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15316");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendln('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.replace(6, 19, "a10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        java.lang.String str24 = strBuilder23.getNullText();
        char[] charArray26 = new char[] { 'a' };
        char[] charArray27 = strBuilder23.getChars(charArray26);
        char[] charArray32 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray33 = strBuilder23.getChars(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray33);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer34.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '#', '4');
        char[] charArray55 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        int int66 = strBuilder56.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer48.reset(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder20.appendln(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a4 4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher72);
    }

    @Test
    public void test15317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15317");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        char[] charArray28 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray29 = strBuilder19.getChars(charArray28);
        java.io.Reader reader30 = strBuilder19.asReader();
        reader30.mark(10);
        reader30.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.clear();
        char[] charArray43 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendln(charArray43);
        int int46 = reader30.read(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder16.append(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder16.appendln(24);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder16.deleteAll(".0jva.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test15318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15318");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.appendln((float) 1L);
        java.io.Writer writer22 = strBuilder0.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder0.append((float) ' ');
        java.lang.String str28 = strBuilder25.midString(60, (int) 'c');
        java.lang.String str30 = strBuilder25.rightString(63);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(writer22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#1.032.0" + "'", str30, "#4#a4#1.032.0");
    }

    @Test
    public void test15319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15319");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String str19 = strBuilder18.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("10\n\n", "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((double) 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendSeparator('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendPadding(0, 'o');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test15320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15320");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.deleteFirst('#');
        boolean boolean29 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.deleteCharAt(5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strBuilder28.asTokenizer();
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test15321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15321");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str49 = strBuilder48.getNullText();
        char[] charArray51 = new char[] { 'a' };
        char[] charArray52 = strBuilder48.getChars(charArray51);
        int int56 = strMatcher45.isMatch(charArray52, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset("StrTokenizer[not tokenized yet]");
        boolean boolean61 = strTokenizer60.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test15322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15322");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        java.io.Reader reader7 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendln(false);
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(66);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.appendln('c');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.setLength((int) ':');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "100.0false\n" + "'", str10, "100.0false\n");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test15323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15323");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder17.appendln(charArray35, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer8.reset(charArray35);
        boolean boolean43 = strTokenizer8.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.add("4a# ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test15324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15324");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int8 = strBuilder5.indexOf(strMatcher7);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        java.lang.String str21 = strBuilder5.midString((int) (byte) 1, (-1));
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.replaceFirst(strMatcher34, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendSeparator("", "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.deleteAll(strMatcher43);
        int int46 = strBuilder5.lastIndexOf(strMatcher43, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer2.setQuoteMatcher(strMatcher43);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer47.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer47);
    }

    @Test
    public void test15325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15325");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln('a');
        java.util.stream.IntStream intStream19 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln("false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strBuilder21.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendln(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert(21, 'f');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 21");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test15326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15326");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        int int14 = strBuilder12.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst("StrTokenizer[not tokenized yet]", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test15327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15327");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert(1, (float) (short) -1);
        java.io.Writer writer36 = strBuilder35.asWriter();
        writer36.write(19);
        java.io.Writer writer40 = writer36.append('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.replace(strMatcher53, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int60 = strBuilder42.lastIndexOf(strMatcher53, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder42.replaceAll("java.io.IOException: ", "35\n");
        java.io.Writer writer64 = writer40.append((java.lang.CharSequence) "java.io.IOException: ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(writer40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(writer64);
    }

    @Test
    public void test15328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15328");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int32 = strBuilder30.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.delete(38, (int) '4');
        java.lang.String str40 = strBuilder37.midString(6, 21);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendln((double) 'I');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.delete(53, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "a.io.IOExceptionfalse" + "'", str40, "a.io.IOExceptionfalse");
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test15329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15329");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.setQuoteChar(' ');
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer39.setDelimiterString("false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append("#4#a4#");
        java.lang.String str54 = strBuilder47.leftString((int) (short) 100);
        int int56 = strBuilder47.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder47.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int75 = strBuilder72.lastIndexOf(strMatcher73, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.replaceFirst(strMatcher73, "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer44.setIgnoredMatcher(strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer28.setQuoteMatcher(strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setQuoteChar('\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer79.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "#4#a4#" + "'", str54, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
    }

    @Test
    public void test15330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15330");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int38 = strBuilder35.lastIndexOf(strMatcher36, (int) (short) 10);
        boolean boolean39 = strBuilder14.contains(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendln(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder14.appendSeparator("", 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder14.append((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder14.setLength(38);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder14.append((float) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder14.ensureCapacity(21);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder14.appendln(90);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test15331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15331");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setTrimmerMatcher(strMatcher13);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        int int26 = strMatcher13.isMatch(charArray21, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher31);
        boolean boolean35 = strTokenizer34.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = strTokenizer34.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test15332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15332");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        java.lang.Object[] objArray36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.appendAll(objArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.insert(7, (double) (byte) 0);
        java.io.Writer writer41 = strBuilder40.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            writer41.write("0.012true104444444444444444444444444444444444444444444444  \n", 105, 39);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(writer41);
    }

    @Test
    public void test15333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15333");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32", 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln((float) 4);
        java.io.Writer writer15 = strBuilder14.asWriter();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(writer15);
    }

    @Test
    public void test15334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15334");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln(strBuilder51, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.insert(2, (java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.appendln((int) (short) 100);
        java.lang.String str65 = strBuilder56.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder56.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder41.append(strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceAll("\nzinekoTrtSeslaf \n", "#4#a4#java.io.IOException: 10.0\n-1        ");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test15335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15335");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        java.lang.Throwable throwable50 = null;
        java.io.IOException iOException51 = new java.io.IOException("", throwable50);
        java.io.IOException iOException52 = new java.io.IOException("#4#a4#", throwable50);
        java.io.IOException iOException53 = new java.io.IOException(throwable50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray57 = new java.lang.Object[] { 1.0f, iOException53, false, 100, strBuilder56 };
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.appendWithSeparators(objArray57, "");
        java.lang.String str61 = strBuilder46.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder46.deleteFirst("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteAll(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder40.insert((int) (short) 0, (java.lang.Object) strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str61, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test15336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15336");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        java.lang.String str17 = strBuilder14.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendln(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNewLineText("java.io.IOException: 59.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append("#4#a4#");
        java.lang.String str30 = strBuilder23.leftString((int) (short) 100);
        int int32 = strBuilder23.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder23.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.replaceAll("java.io.IOException: StrTokenizer[#4#a4#]", "#4#a4#");
        int int43 = strBuilder40.lastIndexOf(" ", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.replaceAll(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", "eptionfalse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendSeparator("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.deleteFirst("##########################110\n\ni###############################################################################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.reverse();
        int int55 = strBuilder53.lastIndexOf("1.0java.io.IOExceptionfalse100100.097###");
        java.lang.Throwable throwable57 = null;
        java.io.IOException iOException58 = new java.io.IOException("", throwable57);
        java.lang.Throwable[] throwableArray59 = iOException58.getSuppressed();
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException58);
        java.io.IOException iOException61 = new java.io.IOException((java.lang.Throwable) iOException60);
        java.lang.Throwable throwable63 = null;
        java.io.IOException iOException64 = new java.io.IOException("", throwable63);
        java.lang.Throwable[] throwableArray65 = iOException64.getSuppressed();
        java.io.IOException iOException66 = new java.io.IOException((java.lang.Throwable) iOException64);
        java.lang.Throwable throwable67 = null;
        java.io.IOException iOException68 = new java.io.IOException(throwable67);
        java.io.IOException iOException70 = new java.io.IOException("StrTokenizer[#4#a4#]");
        iOException68.addSuppressed((java.lang.Throwable) iOException70);
        iOException64.addSuppressed((java.lang.Throwable) iOException68);
        java.io.IOException iOException74 = new java.io.IOException("1false0\nfalse");
        java.io.IOException iOException76 = new java.io.IOException("StrTokenizer[not tokenized yet]");
        iOException74.addSuppressed((java.lang.Throwable) iOException76);
        iOException68.addSuppressed((java.lang.Throwable) iOException76);
        iOException60.addSuppressed((java.lang.Throwable) iOException68);
        java.lang.Throwable[] throwableArray80 = iOException68.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder53.appendWithSeparators((java.lang.Object[]) throwableArray80, " 0\n1.0java.io.IOExceptionfalse10005");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder20.appendWithSeparators((java.lang.Object[]) throwableArray80, "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n");
        java.lang.StringBuffer stringBuffer85 = strBuilder84.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.appendSeparator("4a# ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(stringBuffer85);
        org.junit.Assert.assertEquals(stringBuffer85.toString(), "1false0\n\n#java.io.IOException: StrTokenizer[#4#a4#]1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\njava.io.IOException: StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test15337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15337");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream1 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        boolean boolean8 = strBuilder5.equals(strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNull();
        boolean boolean14 = strBuilder12.equals((java.lang.Object) 100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        char[] charArray27 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray28 = strBuilder18.getChars(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int42 = strBuilder39.lastIndexOf(strMatcher40, (int) (short) 10);
        boolean boolean43 = strBuilder18.contains(strMatcher40);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        java.lang.String str55 = strTokenizer54.nextToken();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setTrimmerMatcher(strMatcher57);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        int int70 = strMatcher57.isMatch(charArray65, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher40, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder12.replaceAll(strMatcher72, "1false0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder5.append(strBuilder74);
        int int77 = strBuilder74.indexOf('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.append(false);
        org.junit.Assert.assertNotNull(intStream1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#4#a4#" + "'", str55, "#4#a4#");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test15338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15338");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        java.util.Iterator<java.lang.String> strItor8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendAll(strItor8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendln(10L);
        int int31 = strBuilder25.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder25.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append("#4#a4#");
        java.lang.String str42 = strBuilder35.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append(false);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder48.appendFixedWidthPadRight((java.lang.Object) strTokenizer61, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int71 = strBuilder68.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.appendln((int) (short) 10);
        boolean boolean78 = strBuilder48.equalsIgnoreCase(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder48.reverse();
        java.lang.StringBuffer stringBuffer80 = strBuilder79.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder35.append(stringBuffer80, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder34.append(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder19.append((java.lang.Object) stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder12.append(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder0.appendln(stringBuffer80);
        int int88 = strBuilder87.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.deleteAll("0.012true104444444444444444444444444444444444444444444444");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder87.replaceFirst("-1.0#4#a4# 100\na", "se1000111111111111111114811111111111111111111111111111111111111111111]tey dezinekot ton[rezinekoTrtS0.001");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#4#a4#" + "'", str42, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 18 + "'", int88 == 18);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test15339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15339");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer17.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
    }

    @Test
    public void test15340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15340");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        char[] charArray26 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray26);
        java.lang.String str28 = strTokenizer27.previousToken();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "1.0java.io.IOExceptionfalse1000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "1.0java.io.IOExceptionfalse1000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 0]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test15341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15341");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst('0', '\000');
        char[] charArray23 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        boolean boolean25 = strTokenizer24.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "1.\000-1.0#4#a4# 100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "1.\000-1.0#4#a4# 100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[1, ., \000, -, 1, ., 0, #, 4, #, a, 4, #,  , 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test15342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15342");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer20.reset();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        int int34 = strBuilder24.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder24.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        java.lang.Throwable throwable47 = null;
        java.io.IOException iOException48 = new java.io.IOException("", throwable47);
        java.io.IOException iOException49 = new java.io.IOException("#4#a4#", throwable47);
        java.io.IOException iOException50 = new java.io.IOException(throwable47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 1.0f, iOException50, false, 100, strBuilder53 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendWithSeparators(objArray54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder63.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setIgnoreEmptyTokens(false);
        boolean boolean67 = strTokenizer66.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer66.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray70 = strTokenizer69.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder39.appendAll((java.lang.Object[]) strArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int75 = strBuilder72.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.append('4');
        char[] charArray84 = strBuilder79.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder39.append(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer23.reset(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer86.reset();
        boolean boolean88 = strTokenizer86.hasNext();
        boolean boolean89 = strTokenizer86.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ , 4]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test15343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15343");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream1 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.setNullText("StrTokenizer[1.0java.io.IOExceptionfalse1001.0, 35.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.deleteAll('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendln(10L);
        int int16 = strBuilder10.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.insert(1, false);
        java.lang.String str21 = strBuilder19.leftString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        java.lang.Throwable throwable29 = null;
        java.io.IOException iOException30 = new java.io.IOException("", throwable29);
        java.io.IOException iOException31 = new java.io.IOException("#4#a4#", throwable29);
        java.io.IOException iOException32 = new java.io.IOException(throwable29);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1.0f, iOException32, false, 100, strBuilder35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.appendWithSeparators(objArray36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        java.lang.String str44 = strBuilder42.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder25.append((java.lang.CharSequence) str44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append("#4#a4#");
        boolean boolean54 = strBuilder47.equals(strBuilder53);
        int int57 = strBuilder53.indexOf('a', 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.append((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder19.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder0.append((java.lang.CharSequence) strBuilder59);
        org.junit.Assert.assertNotNull(intStream1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1false0\n" + "'", str21, "1false0\n");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test15344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15344");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        java.lang.Throwable throwable21 = null;
        java.io.IOException iOException22 = new java.io.IOException("", throwable21);
        java.io.IOException iOException23 = new java.io.IOException("#4#a4#", throwable21);
        java.io.IOException iOException24 = new java.io.IOException(throwable21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1.0f, iOException24, false, 100, strBuilder27 };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.appendWithSeparators(objArray28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.replaceFirst('1', '1');
        char[] charArray48 = null;
        char[] charArray49 = strBuilder42.getChars(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.appendSeparator('\000');
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        java.lang.String str63 = strTokenizer62.nextToken();
        java.util.List<java.lang.String> strList64 = strTokenizer62.getTokenList();
        boolean boolean66 = strList64.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str69 = strTokenizer68.getContent();
        boolean boolean70 = strList64.equals((java.lang.Object) strTokenizer68);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        java.lang.String str76 = strBuilder75.getNullText();
        char[] charArray78 = new char[] { 'a' };
        char[] charArray79 = strBuilder75.getChars(charArray78);
        int int81 = strMatcher72.isMatch(charArray79, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer68.setDelimiterMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder51.appendFixedWidthPadLeft((java.lang.Object) strTokenizer82, 16, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder11.append((java.lang.CharSequence) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder11.replaceAll('\000', 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "1.0java.io.IOExceptionfalse1001.0\n35.0\ntrue");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "1.0java.io.IOExceptionfalse1001.0\n35.0\ntrue");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, t, r, u, e]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#4#a4#" + "'", str63, "#4#a4#");
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test15345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15345");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        java.lang.String str29 = strBuilder28.getNullText();
        char[] charArray31 = new char[] { 'a' };
        char[] charArray32 = strBuilder28.getChars(charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.setNewLineText("0\nfalse32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((long) '#');
        java.util.stream.IntStream intStream49 = strBuilder46.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int65 = strBuilder62.lastIndexOf(strMatcher63, (int) (short) 10);
        int int67 = strBuilder46.indexOf(strMatcher63, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer41.setTrimmerMatcher(strMatcher63);
        boolean boolean69 = strBuilder34.equals((java.lang.Object) strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ".0jav");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray20);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(intStream49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 5 + "'", int67 == 5);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher73);
    }

    @Test
    public void test15346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15346");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream42 = strBuilder41.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.appendNewLine();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder47.append((java.lang.Object) charArray54);
        boolean boolean59 = strBuilder40.equalsIgnoreCase(strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.deleteFirst('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendFixedWidthPadLeft(52, 12, 'I');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test15347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15347");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\ntrueaaaaaaaaaa");
    }

    @Test
    public void test15348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15348");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append("java.io.IOException: StrTokenizer[#4#a4#]", (int) (byte) 10, 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.append(0);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder33.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(false);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("hi!");
        boolean boolean67 = strTokenizer64.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder51.appendFixedWidthPadRight((java.lang.Object) strTokenizer64, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int74 = strBuilder71.indexOf(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.appendln((int) (short) 10);
        boolean boolean81 = strBuilder51.equalsIgnoreCase(strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder76.insert((int) (byte) 1, 'a');
        char char86 = strBuilder76.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder76.replace((int) '\000', 0, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder76.setLength(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder76.replace(0, 7, " \n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder33.appendln(strBuilder96, 206, 60);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + char86 + "' != '" + ' ' + "'", char86 == ' ');
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test15349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15349");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        java.lang.String str14 = strBuilder13.getNullText();
        char[] charArray16 = new char[] { 'a' };
        char[] charArray17 = strBuilder13.getChars(charArray16);
        char[] charArray22 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray23 = strBuilder13.getChars(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int37 = strBuilder34.lastIndexOf(strMatcher35, (int) (short) 10);
        boolean boolean38 = strBuilder13.contains(strMatcher35);
        int int39 = strBuilder9.lastIndexOf(strMatcher35);
        java.io.Reader reader40 = strBuilder9.asReader();
        int int41 = reader40.read();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 49 + "'", int41 == 49);
    }

    @Test
    public void test15350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15350");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        char[] charArray25 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray26 = strBuilder16.getChars(charArray25);
        int int30 = strMatcher13.isMatch(charArray25, (int) (short) 100, (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str36 = strTokenizer35.getContent();
        char[] charArray42 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer35.reset(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setIgnoredChar('a');
        boolean boolean52 = strTokenizer49.isIgnoreEmptyTokens();
        java.lang.String str53 = strTokenizer49.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer33.setQuoteMatcher(strMatcher54);
        java.util.List<java.lang.String> strList56 = strTokenizer55.getTokenList();
        java.lang.String str57 = strTokenizer55.nextToken();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "4" + "'", str53, "4");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4 4" + "'", str57, "4 4");
    }

    @Test
    public void test15351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15351");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        int int20 = strBuilder14.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append("#4#a4#");
        java.lang.String str31 = strBuilder24.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder37.reverse();
        java.lang.StringBuffer stringBuffer69 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.append(stringBuffer69, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder23.append(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder9.appendln(stringBuffer69);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder9.appendln("true10\n\na4 4", 37, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test15352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15352");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getDelimiterMatcher();
        int int15 = strTokenizer13.size();
        boolean boolean16 = strTokenizer13.hasNext();
        java.lang.String str17 = strTokenizer13.next();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
    }

    @Test
    public void test15353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15353");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.lang.String str14 = strBuilder2.substring(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.deleteAll("100.012");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendln((double) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.appendFixedWidthPadRight(46, 64, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        java.lang.Throwable throwable30 = null;
        java.io.IOException iOException31 = new java.io.IOException("", throwable30);
        java.io.IOException iOException32 = new java.io.IOException("#4#a4#", throwable30);
        java.io.IOException iOException33 = new java.io.IOException(throwable30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 1.0f, iOException33, false, 100, strBuilder36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.appendWithSeparators(objArray37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceFirst("java.io.IOException: StrTokenizer[", "#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder22.append(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.append(" \nStrTokenizer[#4#a4#]1.0java.io.IOExceptionfalse1001.035.0", 0, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.deleteFirst('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder44.replaceFirst(strMatcher52, "java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder44.deleteCharAt(52);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test15354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15354");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        int int29 = strBuilder19.indexOf(strMatcher27);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher27, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer4.setDelimiterMatcher(strMatcher42);
        int int45 = strTokenizer4.nextIndex();
        java.lang.String[] strArray46 = strTokenizer4.getTokenArray();
        int int47 = strTokenizer4.size();
        java.lang.String str48 = strTokenizer4.getContent();
        int int49 = strTokenizer4.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test15355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15355");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#java.io.IOException: 10.0\n102\n", "ceptionfalse1000org.apache.commons.lang3.text.");
    }

    @Test
    public void test15356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15356");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.append(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln((float) 65);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str10 = strBuilder9.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.deleteAll(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.appendln((java.lang.Object) strBuilder11);
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.appendAll(strItor17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder8.appendln(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test15357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15357");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        int int38 = strList23.indexOf((java.lang.Object) strTokenizer33);
        int int39 = strTokenizer33.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer33);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst('3');
        java.lang.StringBuffer stringBuffer43 = strBuilder40.toStringBuffer();
        int int44 = strBuilder40.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll("se1001.0\n35.0\ntrue", "0.01221");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(stringBuffer43);
        org.junit.Assert.assertEquals(stringBuffer43.toString(), "aa4#4\n###############################1");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 38 + "'", int44 == 38);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test15358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15358");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        boolean boolean4 = strTokenizer1.hasNext();
        java.util.List<java.lang.String> strList5 = strTokenizer1.getTokenList();
        java.lang.Object[] objArray6 = strList5.toArray();
        java.lang.Object[] objArray7 = strList5.toArray();
        // The following exception was thrown during execution in test generation
        try {
            strList5.add(25, " 10\n00");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 25, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
    }

    @Test
    public void test15359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15359");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        int int11 = strBuilder5.lastIndexOf('a');
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("hi!");
        boolean boolean29 = strTokenizer26.isIgnoreEmptyTokens();
        java.lang.String str30 = strTokenizer26.next();
        int int31 = strList16.indexOf((java.lang.Object) strTokenizer26);
        java.util.ListIterator<java.lang.String> strItor33 = strList16.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor34 = strList16.iterator();
        java.lang.String[] strArray38 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        boolean boolean52 = strTokenizer49.isIgnoreEmptyTokens();
        java.lang.String str53 = strTokenizer49.next();
        int int54 = strList39.indexOf((java.lang.Object) strTokenizer49);
        boolean boolean55 = strList16.addAll((java.util.Collection<java.lang.String>) strList39);
        java.util.ListIterator<java.lang.String> strItor56 = strList39.listIterator();
        boolean boolean58 = strList39.add("");
        java.util.ListIterator<java.lang.String> strItor59 = strList39.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder5.appendSeparator("1false0\n", "100.0false");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.appendFixedWidthPadRight(70, (int) (byte) -1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.reverse();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test15360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15360");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        int int15 = strBuilder5.lastIndexOf("aa##", 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.deleteAll('c');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        int int26 = strBuilder20.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.setLength(1);
        int int34 = strBuilder31.indexOf('#', 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.setCharAt(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendSeparator('\000', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder5.append(strBuilder37);
        int int42 = strBuilder41.length();
        int int45 = strBuilder41.lastIndexOf(" ###################################", 22);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 25 + "'", int42 == 25);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test15361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15361");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        java.util.Iterator<java.lang.String> strItor8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendAll(strItor8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.setNewLineText("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendPadding(2, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendPadding(61, ' ');
        int int20 = strBuilder14.indexOf(' ', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.deleteAll('3');
        int int24 = strBuilder14.indexOf("35.0");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test15362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15362");
        java.lang.String[] strArray2 = new java.lang.String[] { "0\nzinekoTrtSeslaf ", "a" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        boolean boolean5 = strList3.isEmpty();
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        java.lang.String str24 = strTokenizer20.next();
        int int25 = strList10.indexOf((java.lang.Object) strTokenizer20);
        java.util.ListIterator<java.lang.String> strItor27 = strList10.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor28 = strList10.iterator();
        java.lang.String[] strArray32 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        java.lang.String str47 = strTokenizer43.next();
        int int48 = strList33.indexOf((java.lang.Object) strTokenizer43);
        boolean boolean49 = strList10.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.ListIterator<java.lang.String> strItor50 = strList33.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        int int61 = strBuilder51.indexOf(strMatcher59);
        int int62 = strList33.indexOf((java.lang.Object) strBuilder51);
        int int63 = strList33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int67 = strBuilder64.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.setNullText("");
        int int76 = strList33.lastIndexOf((java.lang.Object) strBuilder75);
        boolean boolean77 = strList3.removeAll((java.util.Collection<java.lang.String>) strList33);
        java.util.ListIterator<java.lang.String> strItor78 = strList3.listIterator();
        int int79 = strItor78.nextIndex();
        strItor78.add("1.0jv.io.IOExceptionflse1001.0");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 3 + "'", int63 == 3);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test15363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15363");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        java.lang.String str32 = strBuilder5.midString((int) ' ', 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder5.deleteFirst(" 10\n");
        int int36 = strBuilder34.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendPadding((int) 'f', 'c');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        int int42 = strBuilder39.indexOf(strMatcher40, 32);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test15364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15364");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        boolean boolean7 = strBuilder2.endsWith("trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendFixedWidthPadLeft((int) ' ', 34, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        java.lang.Throwable throwable21 = null;
        java.io.IOException iOException22 = new java.io.IOException("", throwable21);
        java.io.IOException iOException23 = new java.io.IOException("#4#a4#", throwable21);
        java.io.IOException iOException24 = new java.io.IOException(throwable21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1.0f, iOException24, false, 100, strBuilder27 };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.appendWithSeparators(objArray28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        java.lang.String str36 = strBuilder34.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder17.append((java.lang.CharSequence) str36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.ensureCapacity((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((long) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder13.append(strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder13.appendSeparator('\000');
        int int49 = strBuilder13.lastIndexOf('j', 80);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 40 + "'", int49 == 40);
    }

    @Test
    public void test15365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15365");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.String[] strArray35 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean49 = strTokenizer46.isIgnoreEmptyTokens();
        java.lang.String str50 = strTokenizer46.next();
        int int51 = strList36.indexOf((java.lang.Object) strTokenizer46);
        java.util.ListIterator<java.lang.String> strItor53 = strList36.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor54 = strList36.iterator();
        java.lang.String[] strArray58 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("hi!");
        boolean boolean72 = strTokenizer69.isIgnoreEmptyTokens();
        java.lang.String str73 = strTokenizer69.next();
        int int74 = strList59.indexOf((java.lang.Object) strTokenizer69);
        boolean boolean75 = strList36.addAll((java.util.Collection<java.lang.String>) strList59);
        strList59.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder31.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList59, "");
        java.io.Reader reader79 = strBuilder31.asReader();
        reader79.reset();
        boolean boolean81 = reader79.ready();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#4#a4#" + "'", str50, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(reader79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test15366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15366");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasNext();
        java.util.List<java.lang.String> strList12 = strTokenizer8.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream13 = strList12.parallelStream();
        java.lang.String str16 = strList12.set((int) (byte) 0, "ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        java.util.stream.Stream<java.lang.String> strStream17 = strList12.parallelStream();
        boolean boolean18 = strList12.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = strList12.remove(38);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 38, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#4#a4#" + "'", str16, "#4#a4#");
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test15367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15367");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder17.replace(strMatcher22, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int29 = strBuilder11.lastIndexOf(strMatcher22, (int) (short) 100);
        int int31 = strBuilder6.lastIndexOf(strMatcher22, 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendln(strBuilder38, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        java.lang.String str45 = strBuilder44.getNullText();
        char[] charArray47 = new char[] { 'a' };
        char[] charArray48 = strBuilder44.getChars(charArray47);
        char[] charArray53 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray54 = strBuilder44.getChars(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder44.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder41.append(strBuilder56, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder41.appendSeparator('4', '1');
        boolean boolean63 = strBuilder6.equals((java.lang.Object) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder6.appendPadding((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.setNewLineText("100.0zinekoTrtSeslaf1");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test15368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15368");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        int int20 = strBuilder14.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append("#4#a4#");
        java.lang.String str31 = strBuilder24.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder37.reverse();
        java.lang.StringBuffer stringBuffer69 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.append(stringBuffer69, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder23.append(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder9.appendln(stringBuffer69);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder9.deleteFirst(strMatcher76);
        java.io.Reader reader78 = strBuilder77.asReader();
        java.nio.CharBuffer charBuffer79 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int80 = reader78.read(charBuffer79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(reader78);
    }

    @Test
    public void test15369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15369");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append("#4#a4#", 4, 2);
        java.lang.String str9 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.reverse();
        boolean boolean12 = strBuilder2.endsWith("10\n100.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test15370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15370");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset("100.0false");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer35);
    }

    @Test
    public void test15371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15371");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        char[] charArray48 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.appendln(charArray48);
        int int53 = strBuilder50.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder38.append(strBuilder50);
        java.lang.String str60 = strBuilder38.substring(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder38.append((long) '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1" + "'", str60, ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test15372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15372");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.trim();
        java.lang.Object[] objArray39 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendAll(objArray39);
        char[] charArray41 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.append(charArray41);
        boolean boolean44 = strBuilder42.startsWith("java.io.IOException: StrTokenizer[not tokenized yet]");
        java.lang.Throwable throwable47 = null;
        java.io.IOException iOException48 = new java.io.IOException("", throwable47);
        java.io.IOException iOException49 = new java.io.IOException("#4#a4#", throwable47);
        java.io.IOException iOException50 = new java.io.IOException(throwable47);
        java.lang.Throwable[] throwableArray51 = iOException50.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder42.appendWithSeparators((java.lang.Object[]) throwableArray51, "0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.append(35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.replace(71, 27, "");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test15373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15373");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append("#4#a4#");
        java.lang.String str17 = strBuilder10.leftString((int) (short) 100);
        int int19 = strBuilder10.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String str20 = strBuilder10.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder10.append((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        boolean boolean27 = strBuilder26.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        int int38 = strMatcher29.isMatch(charArray36, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.append(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append("#4#a4#");
        java.lang.String str47 = strBuilder40.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.append(false);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("hi!");
        boolean boolean69 = strTokenizer66.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder53.appendFixedWidthPadRight((java.lang.Object) strTokenizer66, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int76 = strBuilder73.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendln((int) (short) 10);
        boolean boolean83 = strBuilder53.equalsIgnoreCase(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder53.reverse();
        java.lang.StringBuffer stringBuffer85 = strBuilder84.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder40.append(stringBuffer85, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder26.append(stringBuffer85, 6, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder10.appendln(stringBuffer85);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder3.append(stringBuffer85);
        java.util.stream.IntStream intStream94 = strBuilder93.chars();
        java.lang.String str96 = strBuilder93.substring(16);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(stringBuffer85);
        org.junit.Assert.assertEquals(stringBuffer85.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(intStream94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "slaf " + "'", str96, "slaf ");
    }

    @Test
    public void test15374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15374");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append(stringBuffer10);
        int int13 = strBuilder9.indexOf("a4 4");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        java.lang.Throwable throwable21 = null;
        java.io.IOException iOException22 = new java.io.IOException("", throwable21);
        java.io.IOException iOException23 = new java.io.IOException("#4#a4#", throwable21);
        java.io.IOException iOException24 = new java.io.IOException(throwable21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1.0f, iOException24, false, 100, strBuilder27 };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.appendWithSeparators(objArray28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendln(10L);
        int int46 = strBuilder40.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder37.appendln(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str57 = strTokenizer56.getContent();
        char[] charArray63 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer56.reset(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, "a");
        java.lang.String[] strArray68 = strTokenizer67.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder54.appendAll((java.lang.Object[]) strArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder9.appendAll((java.lang.Object[]) strArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln((int) '4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test15375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15375");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.write("#4#a4#", 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        writer9.write(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray57 = strBuilder49.getChars(charArray55);
        writer9.write(charArray55);
        writer9.write("StrTokenizer[not tokenized yet]", 0, (int) (byte) 0);
        writer9.write("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        java.io.Writer writer66 = writer9.append('f');
        writer9.write(109);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(writer66);
    }

    @Test
    public void test15376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15376");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append("#4#a4#");
        boolean boolean32 = strBuilder25.equals(strBuilder31);
        int int34 = strBuilder31.indexOf(" 10\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.setCharAt(54, 'c');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 54");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test15377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15377");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder18.ensureCapacity(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator(" \nStrTokenizer[#4#a4#]1.0java.io.IOExceptionfalse1001.035.0", (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.setNewLineText("aa");
        int int38 = strBuilder34.lastIndexOf('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.deleteAll("a4a4");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 87 + "'", int38 == 87);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test15378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15378");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.deleteAll(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.append((float) (byte) 0);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int57 = strBuilder52.indexOf(strMatcher55, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.replaceFirst(strMatcher55, "100.0false\n");
        int int62 = strBuilder28.lastIndexOf(strMatcher55, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder18.replaceAll(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator('4', 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln((long) 51);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln(false);
        char[] charArray78 = strBuilder77.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder69.getChars(45, 31, charArray78, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "false\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "false\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[f, a, l, s, e, \n]");
    }

    @Test
    public void test15379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15379");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        int int20 = strBuilder10.indexOf(strMatcher18);
        int int22 = strBuilder9.indexOf(strMatcher18, (int) (short) 10);
        java.lang.String str25 = strBuilder9.midString(3, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendln((long) (byte) 0);
        char[] charArray28 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "100.00\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "100.00\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[1, 0, 0, ., 0, 0, \n]");
    }

    @Test
    public void test15380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15380");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        int int11 = strBuilder5.lastIndexOf('a');
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("hi!");
        boolean boolean29 = strTokenizer26.isIgnoreEmptyTokens();
        java.lang.String str30 = strTokenizer26.next();
        int int31 = strList16.indexOf((java.lang.Object) strTokenizer26);
        java.util.ListIterator<java.lang.String> strItor33 = strList16.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor34 = strList16.iterator();
        java.lang.String[] strArray38 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        boolean boolean52 = strTokenizer49.isIgnoreEmptyTokens();
        java.lang.String str53 = strTokenizer49.next();
        int int54 = strList39.indexOf((java.lang.Object) strTokenizer49);
        boolean boolean55 = strList16.addAll((java.util.Collection<java.lang.String>) strList39);
        java.util.ListIterator<java.lang.String> strItor56 = strList39.listIterator();
        boolean boolean58 = strList39.add("");
        java.util.ListIterator<java.lang.String> strItor59 = strList39.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        boolean boolean62 = strList39.add(" falsezinekoTrtSeslaf \n10.0");
        java.util.stream.Stream<java.lang.String> strStream63 = strList39.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator64 = strList39.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = strList39.set((int) '0', "4#-1133333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 48, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertNotNull(strSpliterator64);
    }

    @Test
    public void test15381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15381");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.setCharAt(0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt((int) '0');
        boolean boolean46 = strBuilder42.contains('I');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder42.asTokenizer();
        boolean boolean48 = strTokenizer47.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test15382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15382");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.append(stringBuffer4, (int) '4', 10);
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.setNullText("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setLength(19);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendSeparator(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test15383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15383");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder9.setNullText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((long) 63);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.minimizeCapacity();
        boolean boolean53 = strBuilder37.equalsIgnoreCase(strBuilder52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder37.appendln("#", 106, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test15384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15384");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        writer9.write((int) (short) 1);
        writer9.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        writer9.write(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        java.lang.String str25 = strBuilder24.getNullText();
        char[] charArray27 = new char[] { 'a' };
        char[] charArray28 = strBuilder24.getChars(charArray27);
        char[] charArray33 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray34 = strBuilder24.getChars(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a', '\000');
        writer9.write(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        int int49 = strBuilder39.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendPadding((int) '#', '#');
        int int54 = strBuilder52.indexOf("1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        int int57 = strBuilder52.lastIndexOf("#a4#-1", 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        java.lang.String str61 = strBuilder60.getNullText();
        char[] charArray63 = new char[] { 'a' };
        char[] charArray64 = strBuilder60.getChars(charArray63);
        char[] charArray69 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray70 = strBuilder60.getChars(charArray69);
        java.io.Reader reader71 = strBuilder60.asReader();
        reader71.mark((int) (byte) 0);
        boolean boolean74 = reader71.markSupported();
        boolean boolean75 = reader71.markSupported();
        boolean boolean76 = reader71.ready();
        reader71.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream79 = strBuilder78.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        boolean boolean86 = strBuilder83.equals(strBuilder85);
        char[] charArray87 = strBuilder83.toCharArray();
        int int88 = reader71.read(charArray87);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder52.appendln(charArray87);
        writer9.write(charArray87);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(intStream79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test15385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15385");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendPadding((int) (short) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.appendln(strBuilder9, 60, 21);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendFixedWidthPadLeft(37, 206, 'I');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        java.lang.Throwable throwable25 = null;
        java.io.IOException iOException26 = new java.io.IOException("", throwable25);
        java.io.IOException iOException27 = new java.io.IOException("#4#a4#", throwable25);
        java.io.IOException iOException28 = new java.io.IOException(throwable25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1.0f, iOException28, false, 100, strBuilder31 };
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendWithSeparators(objArray32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendPadding(4, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.ensureCapacity(66);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        boolean boolean63 = strTokenizer60.isIgnoreEmptyTokens();
        int int64 = strTokenizer60.nextIndex();
        int int65 = strTokenizer60.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer60.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer60.getTrimmerMatcher();
        int int70 = strBuilder46.indexOf(strMatcher68, 18);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(" falseStrTokeniz");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n", strMatcher68, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder16.replaceFirst(strMatcher68, "java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder78.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.appendln(strBuilder85, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder84.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder90.insert(2, (java.lang.Object) strBuilder95);
        char[] charArray97 = strBuilder90.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder75.append(charArray97);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(charArray97);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray97), "10\nhi!1.0java.io.IOExceptionfalse1001.0\n35.0\nhi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray97), "10\nhi!1.0java.io.IOExceptionfalse1001.0\n35.0\nhi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray97), "[1, 0, \n, h, i, !, 1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, h, i, !]");
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test15386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15386");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        boolean boolean24 = strTokenizer21.isIgnoreEmptyTokens();
        java.lang.String str25 = strTokenizer21.next();
        int int26 = strList11.indexOf((java.lang.Object) strTokenizer21);
        java.util.ListIterator<java.lang.String> strItor28 = strList11.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor29 = strList11.iterator();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("hi!");
        boolean boolean47 = strTokenizer44.isIgnoreEmptyTokens();
        java.lang.String str48 = strTokenizer44.next();
        int int49 = strList34.indexOf((java.lang.Object) strTokenizer44);
        boolean boolean50 = strList11.addAll((java.util.Collection<java.lang.String>) strList34);
        java.util.ListIterator<java.lang.String> strItor51 = strList34.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        int int62 = strBuilder52.indexOf(strMatcher60);
        int int63 = strList34.indexOf((java.lang.Object) strBuilder52);
        int int64 = strList34.size();
        java.lang.Object[] objArray65 = strList34.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder5.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder5.appendSeparator("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.append(15);
        boolean boolean72 = strBuilder68.contains("java.");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.append((double) (byte) 0);
        char[] charArray75 = strBuilder74.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4#a4#" + "'", str25, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#4#a4#" + "'", str48, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "falsejava.io.IOException150.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "falsejava.io.IOException150.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[f, a, l, s, e, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, 1, 5, 0, ., 0]");
    }

    @Test
    public void test15387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15387");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.setNewLineText("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        java.lang.Throwable throwable15 = null;
        java.io.IOException iOException16 = new java.io.IOException("", throwable15);
        java.io.IOException iOException17 = new java.io.IOException("#4#a4#", throwable15);
        java.io.IOException iOException18 = new java.io.IOException(throwable15);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1.0f, iOException18, false, 100, strBuilder21 };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendWithSeparators(objArray22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendPadding(52, '1');
        java.lang.String str40 = strBuilder36.getNewLineText();
        java.lang.StringBuffer stringBuffer41 = strBuilder36.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder7.appendln(stringBuffer41);
        java.lang.StringBuffer stringBuffer43 = strBuilder7.toStringBuffer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(stringBuffer41);
        org.junit.Assert.assertEquals(stringBuffer41.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n1111111111111111111111111111111111111111111111111111");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(stringBuffer43);
        org.junit.Assert.assertEquals(stringBuffer43.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n111111111111111111111111111111111111111111111111111110\n\n");
    }

    @Test
    public void test15388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15388");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        java.lang.Throwable throwable10 = null;
        java.io.IOException iOException11 = new java.io.IOException(throwable10);
        java.io.IOException iOException13 = new java.io.IOException("StrTokenizer[#4#a4#]");
        iOException11.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder6.appendWithSeparators((java.lang.Object[]) throwableArray15, ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((double) 66);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean24 = strTokenizer23.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        int int26 = strList25.size();
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("hi!");
        java.lang.String str38 = strTokenizer37.nextToken();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        boolean boolean41 = strList39.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str44 = strTokenizer43.getContent();
        boolean boolean45 = strList39.equals((java.lang.Object) strTokenizer43);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean47 = strList39.equals((java.lang.Object) strMatcher46);
        boolean boolean48 = strList25.addAll((java.util.Collection<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder52.appendAll((java.util.Iterator<java.lang.String>) strTokenizer64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer64, "");
        int int68 = strBuilder49.size();
        boolean boolean69 = strList39.remove((java.lang.Object) strBuilder49);
        boolean boolean71 = strList39.add("aa4#4");
        java.util.ListIterator<java.lang.String> strItor72 = strList39.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder20.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList39, "1.0java.io.IOEx");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder20.appendFixedWidthPadRight(10, 132, 'I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "#4#a4#" + "'", str38, "#4#a4#");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test15389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15389");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadLeft(0, 0, ' ');
        int int11 = strBuilder9.indexOf("java.io.IOException: StrTokenizer[not tokenized yet]");
        java.lang.String str14 = strBuilder9.midString(100, 95);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.append((long) 6);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test15390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15390");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        char[] charArray16 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray17 = strBuilder7.getChars(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.appendln("java.io.IOException: ");
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder19.replaceFirst(strMatcher30, "#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer4.setTrimmerMatcher(strMatcher30);
        java.util.List<java.lang.String> strList35 = strTokenizer34.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer34.add(" a10\na");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test15391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15391");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (short) -1);
        boolean boolean16 = reader13.ready();
        long long18 = reader13.skip((long) '4');
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        java.lang.String str30 = strTokenizer29.nextToken();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        boolean boolean33 = strList31.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str36 = strTokenizer35.getContent();
        boolean boolean37 = strList31.equals((java.lang.Object) strTokenizer35);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean39 = strList31.equals((java.lang.Object) strMatcher38);
        java.util.stream.Stream<java.lang.String> strStream40 = strList31.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.insert(0, (double) (byte) 100);
        java.io.Reader reader48 = strBuilder47.asReader();
        boolean boolean49 = strList31.remove((java.lang.Object) reader48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int53 = strBuilder50.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.deleteFirst(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.minimizeCapacity();
        char[] charArray74 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int78 = strBuilder75.indexOf(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int84 = strBuilder81.indexOf(strMatcher83);
        int int85 = strBuilder75.indexOf(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher83);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder66.replace(strMatcher83, "", 2, (int) (short) 100, 10);
        char[] charArray94 = strBuilder66.toCharArray((int) (byte) 0, (int) (byte) 0);
        int int95 = reader48.read(charArray94);
        int int96 = reader13.read(charArray94);
        reader13.reset();
        java.nio.CharBuffer charBuffer98 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int99 = reader13.read(charBuffer98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test15392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15392");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int37 = strTokenizer36.nextIndex();
        boolean boolean38 = strTokenizer36.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll('a', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.insert((int) '\000', '\000');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test15393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15393");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        java.io.Writer writer56 = writer37.append('#');
        writer56.write("a");
        writer56.flush();
        writer56.write(50);
        writer56.write("#4#a4#1false0\nfalse");
        java.lang.Class<?> wildcardClass64 = writer56.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test15394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15394");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        java.util.stream.IntStream intStream16 = strBuilder2.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendSeparator('#');
        boolean boolean19 = strBuilder18.isEmpty();
        char[] charArray20 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.appendln(false);
        char[] charArray26 = strBuilder18.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[\n, f, a, l, s, e, \n]");
    }

    @Test
    public void test15395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15395");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        int int14 = strBuilder12.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendSeparator('.', 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test15396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15396");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.append(strBuilder24, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.appendln((int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder9.deleteAll("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test15397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15397");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.append((java.lang.CharSequence) strBuilder22);
        int int27 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.deleteFirst(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        char[] charArray52 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        int int63 = strBuilder53.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder44.replace(strMatcher61, "", 2, (int) (short) 100, 10);
        char[] charArray72 = strBuilder44.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("hi!");
        java.lang.String str77 = strBuilder76.getNullText();
        char[] charArray79 = new char[] { 'a' };
        char[] charArray80 = strBuilder76.getChars(charArray79);
        int int84 = strMatcher73.isMatch(charArray80, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer86.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer86.setEmptyTokenAsNull(true);
        char[] charArray90 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer86.setTrimmerMatcher(strMatcher93);
        int int96 = strBuilder0.indexOf(strMatcher93, (int) (byte) -1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[]");
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test15398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15398");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.write("0java.io.IOExceptionfalse100", 4, 4);
        writer9.flush();
        java.io.Writer writer31 = writer9.append('4');
        writer9.close();
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray39);
        writer9.write(charArray39);
        java.io.Writer writer47 = writer9.append('e');
        writer9.write(".IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n-1.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(writer47);
    }

    @Test
    public void test15399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15399");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.clear();
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        int int24 = strMatcher15.isMatch(charArray22, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.append(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.appendAll((java.util.Iterator<java.lang.String>) strTokenizer30);
        int int34 = strBuilder3.lastIndexOf(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32", 66);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        java.lang.String str52 = strBuilder51.getNullText();
        char[] charArray54 = new char[] { 'a' };
        char[] charArray55 = strBuilder51.getChars(charArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int71 = strBuilder68.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.deleteFirst(strMatcher70);
        int int73 = strBuilder51.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder35.deleteFirst(strMatcher70);
        boolean boolean75 = strBuilder3.equals((java.lang.Object) strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.replaceFirst('I', 'c');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test15400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15400");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int14 = strBuilder11.lastIndexOf(strMatcher12, (int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setIgnoreEmptyTokens(false);
        java.lang.String str19 = strTokenizer16.nextToken();
        boolean boolean20 = strTokenizer16.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer21);
        java.lang.String str25 = strBuilder22.midString(21, 4);
        int int28 = strBuilder22.lastIndexOf('a', 206);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder22.append("StrTokenizer[a]", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        java.io.IOException iOException42 = new java.io.IOException("#4#a4#", throwable40);
        java.io.IOException iOException43 = new java.io.IOException(throwable40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1.0f, iOException43, false, 100, strBuilder46 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendWithSeparators(objArray47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.insert(16, (double) 4L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder32.append(strBuilder59, (int) (byte) -1, 118);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test15401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15401");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (byte) 0);
        int int35 = strBuilder29.lastIndexOf("0.012true104444444444444444444444444444444444444444444444  \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.appendln(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder43.replace(strMatcher48, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        java.util.stream.IntStream intStream54 = strBuilder43.codePoints();
        boolean boolean55 = strBuilder43.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder43.append(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        java.lang.String str61 = strBuilder60.getNullText();
        char[] charArray63 = new char[] { 'a' };
        char[] charArray64 = strBuilder60.getChars(charArray63);
        char[] charArray69 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray70 = strBuilder60.getChars(charArray69);
        java.io.Reader reader71 = strBuilder60.asReader();
        reader71.mark(10);
        reader71.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.clear();
        char[] charArray84 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder77.appendln(charArray84);
        int int87 = reader71.read(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder57.appendln(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strBuilder57.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder57.appendSeparator("StrTokenizer[#4#, 4#]");
        java.io.Reader reader95 = strBuilder94.asReader();
        int int96 = strBuilder94.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder37.append((java.lang.CharSequence) strBuilder94);
        java.lang.String str98 = strBuilder97.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader71);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(reader95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 34 + "'", int96 == 34);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "1a0\n\n0\n0.0\n 10\n0.0aa4#4\nStrTokenizer[#4#, 4#]" + "'", str98, "1a0\n\n0\n0.0\n 10\n0.0aa4#4\nStrTokenizer[#4#, 4#]");
    }

    @Test
    public void test15402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15402");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        java.io.Reader reader5 = strBuilder2.asReader();
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        int int17 = reader5.read(charArray12);
        int int19 = strMatcher1.isMatch(charArray12, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, "ptionfalse100");
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test15403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15403");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder16.indexOf(strMatcher19, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "eslf\n\n181111");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher26);
        boolean boolean28 = strTokenizer27.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test15404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15404");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoredChar('4');
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setQuoteChar('a');
        java.lang.String str18 = strTokenizer17.previousToken();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str14, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
    }

    @Test
    public void test15405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15405");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        int int17 = strBuilder14.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder20.appendSeparator('4', 0);
        boolean boolean34 = strBuilder14.equals(strBuilder33);
        int int35 = strBuilder33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.setNullText("59.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer40.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 6 + "'", int35 == 6);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
    }

    @Test
    public void test15406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15406");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a");
        int int40 = strBuilder36.indexOf(strMatcher38, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setIgnoreEmptyTokens(false);
        boolean boolean45 = strTokenizer42.hasPrevious();
        java.util.List<java.lang.String> strList46 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.appendln((java.lang.Object) strTokenizer42);
        java.io.Writer writer48 = strBuilder47.asWriter();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(writer48);
    }

    @Test
    public void test15407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15407");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        int int4 = strTokenizer2.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        char[] charArray14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(charArray14);
        boolean boolean16 = strBuilder13.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        boolean boolean22 = strBuilder21.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str28 = strBuilder27.getNullText();
        char[] charArray30 = new char[] { 'a' };
        char[] charArray31 = strBuilder27.getChars(charArray30);
        int int33 = strMatcher24.isMatch(charArray31, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.append(charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder13.insert((int) (byte) 1, charArray31);
        int int37 = strMatcher5.isMatch(charArray31, (int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '.', '\n');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test15408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15408");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int14 = strBuilder11.lastIndexOf(strMatcher12, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append("10");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendln(43L);
        java.util.stream.IntStream intStream19 = strBuilder11.chars();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
    }

    @Test
    public void test15409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15409");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.replaceAll("10\n\n", "#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("java.io.IOException", "1");
        java.util.stream.IntStream intStream18 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(false);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(intStream18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test15410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15410");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert((int) (byte) 0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.setNullText("aa");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln(40);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test15411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15411");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendSeparator("o.IOExceptio", (int) 'I');
        int int19 = strBuilder14.lastIndexOf("va.io.IOExceptionfalse1001.");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int43 = strBuilder38.indexOf(strMatcher41, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.replace(strMatcher41, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder49.appendAll((java.util.Iterator<java.lang.String>) strTokenizer61);
        java.lang.String str65 = strBuilder49.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendln(10L);
        int int74 = strBuilder68.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder68.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder68.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder49.append((java.lang.Object) strBuilder80);
        boolean boolean82 = strBuilder30.equals((java.lang.Object) strBuilder81);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        int int85 = strBuilder81.indexOf(strMatcher83, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder81.appendSeparator(" \n", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.appendSeparator("java.", (int) (short) -1);
        java.lang.StringBuffer stringBuffer92 = strBuilder91.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder14.append(stringBuffer92);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(stringBuffer92);
        org.junit.Assert.assertEquals(stringBuffer92.toString(), "#4#a4#java.io.IOException: ");
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test15412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15412");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("a10\n", 'e', '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString(".0\n");
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test15413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15413");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        java.lang.String str12 = strBuilder7.rightString((int) 'a');
        int int15 = strBuilder7.indexOf("1false0\nfalse", 27);
        java.lang.String str17 = strBuilder7.rightString(6);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.replaceAll("\nzinekoTrtSeslaf \n", "4");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadRight(3, 53, '#');
        boolean boolean26 = strBuilder24.endsWith("j");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10\n\n" + "'", str12, "10\n\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10\n\n" + "'", str17, "10\n\n");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test15414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15414");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        int int27 = strList12.indexOf((java.lang.Object) charArray25);
        strList12.clear();
        java.util.ListIterator<java.lang.String> strItor29 = strList12.listIterator();
        java.util.Iterator<java.lang.String> strItor30 = strList12.iterator();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strItor30);
    }

    @Test
    public void test15415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15415");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int15 = strBuilder12.lastIndexOf(strMatcher13, (int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("10\n100.0", strMatcher13);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer16.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test15416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15416");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int34 = strTokenizer33.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer33.setTrimmerMatcher(strMatcher36);
        boolean boolean38 = strTokenizer33.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher39);
        java.lang.String str41 = strTokenizer40.next();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "a4 4" + "'", str41, "a4 4");
    }

    @Test
    public void test15417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15417");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("100.0false\n");
        boolean boolean10 = strBuilder7.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int14 = strBuilder11.indexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.deleteFirst(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        char[] charArray35 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        int int46 = strBuilder36.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder27.replace(strMatcher44, "", 2, (int) (short) 100, 10);
        char[] charArray55 = strBuilder27.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strBuilder27.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterChar('0');
        java.util.List<java.lang.String> strList59 = strTokenizer58.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder7.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList59, "10\n ");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((long) 34);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test15418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15418");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        int int9 = strBuilder3.lastIndexOf("1false0\n", 59);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        int int22 = strTokenizer18.nextIndex();
        int int23 = strTokenizer18.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer18.setIgnoreEmptyTokens(false);
        int int26 = strTokenizer18.previousIndex();
        java.lang.String str27 = strTokenizer18.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder46.replace(strMatcher51, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int58 = strBuilder40.lastIndexOf(strMatcher51, (int) (short) 100);
        int int60 = strBuilder35.lastIndexOf(strMatcher51, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer28.setDelimiterMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder3.deleteFirst(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder3.setLength(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder3.appendSeparator("0\nfalse32.0");
        boolean boolean67 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.deleteAll(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder68.append((double) '4');
        char[] charArray77 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append(charArray77);
        java.util.stream.IntStream intStream79 = strBuilder76.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder76.appendSeparator(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder3.appendln(strBuilder82);
        java.lang.Class<?> wildcardClass84 = strBuilder82.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#a4#" + "'", str27, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(intStream79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test15419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15419");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((long) '#');
        java.util.stream.IntStream intStream34 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.appendFixedWidthPadLeft((java.lang.Object) strBuilder31, 32, '1');
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        int int65 = strBuilder55.indexOf(strMatcher63);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher63, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder31.appendln(charArray49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder31.deleteCharAt(77);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 77");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test15420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15420");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.I", '.', '0');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        java.lang.String str11 = strBuilder10.getNullText();
        char[] charArray13 = new char[] { 'a' };
        char[] charArray14 = strBuilder10.getChars(charArray13);
        int int18 = strMatcher7.isMatch(charArray14, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer6.setTrimmerMatcher(strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer3.setIgnoredMatcher(strMatcher20);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.set("zinekoTrtSeslaf ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test15421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15421");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        int int10 = strBuilder6.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln(10L);
        int int24 = strBuilder18.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder18.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendSeparator(".0jav");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll(' ');
        boolean boolean39 = strBuilder15.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int42 = strTokenizer41.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer41.setTrimmerMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("4", strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.replaceFirst(strMatcher44, "0\nfalse32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("35\n10\n\n", strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher53);
        int int56 = strTokenizer55.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer55.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer49.setDelimiterMatcher(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
    }

    @Test
    public void test15422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15422");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.reset();
        boolean boolean15 = reader13.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        java.lang.String str22 = strBuilder21.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.deleteFirst(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        char[] charArray47 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        int int58 = strBuilder48.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder39.replace(strMatcher56, "", 2, (int) (short) 100, 10);
        char[] charArray67 = strBuilder39.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        java.lang.String str72 = strBuilder71.getNullText();
        char[] charArray74 = new char[] { 'a' };
        char[] charArray75 = strBuilder71.getChars(charArray74);
        int int79 = strMatcher68.isMatch(charArray75, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder21.append(charArray67);
        int int83 = reader13.read(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, 'e', '\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setIgnoredChar('a');
        java.lang.String[] strArray89 = strTokenizer88.getTokenArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test15423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15423");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.String[] strArray8 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        java.lang.String str23 = strTokenizer19.next();
        int int24 = strList9.indexOf((java.lang.Object) strTokenizer19);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        int int47 = strBuilder37.indexOf(strMatcher45);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher45, strMatcher60);
        boolean boolean62 = strList9.equals((java.lang.Object) strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        java.util.stream.IntStream intStream69 = strBuilder68.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int72 = strBuilder68.lastIndexOf(strMatcher71);
        boolean boolean73 = strList9.remove((java.lang.Object) strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer1.setTrimmerMatcher(strMatcher71);
        java.lang.String str75 = strTokenizer74.next();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#4#a4#" + "'", str23, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(intStream69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
    }

    @Test
    public void test15424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15424");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.deleteFirst("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendSeparator("1false0\n1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.deleteFirst('a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test15425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15425");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        int int26 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer25.getIgnoredMatcher();
        int int28 = strTokenizer25.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer25.setIgnoredChar(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test15426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15426");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        int int17 = strBuilder16.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append((double) 38);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(29);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test15427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15427");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int23 = strBuilder20.lastIndexOf(strMatcher21, (int) (short) 10);
        int int25 = strBuilder4.indexOf(strMatcher21, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder4.appendSeparator("a", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder4.append((long) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder4.appendPadding(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln((long) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln("true\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setQuoteChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str44 = strBuilder43.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str49 = strBuilder48.getNullText();
        char[] charArray51 = new char[] { 'a' };
        char[] charArray52 = strBuilder48.getChars(charArray51);
        int int56 = strMatcher45.isMatch(charArray52, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.replaceAll(strMatcher45, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer42.setTrimmerMatcher(strMatcher45);
        char[] charArray66 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int70 = strBuilder67.indexOf(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int76 = strBuilder73.indexOf(strMatcher75);
        int int77 = strBuilder67.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher75);
        char[] charArray85 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, strMatcher89);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer90.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer90.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer78.setIgnoredMatcher(strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer("100.01210", strMatcher45, strMatcher92);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder37.replace(strMatcher45, "java.io.IOException: java.io.IOException: ", 52, 76, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer93);
    }

    @Test
    public void test15428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15428");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("hi!");
        java.lang.String[] strArray15 = strTokenizer12.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("35\n10\n\n", "-1 #4#a4#-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendSeparator("#4#a4#java.io.IOException: 10.0\n-1        ");
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.clear();
        java.lang.Throwable throwable49 = null;
        java.io.IOException iOException50 = new java.io.IOException("", throwable49);
        java.io.IOException iOException51 = new java.io.IOException("#4#a4#", throwable49);
        java.io.IOException iOException52 = new java.io.IOException(throwable49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 1.0f, iOException52, false, 100, strBuilder55 };
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.appendWithSeparators(objArray56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder60.setLength((int) ' ');
        int int72 = strList26.lastIndexOf((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.appendSeparator(' ');
        char[] charArray77 = strBuilder74.toCharArray(13, 100);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst("hi!");
        java.lang.String str82 = strBuilder81.getNullText();
        char[] charArray84 = new char[] { 'a' };
        char[] charArray85 = strBuilder81.getChars(charArray84);
        int int89 = strMatcher78.isMatch(charArray85, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, ".0j");
        boolean boolean92 = strTokenizer91.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer91.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder74.deleteFirst(strMatcher93);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder21.deleteAll(strMatcher93);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder95.appendSeparator('c', 32);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "Exceptionfalse1001. ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "Exceptionfalse1001. ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, .,  ]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test15429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15429");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        boolean boolean16 = reader13.markSupported();
        reader13.close();
        int int18 = reader13.read();
        reader13.mark(49);
        boolean boolean21 = reader13.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        java.lang.String str37 = strBuilder36.getNullText();
        char[] charArray39 = new char[] { 'a' };
        char[] charArray40 = strBuilder36.getChars(charArray39);
        char[] charArray45 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray46 = strBuilder36.getChars(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.appendln(charArray45, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray45);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln((int) (short) 10);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getIgnoredMatcher();
        int int80 = strBuilder61.indexOf(strMatcher78, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher55, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "true\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4', ':');
        // The following exception was thrown during execution in test generation
        try {
            int int95 = reader13.read(charArray45, 23, 37);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test15430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15430");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String str19 = strBuilder18.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("10\n\n", "0\nzinekoTrtSeslaf ");
        int int26 = strBuilder21.lastIndexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.appendSeparator(".0j", "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((long) 1);
        int int35 = strBuilder29.indexOf(" 10\n1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n", (int) '3');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.replace(strMatcher36, "false19.0", 20, 63, 59);
        int int43 = strBuilder29.indexOf("java.io.IOException:  10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder29.deleteAll(" 10\n0java.io.IOExceptionfalse100\n100.01");
        java.lang.String str47 = strBuilder45.leftString(73);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "aa4#4\n###############################1.0j1" + "'", str47, "aa4#4\n###############################1.0j1");
    }

    @Test
    public void test15431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15431");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer24 = strBuilder18.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.insert((int) '\000', (long) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(' ');
        boolean boolean30 = strBuilder29.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendPadding(105, '1');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(stringBuffer24);
        org.junit.Assert.assertEquals(stringBuffer24.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test15432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15432");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln((long) '#');
        java.util.stream.IntStream intStream26 = strBuilder23.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int42 = strBuilder39.lastIndexOf(strMatcher40, (int) (short) 10);
        int int44 = strBuilder23.indexOf(strMatcher40, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer16.setDelimiterMatcher(strMatcher40);
        boolean boolean46 = strTokenizer16.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer16.setQuoteChar('3');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strTokenizer48);
    }

    @Test
    public void test15433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15433");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder4.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('\000', 24);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        java.lang.String str21 = strBuilder20.getNullText();
        char[] charArray23 = new char[] { 'a' };
        char[] charArray24 = strBuilder20.getChars(charArray23);
        int int28 = strMatcher17.isMatch(charArray24, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str32 = strTokenizer31.getContent();
        char[] charArray38 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer31.reset(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "a");
        int int44 = strMatcher29.isMatch(charArray38, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder13.replace(strMatcher29, " ", (int) (byte) 1, (int) 'a', (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.reset();
        boolean boolean55 = strTokenizer54.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer54.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: \n01 false\n", strMatcher29, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(" falseStrTokenizaaaaaaaaaaaaaaaaaaaaaaaa100", strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMatcher56);
    }

    @Test
    public void test15434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15434");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        char[] charArray37 = strBuilder36.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 'e', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '3', '\n');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "zinekoTrtSeslaf ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "zinekoTrtSeslaf ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[z, i, n, e, k, o, T, r, t, S, e, s, l, a, f,  ]");
    }

    @Test
    public void test15435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15435");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.reset();
        long long16 = reader13.skip((long) 32);
        boolean boolean17 = reader13.ready();
        reader13.close();
        int int19 = reader13.read();
        long long21 = reader13.skip((long) 206);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test15436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15436");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        int int31 = strBuilder29.indexOf("100.01210\n");
        java.util.stream.IntStream intStream32 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.append("1.1", (int) (byte) 0, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        java.lang.Throwable throwable44 = null;
        java.io.IOException iOException45 = new java.io.IOException("", throwable44);
        java.io.IOException iOException46 = new java.io.IOException("#4#a4#", throwable44);
        java.io.IOException iOException47 = new java.io.IOException(throwable44);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1.0f, iOException47, false, 100, strBuilder50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder40.appendWithSeparators(objArray51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendPadding((int) (short) -1, '#');
        java.lang.StringBuffer stringBuffer67 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder36.append(stringBuffer67);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), " :noitpecxEOI.oi.avaj\n0.53\n0.1001eslafnoitpecxEOI.oi.avaj0.1");
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test15437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15437");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.lang.String str47 = strList26.get(1);
        strList26.add(1, "1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln((long) '#');
        java.util.stream.IntStream intStream59 = strBuilder56.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int75 = strBuilder72.lastIndexOf(strMatcher73, (int) (short) 10);
        int int77 = strBuilder56.indexOf(strMatcher73, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer51.setTrimmerMatcher(strMatcher73);
        java.util.List<java.lang.String> strList79 = strTokenizer78.getTokenList();
        java.util.ListIterator<java.lang.String> strItor80 = strList79.listIterator();
        boolean boolean81 = strList26.addAll((java.util.Collection<java.lang.String>) strList79);
        java.util.Spliterator<java.lang.String> strSpliterator82 = strList79.spliterator();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(intStream59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strSpliterator82);
    }

    @Test
    public void test15438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15438");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.String str33 = strBuilder31.rightString((int) (short) -1);
        java.lang.String str35 = strBuilder31.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoreEmptyTokens(false);
        int int42 = strTokenizer39.previousIndex();
        java.lang.Object obj43 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.append((java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.reverse();
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator("va.io.IOExceptionfalse1001.");
        java.io.Writer writer51 = writer9.append((java.lang.CharSequence) strBuilder48, (int) (byte) 0, 38);
        java.io.Writer writer53 = writer9.append('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(writer51);
        org.junit.Assert.assertNotNull(writer53);
    }

    @Test
    public void test15439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15439");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteAll("1.0java.io.IOExc\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test15440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15440");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        java.util.stream.IntStream intStream6 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int9 = strBuilder5.lastIndexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int24 = strBuilder21.lastIndexOf(strMatcher22, (int) (short) -1);
        boolean boolean25 = strBuilder5.contains(strMatcher22);
        java.io.Writer writer26 = strBuilder5.asWriter();
        java.lang.String[] strArray30 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        boolean boolean44 = strTokenizer41.isIgnoreEmptyTokens();
        java.lang.String str45 = strTokenizer41.next();
        int int46 = strList31.indexOf((java.lang.Object) strTokenizer41);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        java.lang.Throwable throwable54 = null;
        java.io.IOException iOException55 = new java.io.IOException("", throwable54);
        java.io.IOException iOException56 = new java.io.IOException("#4#a4#", throwable54);
        java.io.IOException iOException57 = new java.io.IOException(throwable54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 1.0f, iOException57, false, 100, strBuilder60 };
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.appendWithSeparators(objArray61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder65.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder65.setLength((int) ' ');
        int int77 = strList31.lastIndexOf((java.lang.Object) strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder5.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList31, "35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder5.insert((int) '#', (double) (short) -1);
        boolean boolean84 = strBuilder82.endsWith("aaaaaaaaaaaaaaaaaaaaaaaa100");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#4#a4#" + "'", str45, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test15441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15441");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        int int24 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, (int) '4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder11.replaceAll(" ", "1false0\n");
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher44, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.replaceFirst(strMatcher48, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadLeft(33, 30, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("hi!");
        java.lang.String str60 = strBuilder58.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        java.lang.String str64 = strBuilder63.getNullText();
        char[] charArray66 = new char[] { 'a' };
        char[] charArray67 = strBuilder63.getChars(charArray66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder58.append((java.lang.Object) strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.replaceAll('#', ' ');
        java.util.stream.IntStream intStream72 = strBuilder58.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder58.appendSeparator('#');
        boolean boolean75 = strBuilder74.isEmpty();
        char[] charArray76 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendln(charArray76);
        char[] charArray80 = strBuilder51.getChars(charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder51.insert((int) 'I', (float) 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceAll('0', ' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(intStream72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]111111111111111111111111111133");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]111111111111111111111111111133");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[3, 5, ., 0, \n, 4, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t, 1, f, a, l, s, e, 0, \n, t, o, k, e, n, i, z, e, d, 1, f, a, l, s, e, 0, \n, y, e, t, ], 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test15442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15442");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.deleteFirst(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder7.replaceAll(strMatcher24, "1false0\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        char[] charArray37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(charArray37);
        boolean boolean39 = strBuilder36.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.clear();
        boolean boolean45 = strBuilder44.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        java.lang.String str51 = strBuilder50.getNullText();
        char[] charArray53 = new char[] { 'a' };
        char[] charArray54 = strBuilder50.getChars(charArray53);
        int int56 = strMatcher47.isMatch(charArray54, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder44.append(charArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder36.insert((int) (byte) 1, charArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendln((int) (byte) 0);
        java.io.Reader reader63 = strBuilder58.asReader();
        reader63.reset();
        reader63.close();
        reader63.mark(46);
        reader63.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder28.appendFixedWidthPadLeft((java.lang.Object) reader63, 66, '\000');
        reader63.mark(93);
        boolean boolean74 = reader63.ready();
        java.nio.CharBuffer charBuffer75 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int76 = reader63.read(charBuffer75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test15443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15443");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(true);
        int int8 = strBuilder3.indexOf('1', 18);
        int int9 = strBuilder3.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.appendFixedWidthPadLeft((java.lang.Object) "ionfalse1001.0\n\n4\n", 0, 'j');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test15444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15444");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer21, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder11.deleteFirst("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append(" 10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.appendFixedWidthPadLeft(20, 100, '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test15445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15445");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.012true104444444444444444444444444444444444444444444444  \n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.setIgnoredMatcher(strMatcher14);
        java.lang.String str16 = strTokenizer11.next();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#4#" + "'", str16, "#4#");
    }

    @Test
    public void test15446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15446");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String str10 = strBuilder0.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.append((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        boolean boolean17 = strBuilder16.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        int int28 = strMatcher19.isMatch(charArray26, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.append(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append("#4#a4#");
        java.lang.String str37 = strBuilder30.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.append(false);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendFixedWidthPadRight((java.lang.Object) strTokenizer56, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendln((int) (short) 10);
        boolean boolean73 = strBuilder43.equalsIgnoreCase(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder43.reverse();
        java.lang.StringBuffer stringBuffer75 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder30.append(stringBuffer75, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder16.append(stringBuffer75, 6, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder0.appendln(stringBuffer75);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendSeparator('\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strBuilder84.asTokenizer();
        java.util.stream.IntStream intStream88 = strBuilder84.chars();
        char char90 = strBuilder84.charAt(0);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#4#a4#" + "'", str10, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(stringBuffer75);
        org.junit.Assert.assertEquals(stringBuffer75.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(intStream88);
        org.junit.Assert.assertTrue("'" + char90 + "' != '" + '#' + "'", char90 == '#');
    }

    @Test
    public void test15447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15447");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(4, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("java.io.IOException: 100.01210\n1", "StrTokenizer[StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test15448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15448");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int23 = strBuilder9.lastIndexOf(strMatcher21, (int) 'a');
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher37, strMatcher41);
        int int43 = strBuilder9.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder9.appendln(0L);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test15449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15449");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        int int16 = strBuilder13.lastIndexOf("", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.insert((int) (byte) 0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int30 = strBuilder25.indexOf(strMatcher28, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder19.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer31, "a#4#a4#hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.replaceAll("##4#a4#java.io.IOException: ", "1.0jIva.o.IOExceptionfalse100\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test15450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15450");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        int int41 = strBuilder31.indexOf(strMatcher39);
        int int44 = strBuilder31.indexOf("java.io.IOException: StrTokenizer[not tokenized yet]", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.appendln(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder28.replaceFirst(' ', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder28.setLength(8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder28.insert(18, (float) 60);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 18");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test15451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15451");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("zinekoTrtSeslaf ", "a4a4");
    }

    @Test
    public void test15452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15452");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        java.lang.Throwable throwable20 = null;
        java.io.IOException iOException21 = new java.io.IOException("", throwable20);
        java.io.IOException iOException22 = new java.io.IOException("#4#a4#", throwable20);
        java.io.IOException iOException23 = new java.io.IOException(throwable20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1.0f, iOException23, false, 100, strBuilder26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.appendWithSeparators(objArray27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.append(true);
        int int42 = strBuilder39.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.replaceAll('4', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.delete(11, 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder9.append((java.lang.Object) 24);
        boolean boolean57 = strBuilder55.endsWith("hi!");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test15453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15453");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.replaceAll("10\n\n", "#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        int int15 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.setNullText("java.io.IOException");
        java.lang.StringBuffer stringBuffer18 = strBuilder17.toStringBuffer();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(stringBuffer18);
        org.junit.Assert.assertEquals(stringBuffer18.toString(), " false");
    }

    @Test
    public void test15454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15454");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(stringBuffer5, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(0, false);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        int int34 = strBuilder24.indexOf(strMatcher32);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher32, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.append(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test15455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15455");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("1.0java.");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("hi!");
        boolean boolean19 = strTokenizer16.isIgnoreEmptyTokens();
        java.lang.String str20 = strTokenizer16.next();
        int int21 = strList6.indexOf((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor23 = strList6.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor24 = strList6.iterator();
        java.lang.String[] strArray28 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        boolean boolean42 = strTokenizer39.isIgnoreEmptyTokens();
        java.lang.String str43 = strTokenizer39.next();
        int int44 = strList29.indexOf((java.lang.Object) strTokenizer39);
        boolean boolean45 = strList6.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String[] strArray49 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        boolean boolean63 = strTokenizer60.isIgnoreEmptyTokens();
        java.lang.String str64 = strTokenizer60.next();
        int int65 = strList50.indexOf((java.lang.Object) strTokenizer60);
        java.util.ListIterator<java.lang.String> strItor67 = strList50.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor68 = strList50.iterator();
        java.lang.String[] strArray72 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        char[] charArray81 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setDelimiterString("hi!");
        boolean boolean86 = strTokenizer83.isIgnoreEmptyTokens();
        java.lang.String str87 = strTokenizer83.next();
        int int88 = strList73.indexOf((java.lang.Object) strTokenizer83);
        java.util.ListIterator<java.lang.String> strItor90 = strList73.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor91 = strList73.iterator();
        boolean boolean92 = strList50.remove((java.lang.Object) strItor91);
        boolean boolean93 = strList6.removeAll((java.util.Collection<java.lang.String>) strList50);
        java.util.stream.Stream<java.lang.String> strStream94 = strList50.parallelStream();
        boolean boolean95 = strBuilder1.equals((java.lang.Object) strList50);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator96 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList50.replaceAll(strUnaryOperator96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#4#a4#" + "'", str43, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#4#a4#" + "'", str64, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(strStream94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test15456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15456");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendSeparator("java.io.IOException: 59.0", 20);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.trim();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test15457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15457");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        java.lang.String str24 = strBuilder20.leftString(100);
        java.io.Writer writer25 = strBuilder20.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.deleteFirst('4');
        java.util.stream.IntStream intStream28 = strBuilder20.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("100.01210\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        char[] charArray42 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray43 = strBuilder33.getChars(charArray42);
        java.io.Reader reader44 = strBuilder33.asReader();
        reader44.mark(10);
        reader44.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.clear();
        char[] charArray57 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder50.appendln(charArray57);
        int int60 = reader44.read(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '0', 'a');
        int int69 = strMatcher30.isMatch(charArray57, (-1));
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder20.appendln(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str24, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(writer25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test15458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15458");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterChar(' ');
        int int14 = strTokenizer13.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer13.add(" 10\n\n0\nzinekoTrtSeslaf #4#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test15459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15459");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.setNewLineText("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        java.lang.String str21 = strBuilder20.getNullText();
        char[] charArray23 = new char[] { 'a' };
        char[] charArray24 = strBuilder20.getChars(charArray23);
        char[] charArray29 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray30 = strBuilder20.getChars(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder11.appendln(charArray29, 0, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder11.deleteAll(strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("0\nzinekoTrtSeslaf ", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer40, "StrTokenizer[not tokenized yet]");
        boolean boolean43 = strBuilder42.isEmpty();
        int int44 = strBuilder42.capacity();
        int int46 = strBuilder42.lastIndexOf("aa");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.insert(21, (double) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) 21, 9, '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) 190);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test15460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15460");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        int int27 = strList12.indexOf((java.lang.Object) charArray25);
        boolean boolean28 = strList12.isEmpty();
        java.lang.Object[] objArray29 = strList12.toArray();
        java.util.ListIterator<java.lang.String> strItor30 = strList12.listIterator();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#4#a4#]");
        org.junit.Assert.assertNotNull(strItor30);
    }

    @Test
    public void test15461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15461");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean29 = strBuilder27.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        char[] charArray40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln(charArray40);
        boolean boolean42 = strBuilder39.isEmpty();
        java.lang.String str44 = strBuilder39.rightString((int) 'a');
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.replaceAll(strMatcher57, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder31.appendln((java.lang.Object) strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder31.appendNull();
        int int64 = strBuilder61.lastIndexOf('e', 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.replaceFirst("a.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n 10", "10\n ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "10\n\n" + "'", str44, "10\n\n");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test15462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15462");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setTrimmerMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setEmptyTokenAsNull(false);
        int int17 = strTokenizer14.previousIndex();
        int int18 = strTokenizer14.size();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test15463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15463");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder2.appendSeparator('a', ' ');
        java.lang.String str43 = strBuilder42.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((long) '#');
        java.util.stream.IntStream intStream51 = strBuilder48.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.setLength(0);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("hi!");
        boolean boolean70 = strTokenizer67.hasNext();
        java.util.List<java.lang.String> strList71 = strTokenizer67.getTokenList();
        boolean boolean72 = strTokenizer67.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder56.appendln((java.lang.Object) strTokenizer67);
        java.lang.Throwable throwable76 = null;
        java.io.IOException iOException77 = new java.io.IOException("", throwable76);
        java.io.IOException iOException78 = new java.io.IOException("#4#a4#", throwable76);
        java.io.IOException iOException79 = new java.io.IOException(throwable76);
        java.lang.Throwable[] throwableArray80 = iOException79.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.appendAll((java.lang.Object[]) throwableArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder42.appendWithSeparators((java.lang.Object[]) throwableArray80, " 10\n0java.io.IOExceptionfalse100\n100.010\nfalse32.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + " " + "'", str43, " ");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(intStream51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test15464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15464");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        java.lang.String str18 = strBuilder3.substring(2);
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        int int38 = strList23.indexOf((java.lang.Object) strTokenizer33);
        java.util.ListIterator<java.lang.String> strItor40 = strList23.listIterator((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder3.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList23, "#4#");
        int int44 = strBuilder3.indexOf("1false0\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.clear();
        java.lang.Throwable throwable52 = null;
        java.io.IOException iOException53 = new java.io.IOException("", throwable52);
        java.io.IOException iOException54 = new java.io.IOException("#4#a4#", throwable52);
        java.io.IOException iOException55 = new java.io.IOException(throwable52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray59 = new java.lang.Object[] { 1.0f, iOException55, false, 100, strBuilder58 };
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder48.appendWithSeparators(objArray59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strBuilder68.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer69.getIgnoredMatcher();
        int int74 = strBuilder3.lastIndexOf(strMatcher72, 19);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str18, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test15465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15465");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n", '0', '\000');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        java.util.Iterator<java.lang.String> strItor5 = strList4.iterator();
        java.util.Iterator<java.lang.String> strItor6 = strList4.iterator();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList4.replaceAll(strUnaryOperator7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strItor5);
        org.junit.Assert.assertNotNull(strItor6);
    }

    @Test
    public void test15466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15466");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("hi!");
        boolean boolean62 = strTokenizer59.isIgnoreEmptyTokens();
        java.lang.String str63 = strTokenizer59.next();
        int int64 = strList49.indexOf((java.lang.Object) strTokenizer59);
        boolean boolean65 = strList27.addAll((java.util.Collection<java.lang.String>) strList49);
        // The following exception was thrown during execution in test generation
        try {
            strList27.add(94, "\nzinekoTrtSeslaf \n");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 94, Size: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#4#a4#" + "'", str63, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test15467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15467");
        char[] charArray7 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        int int18 = strBuilder8.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList23 = strTokenizer20.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor25 = strList23.listIterator((int) '0');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 48");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strList23);
    }

    @Test
    public void test15468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15468");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int26 = strBuilder23.lastIndexOf(strMatcher24, (int) (short) 10);
        boolean boolean27 = strBuilder2.contains(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str30 = strBuilder29.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.deleteAll(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.appendln((java.lang.Object) strBuilder31);
        java.util.Iterator<java.lang.String> strItor37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.appendAll(strItor37);
        boolean boolean40 = strBuilder29.equals((java.lang.Object) (-1L));
        boolean boolean41 = strBuilder2.equals(strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder29.ensureCapacity(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln("java.io.IOException: java.io.IOException: java.io.IOException: hi!", 46, 17);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append(':');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test15469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15469");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        int int13 = strTokenizer11.size();
        java.lang.String str14 = strTokenizer11.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer11.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList17 = strTokenizer11.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        boolean boolean22 = strBuilder21.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str28 = strBuilder27.getNullText();
        char[] charArray30 = new char[] { 'a' };
        char[] charArray31 = strBuilder27.getChars(charArray30);
        int int33 = strMatcher24.isMatch(charArray31, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.append(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setIgnoreEmptyTokens(true);
        boolean boolean40 = strTokenizer37.hasNext();
        boolean boolean41 = strList17.contains((java.lang.Object) strTokenizer37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer37.setEmptyTokenAsNull(true);
        boolean boolean44 = strTokenizer43.hasNext();
        int int45 = strTokenizer43.nextIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#" + "'", str14, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test15470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15470");
        char[] charArray7 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        int int18 = strBuilder8.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16);
        java.lang.String str20 = strTokenizer19.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer19.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer19.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str29 = strBuilder27.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder27.append((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder27.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.replace(0, 46, "se1001.0\n35.0\ntrue");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("1truefalse0\nzinekoTrtSeslaf true");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.replaceAll(strMatcher46, "1a10\n104aa");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("1false0\n1.0", strMatcher24, strMatcher46);
        java.lang.String str50 = strTokenizer49.toString();
        boolean boolean51 = strTokenizer49.hasPrevious();
        boolean boolean52 = strTokenizer49.hasNext();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "a4aa# " + "'", str20, "a4aa# ");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str50, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test15471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15471");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.clear();
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("", throwable14);
        java.io.IOException iOException16 = new java.io.IOException("#4#a4#", throwable14);
        java.io.IOException iOException17 = new java.io.IOException(throwable14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1.0f, iOException17, false, 100, strBuilder20 };
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.appendWithSeparators(objArray21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(10L);
        int int39 = strBuilder33.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendln(strBuilder42);
        boolean boolean45 = strBuilder30.endsWith("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder30.replaceAll(strMatcher49, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder3.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder3.replaceAll(' ', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.appendSeparator("1.0java.");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendSeparator("1.0jva.io.IOExceptionfalse100#");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.insert(24, false);
        int int64 = strBuilder62.lastIndexOf(':');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln('0');
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test15472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15472");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        java.lang.String str32 = strBuilder5.midString((int) ' ', 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int56 = strBuilder51.indexOf(strMatcher54, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.replace(strMatcher54, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        boolean boolean62 = strBuilder5.equals(strBuilder61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setEmptyTokenAsNull(false);
        java.lang.String str70 = strTokenizer69.getContent();
        java.util.List<java.lang.String> strList71 = strTokenizer69.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.append((java.lang.Object) strTokenizer69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer69.reset("1false0\n1.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setDelimiterChar('e');
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
    }

    @Test
    public void test15473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15473");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        java.lang.String str32 = strTokenizer31.nextToken();
        java.util.List<java.lang.String> strList33 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer31.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.append((java.lang.Object) strTokenizer35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder20.appendFixedWidthPadLeft(0, 34, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.append(false);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        boolean boolean63 = strTokenizer60.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder47.appendFixedWidthPadRight((java.lang.Object) strTokenizer60, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int70 = strBuilder67.indexOf(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendln((int) (short) 10);
        boolean boolean77 = strBuilder47.equalsIgnoreCase(strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder47.reverse();
        java.lang.StringBuffer stringBuffer79 = strBuilder78.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.trim();
        java.io.Writer writer81 = strBuilder78.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder41.appendln(strBuilder78);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        int int84 = strBuilder82.lastIndexOf(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str36, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(stringBuffer79);
        org.junit.Assert.assertEquals(stringBuffer79.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(writer81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test15474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15474");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.reverse();
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("hi!");
        java.lang.String str35 = strTokenizer34.nextToken();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        boolean boolean38 = strList36.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str41 = strTokenizer40.getContent();
        boolean boolean42 = strList36.equals((java.lang.Object) strTokenizer40);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        java.lang.String str48 = strBuilder47.getNullText();
        char[] charArray50 = new char[] { 'a' };
        char[] charArray51 = strBuilder47.getChars(charArray50);
        int int53 = strMatcher44.isMatch(charArray51, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer40.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder23.appendln((java.lang.Object) strTokenizer56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendSeparator("a#4#a4#hi!", 43);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#4#a4#" + "'", str35, "#4#a4#");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test15475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15475");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append(stringBuffer10);
        int int13 = strBuilder9.indexOf("a4 4");
        boolean boolean15 = strBuilder9.contains('I');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendln(10L);
        int int48 = strBuilder42.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendln(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendln(10L);
        int int62 = strBuilder56.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder56.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder51.appendln((java.lang.Object) strBuilder67);
        int int70 = strBuilder51.lastIndexOf("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder51.append((double) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder9.appendln(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test15476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15476");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int31 = strBuilder28.lastIndexOf(strMatcher29, (int) (short) -1);
        int int32 = strBuilder16.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder16.appendln((float) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("aaaaaaaaaaaaaaaaaaaaaaaa100");
        int int38 = strBuilder16.lastIndexOf(strMatcher36, (int) 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder16.setLength(1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test15477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15477");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        int int27 = strList12.indexOf((java.lang.Object) charArray25);
        strList12.clear();
        java.util.ListIterator<java.lang.String> strItor29 = strList12.listIterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setQuoteChar('4');
        java.util.List<java.lang.String> strList35 = strTokenizer34.getTokenList();
        boolean boolean36 = strList12.containsAll((java.util.Collection<java.lang.String>) strList35);
        java.util.Spliterator<java.lang.String> strSpliterator37 = strList12.spliterator();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strSpliterator37);
    }

    @Test
    public void test15478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15478");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst(' ', ' ');
        int int10 = strBuilder3.lastIndexOf("#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength(24);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("3#a4#", "ava.io.IOExce");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        java.lang.String str21 = strBuilder20.getNullText();
        char[] charArray23 = new char[] { 'a' };
        char[] charArray24 = strBuilder20.getChars(charArray23);
        char[] charArray29 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray30 = strBuilder20.getChars(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray30);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer31.reset(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        java.lang.String str47 = strBuilder46.getNullText();
        char[] charArray49 = new char[] { 'a' };
        char[] charArray50 = strBuilder46.getChars(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.setNewLineText("0\nfalse32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln((long) '#');
        java.util.stream.IntStream intStream67 = strBuilder64.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder72.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int83 = strBuilder80.lastIndexOf(strMatcher81, (int) (short) 10);
        int int85 = strBuilder64.indexOf(strMatcher81, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer59.setTrimmerMatcher(strMatcher81);
        boolean boolean87 = strBuilder52.equals((java.lang.Object) strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ".0jav");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder14.append(charArray38);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(intStream67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test15479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15479");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        java.lang.String str24 = strBuilder20.leftString(100);
        java.io.Writer writer25 = strBuilder20.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.replaceFirst('a', 'o');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str24, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(writer25);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test15480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15480");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.append(true);
        java.util.stream.IntStream intStream6 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln((float) 65);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append('\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteCharAt(67);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 67");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test15481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15481");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '.');
    }

    @Test
    public void test15482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15482");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.setNullText(".0j");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(true);
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln((float) 65);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) true, 88, '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test15483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15483");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(33);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) strMatcher44, 5, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder20.deleteAll(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        java.lang.Throwable throwable57 = null;
        java.io.IOException iOException58 = new java.io.IOException("", throwable57);
        java.io.IOException iOException59 = new java.io.IOException("#4#a4#", throwable57);
        java.io.IOException iOException60 = new java.io.IOException(throwable57);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1.0f, iOException60, false, 100, strBuilder63 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.appendWithSeparators(objArray64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.appendPadding((int) (short) -1, '#');
        java.lang.StringBuffer stringBuffer80 = strBuilder79.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder20.append(stringBuffer80);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), " :noitpecxEOI.oi.avaj\n0.53\n0.1001eslafnoitpecxEOI.oi.avaj0.1");
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test15484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15484");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) strMatcher15, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder4.appendFixedWidthPadLeft(19, 109, 'a');
        java.lang.String str27 = strBuilder4.midString(95, 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "a" + "'", str27, "a");
    }

    @Test
    public void test15485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15485");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(true);
        int int11 = strBuilder5.lastIndexOf("", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendSeparator("0java.io.IOExceptionfalse100", 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.trim();
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("hi!");
        java.lang.String str27 = strTokenizer26.nextToken();
        java.util.List<java.lang.String> strList28 = strTokenizer26.getTokenList();
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        boolean boolean43 = strList41.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str46 = strTokenizer45.getContent();
        boolean boolean47 = strList41.equals((java.lang.Object) strTokenizer45);
        boolean boolean48 = strList28.addAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendSeparator("va.io.IOExceptionfalse1001.");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.appendFixedWidthPadRight(13, 21, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteCharAt(57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setQuoteChar('4');
        java.util.List<java.lang.String> strList65 = strTokenizer64.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean68 = strList65.remove((java.lang.Object) "");
        java.util.Spliterator<java.lang.String> strSpliterator69 = strList65.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder56.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder56.appendln('1');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#a4#" + "'", str27, "#4#a4#");
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSpliterator69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test15486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15486");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) ' ');
        int int16 = reader13.read();
        reader13.close();
        reader13.reset();
        boolean boolean19 = reader13.markSupported();
        long long21 = reader13.skip(43L);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test15487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15487");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        int int55 = strBuilder45.indexOf(strMatcher53);
        int int56 = strList27.indexOf((java.lang.Object) strBuilder45);
        int int57 = strList27.size();
        java.lang.Object[] objArray58 = strList27.toArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getDelimiterMatcher();
        boolean boolean63 = strList27.remove((java.lang.Object) strMatcher62);
        int int64 = strList27.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str66 = strBuilder65.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder65.appendln((java.lang.Object) strBuilder67);
        java.util.Iterator<java.lang.String> strItor73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder65.appendAll(strItor73);
        int int75 = strBuilder74.capacity();
        boolean boolean76 = strList27.remove((java.lang.Object) strBuilder74);
        java.io.Reader reader77 = strBuilder74.asReader();
        reader77.close();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 3 + "'", int57 == 3);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[, , ]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 32 + "'", int75 == 32);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(reader77);
    }

    @Test
    public void test15488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15488");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert(4, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.setLength((int) '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst('4');
        boolean boolean32 = strBuilder29.isEmpty();
        char[] charArray33 = strBuilder29.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        int int35 = strTokenizer34.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "\n0.53\n0.1001eslafnoitpecxEOI.oi.ava0.0j0.1\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "\n0.53\n0.1001eslafnoitpecxEOI.oi.ava0.0j0.1\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[\n, 0, ., 5, 3, \n, 0, ., 1, 0, 0, 1, e, s, l, a, f, n, o, i, t, p, e, c, x, E, O, I, ., o, i, ., a, v, a, 0, ., 0, j, 0, ., 1, \000, \000, \000, \000, \000, \000]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test15489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15489");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        int int24 = strBuilder18.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.append((java.lang.CharSequence) strBuilder39);
        int int42 = strBuilder39.lastIndexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.replaceAll("1111111111", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendSeparator(" falseafalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendSeparator('c');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test15490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15490");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int28 = strBuilder23.indexOf(strMatcher26, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.replaceFirst(strMatcher26, "100.0false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder0.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test15491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15491");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        java.lang.String str5 = strBuilder4.getNullText();
        char[] charArray7 = new char[] { 'a' };
        char[] charArray8 = strBuilder4.getChars(charArray7);
        int int12 = strMatcher1.isMatch(charArray8, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, ".0j");
        boolean boolean15 = strTokenizer14.hasNext();
        boolean boolean16 = strTokenizer14.hasPrevious();
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        java.lang.String str28 = strTokenizer27.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setIgnoredChar('4');
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer30.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer14.setIgnoredMatcher(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((long) '#');
        java.util.stream.IntStream intStream43 = strBuilder40.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.appendFixedWidthPadRight((java.lang.Object) strMatcher51, 2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("z", strMatcher34, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setQuoteChar('1');
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#4#a4#" + "'", str28, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str31, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test15492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15492");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((long) 13);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test15493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15493");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "java.io.IOException: StrTokenizer[not tokenized yet]");
        java.lang.String str30 = strTokenizer29.next();
        boolean boolean31 = strTokenizer29.hasNext();
        java.lang.String str32 = strTokenizer29.previous();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
    }

    @Test
    public void test15494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15494");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendNewLine();
        int int22 = strBuilder19.indexOf("java.io.IOException: StrTokenizer[not tokenized yet]", 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream24 = strBuilder23.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        boolean boolean31 = strBuilder28.equals(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln((double) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        java.lang.String str37 = strBuilder36.getNullText();
        char[] charArray39 = new char[] { 'a' };
        char[] charArray40 = strBuilder36.getChars(charArray39);
        char[] charArray45 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray46 = strBuilder36.getChars(charArray45);
        java.io.Reader reader47 = strBuilder36.asReader();
        reader47.mark(10);
        reader47.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.clear();
        char[] charArray60 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.appendln(charArray60);
        int int63 = reader47.read(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setIgnoredChar('3');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getQuoteMatcher();
        int int71 = strBuilder28.lastIndexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder28.appendSeparator("\000\000\000\000", 14);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.reverse();
        boolean boolean84 = strBuilder78.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.appendln(48);
        char[] charArray87 = strBuilder86.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray87);
        int int90 = strBuilder74.indexOf(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder19.replaceFirst(strMatcher89, "#########################################");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "eslf48\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "eslf48\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[e, s, l, f, 4, 8, \n]");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 3 + "'", int90 == 3);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test15495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15495");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("ceptionfalse1001.0\n35.0\n52.02");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test15496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15496");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int23 = strBuilder18.indexOf(strMatcher21, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.replace(strMatcher21, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        java.lang.String str45 = strBuilder29.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        int int54 = strBuilder48.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.append((java.lang.Object) strBuilder60);
        boolean boolean62 = strBuilder10.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int77 = strBuilder74.lastIndexOf(strMatcher75, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder61.replace(strMatcher75, "a", 2, 15, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln((double) (byte) 10);
        java.util.stream.IntStream intStream85 = strBuilder84.chars();
        java.lang.CharSequence charSequence86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.append(charSequence86, 34, 37);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.deleteAll("0.012true104444444444444444444444444444444444444444444444");
        int int93 = strBuilder91.lastIndexOf('I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(intStream85);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 14 + "'", int93 == 14);
    }

    @Test
    public void test15497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15497");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer21, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln("                                                             ##a#", (int) 'e', 112);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test15498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15498");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        java.lang.String str32 = strTokenizer31.nextToken();
        java.util.List<java.lang.String> strList33 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer31.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.append((java.lang.Object) strTokenizer35);
        boolean boolean38 = strBuilder37.isEmpty();
        java.io.Reader reader39 = strBuilder37.asReader();
        boolean boolean40 = reader39.markSupported();
        reader39.mark((int) (byte) 100);
        boolean boolean43 = reader39.markSupported();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str36, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test15499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15499");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.deleteAll(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.append((float) (byte) 0);
        char[] charArray32 = null;
        char[] charArray33 = strBuilder31.getChars(charArray32);
        int int35 = strMatcher22.isMatch(charArray33, 59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        java.lang.Object obj37 = strTokenizer36.clone();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "0.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "0.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[0, ., 0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test15500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15500");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        java.lang.Throwable throwable17 = null;
        java.io.IOException iOException18 = new java.io.IOException("", throwable17);
        java.io.IOException iOException19 = new java.io.IOException("#4#a4#", throwable17);
        java.io.IOException iOException20 = new java.io.IOException(throwable17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray24 = new java.lang.Object[] { 1.0f, iOException20, false, 100, strBuilder23 };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.appendWithSeparators(objArray24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int42 = strBuilder40.indexOf(strMatcher41);
        char[] charArray49 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int53 = strBuilder50.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        int int60 = strBuilder50.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]", strMatcher41, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, "o.IOExceptionfalse1001.0\n35.0\ntrue#4#a4#zi");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray5);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer67.add("100.0zinekoTrtSeslaf1");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer67);
    }
}

