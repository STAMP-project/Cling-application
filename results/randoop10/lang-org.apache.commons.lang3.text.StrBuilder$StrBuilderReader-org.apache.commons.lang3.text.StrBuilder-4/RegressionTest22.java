import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest22 {

    public static boolean debug = false;

    @Test
    public void test11001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11001");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        java.lang.String str6 = strBuilder5.getNullText();
        char[] charArray8 = new char[] { 'a' };
        char[] charArray9 = strBuilder5.getChars(charArray8);
        int int13 = strMatcher2.isMatch(charArray9, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.replaceAll(strMatcher2, "java.io.IOException: ");
        java.util.stream.IntStream intStream16 = strBuilder0.codePoints();
        boolean boolean17 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.delete(0, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strBuilder20.asTokenizer();
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        java.lang.String str35 = strTokenizer33.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer21.setQuoteMatcher(strMatcher36);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer37.add("4a4java.io.IOException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#4#" + "'", str35, "#4#");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test11002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11002");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: StrTokenizer[not tokenized yet]");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("hi!", throwable7);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.String[] strArray14 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        boolean boolean28 = strTokenizer25.isIgnoreEmptyTokens();
        java.lang.String str29 = strTokenizer25.next();
        int int30 = strList15.indexOf((java.lang.Object) strTokenizer25);
        java.util.ListIterator<java.lang.String> strItor32 = strList15.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor33 = strList15.iterator();
        java.lang.String[] strArray37 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        boolean boolean51 = strTokenizer48.isIgnoreEmptyTokens();
        java.lang.String str52 = strTokenizer48.next();
        int int53 = strList38.indexOf((java.lang.Object) strTokenizer48);
        boolean boolean54 = strList15.addAll((java.util.Collection<java.lang.String>) strList38);
        java.util.ListIterator<java.lang.String> strItor55 = strList38.listIterator();
        boolean boolean57 = strList38.add("");
        int int58 = strList38.size();
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("hi!");
        boolean boolean70 = strTokenizer67.hasNext();
        java.util.List<java.lang.String> strList71 = strTokenizer67.getTokenList();
        boolean boolean72 = strList38.removeAll((java.util.Collection<java.lang.String>) strList71);
        java.lang.Throwable throwable74 = null;
        java.io.IOException iOException75 = new java.io.IOException("", throwable74);
        java.io.IOException iOException77 = new java.io.IOException("0.012true104444444444444444444444444444444444444444444444  \n");
        iOException75.addSuppressed((java.lang.Throwable) iOException77);
        boolean boolean79 = strList38.contains((java.lang.Object) iOException75);
        java.io.IOException iOException81 = new java.io.IOException("StrTokenizer[not tokenized yet]");
        java.io.IOException iOException82 = new java.io.IOException((java.lang.Throwable) iOException81);
        iOException75.addSuppressed((java.lang.Throwable) iOException81);
        iOException9.addSuppressed((java.lang.Throwable) iOException75);
        java.io.IOException iOException85 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray86 = iOException9.getSuppressed();
        java.io.IOException iOException87 = new java.io.IOException("\n01 false\n", (java.lang.Throwable) iOException9);
        java.io.IOException iOException88 = new java.io.IOException("\000\000\000\000\000\000\000\000\000", (java.lang.Throwable) iOException9);
        java.io.IOException iOException89 = new java.io.IOException((java.lang.Throwable) iOException88);
        java.io.IOException iOException90 = new java.io.IOException((java.lang.Throwable) iOException88);
        iOException1.addSuppressed((java.lang.Throwable) iOException88);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#4#a4#" + "'", str29, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(throwableArray86);
    }

    @Test
    public void test11003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11003");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) 2);
        char[] charArray30 = strBuilder25.toCharArray(31, 65);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.ensureCapacity((int) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder25.append((double) 206);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), ".0\n35.0\n52.02");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), ".0\n35.0\n52.02");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[., 0, \n, 3, 5, ., 0, \n, 5, 2, ., 0, 2]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test11004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11004");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        java.util.stream.IntStream intStream6 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int9 = strBuilder5.lastIndexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int24 = strBuilder21.lastIndexOf(strMatcher22, (int) (short) -1);
        boolean boolean25 = strBuilder5.contains(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        java.lang.String str31 = strBuilder30.getNullText();
        char[] charArray33 = new char[] { 'a' };
        char[] charArray34 = strBuilder30.getChars(charArray33);
        char[] charArray39 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray40 = strBuilder30.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer41.reset(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer41.setQuoteMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder5.replaceAll(strMatcher54, "35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 0.0f);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.deleteCharAt(93);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 93");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test11005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11005");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) -1);
    }

    @Test
    public void test11006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11006");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getIgnoredMatcher();
        int int64 = strBuilder45.indexOf(strMatcher62, (int) (byte) 1);
        boolean boolean65 = strBuilder39.contains(strMatcher62);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder39.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer77, "0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceAll("100.0false\n", ".0jav");
        int int87 = strBuilder86.length();
        int int89 = strBuilder86.indexOf('4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 65 + "'", int87 == 65);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 50 + "'", int89 == 50);
    }

    @Test
    public void test11007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11007");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator('a', 'a');
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        java.lang.String str24 = strTokenizer23.nextToken();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        boolean boolean27 = strList25.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str30 = strTokenizer29.getContent();
        boolean boolean31 = strList25.equals((java.lang.Object) strTokenizer29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer29.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder12.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "true10\n\na4 4");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test11008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11008");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        java.lang.String str14 = strBuilder2.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        char[] charArray28 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray29 = strBuilder19.getChars(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a');
        boolean boolean32 = strTokenizer31.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("zinekoTrtSeslaf ", strMatcher33);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.replace(strMatcher33, "java.io.IOException:  10\n", 9, 77, 55);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMatcher33);
    }

    @Test
    public void test11009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11009");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        java.util.ListIterator<java.lang.String> strItor13 = strList12.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append(false);
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("hi!");
        boolean boolean35 = strTokenizer32.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) strTokenizer32, 10, ' ');
        int int39 = strTokenizer32.previousIndex();
        boolean boolean40 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer32.reset("#4#a4#");
        java.util.List<java.lang.String> strList43 = strTokenizer42.getTokenList();
        boolean boolean44 = strList43.isEmpty();
        boolean boolean45 = strList12.retainAll((java.util.Collection<java.lang.String>) strList43);
        boolean boolean47 = strList12.add("\nzinekoTrtSeslaf \n");
        int int48 = strList12.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList51 = strList12.subList(80, 36);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 36");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
    }

    @Test
    public void test11010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11010");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor19 = strList12.listIterator();
        int int20 = strList12.size();
        int int21 = strList12.size();
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        java.lang.String str33 = strTokenizer32.nextToken();
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        boolean boolean36 = strList34.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str39 = strTokenizer38.getContent();
        boolean boolean40 = strList34.equals((java.lang.Object) strTokenizer38);
        java.util.ListIterator<java.lang.String> strItor41 = strList34.listIterator();
        int int42 = strList34.size();
        int int43 = strList34.size();
        int int44 = strList34.size();
        int int45 = strList34.size();
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setDelimiterString("hi!");
        java.lang.String str57 = strTokenizer56.nextToken();
        java.util.List<java.lang.String> strList58 = strTokenizer56.getTokenList();
        boolean boolean60 = strList58.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str63 = strTokenizer62.getContent();
        boolean boolean64 = strList58.equals((java.lang.Object) strTokenizer62);
        java.util.ListIterator<java.lang.String> strItor65 = strList58.listIterator();
        int int66 = strList58.size();
        int int67 = strList58.size();
        int int68 = strList58.size();
        int int69 = strList58.size();
        boolean boolean70 = strList34.retainAll((java.util.Collection<java.lang.String>) strList58);
        boolean boolean71 = strList12.equals((java.lang.Object) strList34);
        java.util.Spliterator<java.lang.String> strSpliterator72 = strList12.spliterator();
        java.util.ListIterator<java.lang.String> strItor73 = strList12.listIterator();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#4#a4#" + "'", str57, "#4#a4#");
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strSpliterator72);
        org.junit.Assert.assertNotNull(strItor73);
    }

    @Test
    public void test11011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11011");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[a4aa# ]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int6 = strBuilder3.indexOf(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.deleteFirst(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.minimizeCapacity();
        char[] charArray27 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        int int38 = strBuilder28.indexOf(strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder19.replace(strMatcher36, "", 2, (int) (short) 100, 10);
        char[] charArray47 = strBuilder19.toCharArray((int) (byte) 0, (int) (byte) 0);
        java.lang.String str48 = strBuilder19.getNewLineText();
        int int49 = strBuilder19.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder19.appendln(false);
        char[] charArray52 = strBuilder19.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder1.insert(2, charArray52, 200, 40);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 200");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " 10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " 10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ , 1, 0, \n, f, a, l, s, e, \n]");
    }

    @Test
    public void test11012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11012");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.setLength((int) (byte) 10);
        java.io.Reader reader14 = strBuilder13.asReader();
        long long16 = reader14.skip((long) 88);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10L + "'", long16 == 10L);
    }

    @Test
    public void test11013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11013");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.deleteFirst(" falseStrTokenizaaaaaaaaaaaaaaaaaaaaaaaa100");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test11014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11014");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.append(stringBuffer24);
        java.io.Writer writer26 = strBuilder25.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        java.lang.String str30 = strBuilder29.getNullText();
        char[] charArray32 = new char[] { 'a' };
        char[] charArray33 = strBuilder29.getChars(charArray32);
        char[] charArray38 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray39 = strBuilder29.getChars(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        writer26.write(charArray38);
        writer26.close();
        writer26.close();
        java.io.Writer writer45 = writer26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) writer45, 49, ' ');
        writer45.write(29);
        writer45.write("");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test11015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11015");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoreEmptyTokens(false);
        int int14 = strTokenizer11.previousIndex();
        java.lang.Object obj15 = strTokenizer11.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append((java.lang.Object) strTokenizer11);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        java.io.Reader reader18 = strBuilder17.asReader();
        reader18.mark(0);
        reader18.close();
        java.nio.CharBuffer charBuffer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int23 = reader18.read(charBuffer22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader18);
    }

    @Test
    public void test11016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11016");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.write("0java.io.IOExceptionfalse100", 4, 4);
        writer9.flush();
        java.io.Writer writer31 = writer9.append('4');
        writer9.write("#a4#-1", (int) (short) 1, 3);
        writer9.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer31);
    }

    @Test
    public void test11017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11017");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.appendFixedWidthPadLeft((int) (short) 100, (int) (byte) 0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendFixedWidthPadRight(32, 70, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.insert((int) (short) 10, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.replace((int) (short) -1, 63, " false");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test11018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11018");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        int int20 = strBuilder18.indexOf("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln((double) 19);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.insert(0, (long) 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendFixedWidthPadRight(86, (int) '.', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder18.appendln('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test11019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11019");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean51 = strTokenizer50.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        int int53 = strList52.size();
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setDelimiterString("hi!");
        java.lang.String str65 = strTokenizer64.nextToken();
        java.util.List<java.lang.String> strList66 = strTokenizer64.getTokenList();
        boolean boolean68 = strList66.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str71 = strTokenizer70.getContent();
        boolean boolean72 = strList66.equals((java.lang.Object) strTokenizer70);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean74 = strList66.equals((java.lang.Object) strMatcher73);
        boolean boolean75 = strList52.addAll((java.util.Collection<java.lang.String>) strList66);
        boolean boolean76 = strList27.retainAll((java.util.Collection<java.lang.String>) strList66);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator77 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList27.replaceAll(strUnaryOperator77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test11020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11020");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        int int27 = strBuilder17.indexOf(strMatcher25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher25, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder4.deleteAll(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test11021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11021");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer21, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        char[] charArray32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append("eptionfalse1001.0\n35.0\n1false0\n\n", 32, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append("#4#a4#");
        java.lang.String str47 = strBuilder40.leftString((int) (short) 100);
        int int49 = strBuilder40.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.appendSeparator(' ');
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterString("hi!");
        java.lang.String str66 = strTokenizer65.nextToken();
        java.util.List<java.lang.String> strList67 = strTokenizer65.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer65.setTrimmerMatcher(strMatcher68);
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        int int81 = strMatcher68.isMatch(charArray76, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder54.append(charArray76);
        char[] charArray83 = strBuilder35.getChars(charArray76);
        char[] charArray84 = strBuilder11.getChars(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, '\n');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray76);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "#4#a4#" + "'", str66, "#4#a4#");
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "10\n\na\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "10\n\na\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[1, 0, \n, \n, a, \n]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "10\n\na\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "10\n\na\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[1, 0, \n, \n, a, \n]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "10\n#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "10\n#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[1, 0, \n, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer88);
    }

    @Test
    public void test11022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11022");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(".IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n-1.0\n", 'a');
    }

    @Test
    public void test11023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11023");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.reset("\n0.001");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
    }

    @Test
    public void test11024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11024");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(46);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((long) 34);
        char[] charArray4 = null;
        char[] charArray5 = strBuilder1.getChars(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setQuoteChar('\000');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "34\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "34\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[3, 4, \n]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test11025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11025");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        int int24 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, (int) '4', 'a');
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        java.lang.String str39 = strTokenizer38.nextToken();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        boolean boolean42 = strList40.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str45 = strTokenizer44.getContent();
        boolean boolean46 = strList40.equals((java.lang.Object) strTokenizer44);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        java.lang.String str52 = strBuilder51.getNullText();
        char[] charArray54 = new char[] { 'a' };
        char[] charArray55 = strBuilder51.getChars(charArray54);
        int int57 = strMatcher48.isMatch(charArray55, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer44.setDelimiterMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder27.deleteAll(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32", 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.setCharAt(31, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder59.appendln(strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((double) 46);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.append((long) 19);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#4#a4#" + "'", str39, "#4#a4#");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test11026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11026");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(false);
        boolean boolean12 = strBuilder10.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        int int21 = strBuilder15.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append("#4#a4#");
        java.lang.String str32 = strBuilder25.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.append(false);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setDelimiterString("hi!");
        boolean boolean54 = strTokenizer51.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder38.appendFixedWidthPadRight((java.lang.Object) strTokenizer51, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.appendln((int) (short) 10);
        boolean boolean68 = strBuilder38.equalsIgnoreCase(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.reverse();
        java.lang.StringBuffer stringBuffer70 = strBuilder69.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder25.append(stringBuffer70, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder24.append(stringBuffer70);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder10.appendln(stringBuffer70);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.setLength(1);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int81 = strBuilder75.lastIndexOf(strMatcher79, 13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("1false0\nfalse", strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.setDelimiterChar('1');
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(stringBuffer70);
        org.junit.Assert.assertEquals(stringBuffer70.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer84);
    }

    @Test
    public void test11027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11027");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.replaceAll("10\n\n", "#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterString("hi!");
        java.lang.String str26 = strTokenizer25.nextToken();
        java.lang.Object obj27 = strTokenizer25.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer25.reset("1.0java.io.IOExceptionfalse1001.0");
        java.lang.String str30 = strTokenizer25.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer25.getDelimiterMatcher();
        int int32 = strBuilder9.lastIndexOf(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#4#a4#" + "'", str26, "#4#a4#");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1.0java.io.IOExceptionfalse1001.0" + "'", str30, "1.0java.io.IOExceptionfalse1001.0");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test11028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11028");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder16.indexOf(strMatcher19, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "eslf\n\n181111");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append(false);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean49 = strTokenizer46.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder33.appendFixedWidthPadRight((java.lang.Object) strTokenizer46, 10, ' ');
        java.lang.String str53 = strTokenizer46.next();
        boolean boolean54 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer46.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer58.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
    }

    @Test
    public void test11029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11029");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.insert(0, false);
        int int14 = strBuilder6.indexOf('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test11030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11030");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        java.lang.String str16 = strBuilder0.midString((int) (byte) 1, (-1));
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.replaceFirst(strMatcher29, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder0.appendSeparator("", "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.deleteAll(strMatcher38);
        int int41 = strBuilder0.lastIndexOf(strMatcher38, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream43 = strBuilder42.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append("");
        boolean boolean50 = strBuilder0.equalsIgnoreCase(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append("-1 #4#a4#-1");
        int int56 = strBuilder51.indexOf("4 4", 14);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test11031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11031");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" a10\nfalse\n");
    }

    @Test
    public void test11032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11032");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        int int20 = strBuilder14.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append("#4#a4#");
        java.lang.String str31 = strBuilder24.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder37.reverse();
        java.lang.StringBuffer stringBuffer69 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.append(stringBuffer69, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder23.append(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder9.appendln(stringBuffer69);
        char[] charArray75 = strBuilder9.toCharArray();
        java.util.stream.IntStream intStream76 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder9.setNewLineText("java.io.IOException: 1false0\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder9.append('a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), " falsezinekoTrtSeslaf \n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), " falsezinekoTrtSeslaf \n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[ , f, a, l, s, e, z, i, n, e, k, o, T, r, t, S, e, s, l, a, f,  , \n]");
        org.junit.Assert.assertNotNull(intStream76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test11033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11033");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNewLine();
        java.lang.CharSequence charSequence44 = strBuilder40.subSequence((int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert(9, "se1001.0\n35.0\ntrue");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test11034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11034");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int28 = strBuilder25.lastIndexOf(strMatcher26, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder0.replaceFirst(strMatcher26, "#4#a4#");
        java.lang.String str31 = strBuilder0.getNullText();
        boolean boolean33 = strBuilder0.contains("35\n10\n\na-130.0");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test11035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11035");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln(strBuilder35, (int) (short) 1, (int) ' ');
        java.io.Writer writer39 = writer9.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((long) '#');
        java.util.stream.IntStream intStream47 = strBuilder44.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.appendFixedWidthPadRight((java.lang.Object) strMatcher55, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder44.append(false);
        java.io.Writer writer61 = writer9.append((java.lang.CharSequence) strBuilder60);
        java.io.Writer writer63 = writer61.append('f');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(writer63);
    }

    @Test
    public void test11036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11036");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        java.io.IOException iOException5 = new java.io.IOException("hi!", throwable3);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("10\n4\n\000I", (java.lang.Throwable) iOException5);
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test11037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11037");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.reverse();
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder7.append(stringBuffer52, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append(stringBuffer52);
        int int59 = strBuilder0.indexOf("StrTokenizer[not tokenized yet]", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder0.insert((int) (byte) 10, (float) 100L);
        java.io.Writer writer63 = strBuilder0.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder0.ensureCapacity(17);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test11038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11038");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendSeparator('a');
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        java.lang.String str24 = strTokenizer23.nextToken();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        boolean boolean27 = strList25.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str30 = strTokenizer29.getContent();
        boolean boolean31 = strList25.equals((java.lang.Object) strTokenizer29);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean33 = strList25.equals((java.lang.Object) strMatcher32);
        java.util.stream.Stream<java.lang.String> strStream34 = strList25.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.insert(0, (double) (byte) 100);
        java.io.Reader reader42 = strBuilder41.asReader();
        boolean boolean43 = strList25.remove((java.lang.Object) reader42);
        strList25.clear();
        java.util.stream.Stream<java.lang.String> strStream45 = strList25.stream();
        java.lang.Object[] objArray46 = strList25.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) objArray46, 11, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder12.append((long) 109);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test11039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11039");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        java.lang.String str17 = strTokenizer8.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.replace(strMatcher41, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int48 = strBuilder30.lastIndexOf(strMatcher41, (int) (short) 100);
        int int50 = strBuilder25.lastIndexOf(strMatcher41, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer18.setDelimiterMatcher(strMatcher41);
        java.lang.String str52 = strTokenizer51.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.reset();
        boolean boolean54 = strTokenizer51.hasNext();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test11040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11040");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((long) '#');
        java.util.stream.IntStream intStream34 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.appendFixedWidthPadLeft((java.lang.Object) strBuilder31, 32, '1');
        java.lang.String str44 = strBuilder42.leftString(52);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.delete(2, (int) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator('1', '\n');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111" + "'", str44, "001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test11041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11041");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        int int14 = strBuilder12.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        boolean boolean32 = strTokenizer29.isIgnoreEmptyTokens();
        java.lang.String str33 = strTokenizer29.next();
        int int34 = strList19.indexOf((java.lang.Object) strTokenizer29);
        java.util.ListIterator<java.lang.String> strItor36 = strList19.listIterator((int) (byte) 0);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setDelimiterString("hi!");
        boolean boolean54 = strTokenizer51.isIgnoreEmptyTokens();
        java.lang.String str55 = strTokenizer51.next();
        int int56 = strList41.indexOf((java.lang.Object) strTokenizer51);
        java.util.ListIterator<java.lang.String> strItor58 = strList41.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor59 = strList41.iterator();
        boolean boolean60 = strList19.removeAll((java.util.Collection<java.lang.String>) strList41);
        boolean boolean62 = strList41.add("java.io.IOException: StrTokenizer[#4#a4#]");
        java.lang.Object[] objArray63 = strList41.toArray();
        java.util.ListIterator<java.lang.String> strItor64 = strList41.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder12.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList41, "0\n 10\n");
        java.util.ListIterator<java.lang.String> strItor67 = strList41.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str69 = strBuilder68.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.deleteAll(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.appendln((java.lang.Object) strBuilder70);
        java.util.Iterator<java.lang.String> strItor76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.appendAll(strItor76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder68.setNewLineText("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln((double) 80);
        boolean boolean82 = strList41.remove((java.lang.Object) strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#4#a4#" + "'", str55, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[, , , java.io.IOException: StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[, , , java.io.IOException: StrTokenizer[#4#a4#]]");
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test11042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11042");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        java.util.List<java.lang.String> strList12 = strTokenizer11.getTokenList();
        int int13 = strTokenizer11.nextIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test11043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11043");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        java.lang.String str24 = strBuilder20.leftString(100);
        java.lang.Object obj25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.append(obj25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        java.lang.String str43 = strBuilder27.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendln(10L);
        int int52 = strBuilder46.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder46.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder46.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder27.append((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        java.lang.String str63 = strBuilder62.getNullText();
        char[] charArray65 = new char[] { 'a' };
        char[] charArray66 = strBuilder62.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder27.appendln(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder26.appendln((java.lang.Object) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.insert(0, (double) (byte) 100);
        java.io.Reader reader79 = strBuilder78.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.appendln(false);
        java.lang.String str82 = strBuilder81.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.append(66);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder81.appendNull();
        java.lang.StringBuffer stringBuffer86 = strBuilder81.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder26.append(stringBuffer86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1false0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer89.setDelimiterString("java.io.IOException: StrTokenizer[");
        java.lang.String str92 = strTokenizer91.next();
        int int93 = strTokenizer91.nextIndex();
        java.lang.String str94 = strTokenizer91.getContent();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder26.appendAll((java.util.Iterator<java.lang.String>) strTokenizer91);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str24, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(reader79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "100.0false\n" + "'", str82, "100.0false\n");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(stringBuffer86);
        org.junit.Assert.assertEquals(stringBuffer86.toString(), "100.0false\n66");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "1false0" + "'", str92, "1false0");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "1false0\n" + "'", str94, "1false0\n");
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test11044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11044");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendln('#');
        int int15 = strBuilder2.lastIndexOf('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder25.appendln(strBuilder33);
        java.lang.StringBuffer stringBuffer37 = strBuilder25.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        java.lang.Throwable throwable46 = null;
        java.io.IOException iOException47 = new java.io.IOException("", throwable46);
        java.io.IOException iOException48 = new java.io.IOException("#4#a4#", throwable46);
        java.io.IOException iOException49 = new java.io.IOException(throwable46);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1.0f, iOException49, false, 100, strBuilder52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.appendWithSeparators(objArray53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.clear();
        java.lang.String str61 = strBuilder59.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder42.append((java.lang.CharSequence) str61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert(4, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder25.append(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder2.append(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder2.append((float) 6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence76 = strBuilder2.subSequence(100, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(stringBuffer37);
        org.junit.Assert.assertEquals(stringBuffer37.toString(), "  \n");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test11045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11045");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        boolean boolean16 = reader13.markSupported();
        long long18 = reader13.skip((long) 36);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test11046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11046");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.append((float) 66);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln(strBuilder27, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.insert(2, (java.lang.Object) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.insert(0, (java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder16.deleteFirst('\n');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test11047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11047");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int26 = strBuilder23.lastIndexOf(strMatcher24, (int) (short) 10);
        boolean boolean27 = strBuilder2.contains(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((double) 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.append(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendSeparator('c');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test11048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11048");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        int int14 = strBuilder12.indexOf("false");
        int int17 = strBuilder12.indexOf("0.012true104444444444444444444444444444444444444444444444  \n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.clear();
        java.lang.Throwable throwable26 = null;
        java.io.IOException iOException27 = new java.io.IOException("", throwable26);
        java.io.IOException iOException28 = new java.io.IOException("#4#a4#", throwable26);
        java.io.IOException iOException29 = new java.io.IOException(throwable26);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1.0f, iOException29, false, 100, strBuilder32 };
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder22.appendWithSeparators(objArray33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((float) '#');
        java.lang.String str41 = strBuilder39.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.append((double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.clear();
        java.lang.Throwable throwable51 = null;
        java.io.IOException iOException52 = new java.io.IOException("", throwable51);
        java.io.IOException iOException53 = new java.io.IOException("#4#a4#", throwable51);
        java.io.IOException iOException54 = new java.io.IOException(throwable51);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray58 = new java.lang.Object[] { 1.0f, iOException54, false, 100, strBuilder57 };
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder47.appendWithSeparators(objArray58, "");
        java.lang.String str62 = strBuilder47.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder47.deleteFirst("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder47.append('#');
        java.lang.StringBuffer stringBuffer67 = strBuilder47.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder39.append(stringBuffer67);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder12.insert(12, (java.lang.Object) stringBuffer67);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 12");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str41, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str62, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "1.0jva.io.IOExceptionfalse100#");
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test11049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11049");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        java.lang.String str13 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder4.appendSeparator('a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln((long) '#');
        java.util.stream.IntStream intStream26 = strBuilder23.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setLength(0);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("hi!");
        boolean boolean45 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList46 = strTokenizer42.getTokenList();
        boolean boolean47 = strTokenizer42.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder31.appendln((java.lang.Object) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder31.appendSeparator('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) strBuilder51, 59, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder4.deleteFirst('.');
        java.lang.Class<?> wildcardClass57 = strBuilder56.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test11050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11050");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(strBuilder26, (int) 'a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.appendln((double) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.append("0\n 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int44 = strBuilder39.indexOf(strMatcher42, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str49 = strBuilder48.getNullText();
        char[] charArray51 = new char[] { 'a' };
        char[] charArray52 = strBuilder48.getChars(charArray51);
        char[] charArray57 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray58 = strBuilder48.getChars(charArray57);
        java.io.Reader reader59 = strBuilder48.asReader();
        java.lang.String str60 = strBuilder48.toString();
        java.lang.StringBuffer stringBuffer61 = strBuilder48.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder39.append(stringBuffer61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder23.appendln(stringBuffer61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendPadding(38, 'c');
        int int68 = strBuilder66.lastIndexOf("");
        boolean boolean69 = strBuilder66.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(stringBuffer61);
        org.junit.Assert.assertEquals(stringBuffer61.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 88 + "'", int68 == 88);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test11051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11051");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer8.getQuoteMatcher();
        int int15 = strTokenizer8.size();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test11052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11052");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.clear();
        boolean boolean44 = strBuilder43.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test11053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11053");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder19.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder19.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln('a');
        boolean boolean36 = strBuilder15.equalsIgnoreCase(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.setNullText("1.0java.io.IOExceptionfalse10");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test11054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11054");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        int int20 = strBuilder14.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append("#4#a4#");
        java.lang.String str31 = strBuilder24.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder37.reverse();
        java.lang.StringBuffer stringBuffer69 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.append(stringBuffer69, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder23.append(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder9.appendln(stringBuffer69);
        char[] charArray75 = strBuilder9.toCharArray();
        java.util.stream.IntStream intStream76 = strBuilder9.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder9.appendln('4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder9.insert((-1), '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), " falsezinekoTrtSeslaf \n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), " falsezinekoTrtSeslaf \n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[ , f, a, l, s, e, z, i, n, e, k, o, T, r, t, S, e, s, l, a, f,  , \n]");
        org.junit.Assert.assertNotNull(intStream76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test11055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11055");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.append((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.append(false);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strTokenizer37, 10, ' ');
        int int44 = strTokenizer37.previousIndex();
        boolean boolean45 = strTokenizer37.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer37.reset("#4#a4#");
        java.util.List<java.lang.String> strList48 = strTokenizer37.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder3.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer37, "StrTokenizer[not tokenized yet]");
        java.util.List<java.lang.String> strList51 = strTokenizer37.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer37.setIgnoredChar('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test11056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11056");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        java.lang.String str13 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder4.appendSeparator('a', '1');
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        boolean boolean18 = strBuilder16.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11057");
        java.io.IOException iOException1 = new java.io.IOException("#4#a4#");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
    }

    @Test
    public void test11058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11058");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.deleteFirst("zinekoTrtS");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test11059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11059");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str18 = strBuilder17.getNullText();
        char[] charArray20 = new char[] { 'a' };
        char[] charArray21 = strBuilder17.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.deleteFirst(strMatcher36);
        int int39 = strBuilder17.indexOf(strMatcher36);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        java.lang.String str51 = strTokenizer50.nextToken();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        boolean boolean54 = strList52.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str57 = strTokenizer56.getContent();
        boolean boolean58 = strList52.equals((java.lang.Object) strTokenizer56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean60 = strList52.equals((java.lang.Object) strMatcher59);
        java.util.stream.Stream<java.lang.String> strStream61 = strList52.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.insert(0, (double) (byte) 100);
        java.io.Reader reader69 = strBuilder68.asReader();
        boolean boolean70 = strList52.remove((java.lang.Object) reader69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder17.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder17.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder2.append((java.lang.CharSequence) strBuilder73, 6, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.minimizeCapacity();
        java.lang.StringBuffer stringBuffer78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.appendln(stringBuffer78, 39, 200);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "#4#a4#" + "'", str51, "#4#a4#");
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test11060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11060");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder23.reverse();
        int int42 = strBuilder23.indexOf("hi!", (int) '4');
        java.lang.Object obj43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder23.appendFixedWidthPadRight(obj43, 0, '4');
        java.lang.String str48 = strBuilder46.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.replaceAll("1a10\n104aa", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.insert(11, (long) 93);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test11061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11061");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        int int14 = strBuilder0.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.setCharAt(0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.ensureCapacity((int) '\000');
        boolean boolean20 = strBuilder19.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11062");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int23 = strBuilder18.indexOf(strMatcher21, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.replace(strMatcher21, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        java.lang.String str45 = strBuilder29.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        int int54 = strBuilder48.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.append((java.lang.Object) strBuilder60);
        boolean boolean62 = strBuilder10.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int77 = strBuilder74.lastIndexOf(strMatcher75, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder61.replace(strMatcher75, "a", 2, 15, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln((double) (byte) 10);
        boolean boolean86 = strBuilder82.endsWith("java.io.IOException: StrTokenizer[#4#a4#]");
        int int89 = strBuilder82.lastIndexOf('1', 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder82.appendln((double) 12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence94 = strBuilder82.subSequence(112, 168);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 168");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 27 + "'", int89 == 27);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test11063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11063");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        char[] charArray28 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray29 = strBuilder19.getChars(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a');
        boolean boolean32 = strTokenizer31.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getIgnoredMatcher();
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer31.reset(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder13.insert((int) (short) -1, charArray40, 6, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
    }

    @Test
    public void test11064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11064");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.lang.Object obj12 = strTokenizer10.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.reset("1.0java.io.IOExceptionfalse1001.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charMatcher('\000');
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int52 = strBuilder47.indexOf(strMatcher50, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("eptionfalse1001.0\n35.0\n1false0\n\n", strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher29, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, '.');
        int int62 = strMatcher15.isMatch(charArray22, 190, 80, 48);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test11065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11065");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("okenized1false0\nyet]", throwable1);
    }

    @Test
    public void test11066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11066");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append('#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.insert(64, '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 64");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test11067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11067");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder16.indexOf(strMatcher19, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        boolean boolean23 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        boolean boolean25 = strList24.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        boolean boolean28 = strList24.add(" false.IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        java.lang.Throwable throwable31 = null;
        java.io.IOException iOException32 = new java.io.IOException("", throwable31);
        java.lang.Throwable[] throwableArray33 = iOException32.getSuppressed();
        java.io.IOException iOException34 = new java.io.IOException("1false0\nfalse", (java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.lang.Throwable[] throwableArray36 = iOException34.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable[] throwableArray37 = strList24.toArray(throwableArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test11068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11068");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        boolean boolean27 = strBuilder23.contains("va.io.IOExceptionfalse1001.");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.replaceFirst("1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n", "001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.appendln((int) (byte) 1);
        java.lang.String str35 = strBuilder33.rightString(12);
        int int37 = strBuilder33.lastIndexOf('e');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "onfalse1001\n" + "'", str35, "onfalse1001\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 26 + "'", int37 == 26);
    }

    @Test
    public void test11069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11069");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        int int38 = strList23.indexOf((java.lang.Object) strTokenizer33);
        int int39 = strTokenizer33.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer33);
        java.io.Writer writer41 = strBuilder18.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.append(false);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        boolean boolean63 = strTokenizer60.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder47.appendFixedWidthPadRight((java.lang.Object) strTokenizer60, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int70 = strBuilder67.indexOf(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendln((int) (short) 10);
        boolean boolean77 = strBuilder47.equalsIgnoreCase(strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder72.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendPadding(51, '3');
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer86 = writer41.append((java.lang.CharSequence) strBuilder80, 64, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -64");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(writer41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test11070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11070");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((long) '#');
        java.util.stream.IntStream intStream22 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendSeparator("10\n\n");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        boolean boolean42 = strTokenizer39.isIgnoreEmptyTokens();
        java.lang.String str43 = strTokenizer39.next();
        int int44 = strList29.indexOf((java.lang.Object) strTokenizer39);
        java.util.ListIterator<java.lang.String> strItor46 = strList29.listIterator((int) (byte) 0);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList51.iterator();
        boolean boolean70 = strList29.removeAll((java.util.Collection<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList29, "10\n\n");
        boolean boolean73 = strList12.retainAll((java.util.Collection<java.lang.String>) strList29);
        java.util.Iterator<java.lang.String> strItor74 = strList29.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = strList29.get(14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 14, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#4#a4#" + "'", str43, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strItor74);
    }

    @Test
    public void test11071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11071");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder11.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.append(true);
        java.lang.String str79 = strBuilder77.leftString(66);
        java.lang.String str81 = strBuilder77.rightString((int) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.append((double) 64);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("eslaf", strMatcher85);
        boolean boolean87 = strTokenizer86.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder83.appendAll((java.util.Iterator<java.lang.String>) strTokenizer86);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "1truefalse0\nzinekoTrtSeslaf true" + "'", str79, "1truefalse0\nzinekoTrtSeslaf true");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "1truefalse0\nzinekoTrtSeslaf true" + "'", str81, "1truefalse0\nzinekoTrtSeslaf true");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test11072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11072");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setEmptyTokenAsNull(false);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        int int31 = strBuilder21.indexOf(strMatcher29);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher29, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer6.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append(stringBuffer54);
        java.io.Writer writer56 = strBuilder55.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        java.lang.String str60 = strBuilder59.getNullText();
        char[] charArray62 = new char[] { 'a' };
        char[] charArray63 = strBuilder59.getChars(charArray62);
        char[] charArray68 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray69 = strBuilder59.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        writer56.write(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer46.reset(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder1.append(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, 'I', '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setQuoteChar('#');
        boolean boolean82 = strTokenizer79.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer79.setDelimiterChar('f');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer79.set("##4#a4#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strTokenizer84);
    }

    @Test
    public void test11073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11073");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'I');
        boolean boolean24 = strTokenizer23.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test11074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11074");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        java.lang.String[] strArray33 = strTokenizer32.getTokenArray();
        java.lang.String str34 = strTokenizer32.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "a4 4" + "'", str34, "a4 4");
        org.junit.Assert.assertNotNull(strTokenizer36);
    }

    @Test
    public void test11075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11075");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        java.lang.Throwable throwable29 = null;
        java.io.IOException iOException30 = new java.io.IOException("", throwable29);
        java.io.IOException iOException31 = new java.io.IOException("#4#a4#", throwable29);
        java.io.IOException iOException32 = new java.io.IOException(throwable29);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1.0f, iOException32, false, 100, strBuilder35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.appendWithSeparators(objArray36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert((int) (byte) 0, (int) (short) -1);
        boolean boolean50 = strList12.remove((java.lang.Object) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNull();
        boolean boolean56 = strBuilder54.equals((java.lang.Object) 100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.ensureCapacity(2);
        boolean boolean59 = strBuilder46.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int73 = strBuilder70.indexOf(strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder69.appendln(strBuilder77);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int83 = strBuilder69.lastIndexOf(strMatcher81, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder54.replaceAll(strMatcher81, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder54.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.setCharAt(2, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder87.appendSeparator("", 33);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder87.appendSeparator('f', '3');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test11076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11076");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        java.lang.String str25 = strTokenizer13.next();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4#a4#" + "'", str25, "#4#a4#");
    }

    @Test
    public void test11077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11077");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder9.setNullText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.ensureCapacity((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln((long) '#');
        java.util.stream.IntStream intStream44 = strBuilder41.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.setLength(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.append((java.lang.Object) strBuilder49);
        java.lang.String str53 = strBuilder52.getNullText();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "false" + "'", str53, "false");
    }

    @Test
    public void test11078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11078");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int28 = strBuilder25.lastIndexOf(strMatcher26, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder0.replaceFirst(strMatcher26, "#4#a4#");
        java.lang.String str31 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.reverse();
        boolean boolean43 = strBuilder37.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.appendln(48);
        char[] charArray46 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.replaceFirst(strMatcher48, "#");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder33.reverse();
        int int52 = strBuilder33.size();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "eslf48\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "eslf48\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[e, s, l, f, 4, 8, \n]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 21 + "'", int52 == 21);
    }

    @Test
    public void test11079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11079");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.appendln((float) 1L);
        java.io.Writer writer22 = strBuilder0.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.insert((int) (byte) 0, false);
        java.util.Iterator<java.lang.String> strItor40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.appendWithSeparators(strItor40, " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("hi!");
        java.lang.String str60 = strTokenizer59.nextToken();
        java.util.List<java.lang.String> strList61 = strTokenizer59.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendAll((java.lang.Iterable<java.lang.String>) strList61);
        java.lang.Object[] objArray63 = strList61.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder26.appendAll(objArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.trim();
        boolean boolean66 = strBuilder64.isEmpty();
        java.lang.String str68 = strBuilder64.substring(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder23.append((java.lang.CharSequence) str68);
        java.lang.String str70 = strBuilder23.getNullText();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(writer22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "#4#a4#" + "'", str60, "#4#a4#");
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "se#4#a4#" + "'", str68, "se#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test11080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11080");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        reader13.mark(48);
        long long20 = reader13.skip(0L);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int42 = strBuilder37.indexOf(strMatcher40, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "eslf\n\n181111");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher47);
        int int49 = reader13.read(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strMatcher50);
    }

    @Test
    public void test11081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11081");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("");
        int int2 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.deleteAll('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceAll(' ', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendln(10L);
        int int16 = strBuilder10.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder10.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.insert((int) (byte) 0, false);
        java.util.Iterator<java.lang.String> strItor24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder10.appendWithSeparators(strItor24, " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(' ');
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        java.lang.String str44 = strTokenizer43.nextToken();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder27.appendAll((java.lang.Iterable<java.lang.String>) strList45);
        java.lang.Object[] objArray47 = strList45.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder10.appendAll(objArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder7.append((java.lang.CharSequence) strBuilder48);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test11082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11082");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.setLength((int) (byte) 10);
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.ensureCapacity(39);
        boolean boolean26 = strBuilder24.endsWith(".0jav");
        char[] charArray31 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray31);
        char[] charArray33 = strBuilder24.getChars(charArray31);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("hi!");
        java.lang.String str45 = strTokenizer44.nextToken();
        java.util.List<java.lang.String> strList46 = strTokenizer44.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        char[] charArray58 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray59 = strBuilder49.getChars(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray59);
        int int61 = strList46.indexOf((java.lang.Object) charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int67 = strTokenizer66.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer66.setTrimmerMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher65, strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder13.replaceFirst(strMatcher69, " a10\n");
        char[] charArray74 = strBuilder13.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray74);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#4#a4#" + "'", str45, "#4#a4#");
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "35.0\n4\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "35.0\n4\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[3, 5, ., 0, \n, 4, \000, \000, \000, \000]");
        org.junit.Assert.assertNotNull(strTokenizer75);
    }

    @Test
    public void test11083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11083");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterString("hi!");
        java.lang.String str26 = strTokenizer25.nextToken();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer25.setTrimmerMatcher(strMatcher28);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        int int41 = strMatcher28.isMatch(charArray36, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder14.append(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append(0.0d);
        char[] charArray45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNullText("100.0false\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.insert(23, (long) 72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 23");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#4#a4#" + "'", str26, "#4#a4#");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test11084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11084");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        int int10 = strBuilder9.capacity();
        int int11 = strBuilder9.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendNull();
        char[] charArray13 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln(false);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("hi!");
        java.lang.String str67 = strTokenizer66.nextToken();
        java.util.List<java.lang.String> strList68 = strTokenizer66.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        java.lang.String str72 = strBuilder71.getNullText();
        char[] charArray74 = new char[] { 'a' };
        char[] charArray75 = strBuilder71.getChars(charArray74);
        char[] charArray80 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray81 = strBuilder71.getChars(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray81);
        int int83 = strList68.indexOf((java.lang.Object) charArray81);
        char[] charArray84 = strBuilder55.getChars(charArray81);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, strMatcher86, strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer90.setIgnoreEmptyTokens(false);
        java.lang.String str93 = strTokenizer90.nextToken();
        boolean boolean94 = strTokenizer90.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer90.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer14.setDelimiterMatcher(strMatcher95);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "10\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "10\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[1, 0, \n, \n]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#4#a4#" + "'", str67, "#4#a4#");
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strTokenizer97);
    }

    @Test
    public void test11085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11085");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str49 = strBuilder48.getNullText();
        char[] charArray51 = new char[] { 'a' };
        char[] charArray52 = strBuilder48.getChars(charArray51);
        int int56 = strMatcher45.isMatch(charArray52, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setIgnoredChar('1');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
    }

    @Test
    public void test11086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11086");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.appendPadding((int) '#', '4');
        int int46 = strBuilder44.indexOf("#4#");
        int int49 = strBuilder44.indexOf("\n0.53\n0.1001eslafnoitpecxEOI.oi.avaj0.1", 63);
        java.util.stream.IntStream intStream50 = strBuilder44.chars();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(intStream50);
    }

    @Test
    public void test11087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11087");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.write("0java.io.IOExceptionfalse100", 4, 4);
        writer9.flush();
        java.io.Writer writer31 = writer9.append('4');
        writer9.close();
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray39);
        writer9.write(charArray39);
        java.io.Writer writer47 = writer9.append('e');
        writer47.close();
        java.io.Writer writer50 = writer47.append('f');
        writer50.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(writer50);
    }

    @Test
    public void test11088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11088");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int32 = strBuilder30.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append("10\n\n");
        boolean boolean38 = strBuilder36.contains("1false01");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11089");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.replaceAll('e', 'c');
        int int17 = strBuilder0.size();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 36 + "'", int17 == 36);
    }

    @Test
    public void test11090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11090");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        int int29 = strBuilder19.indexOf(strMatcher27);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher27, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer4.setDelimiterMatcher(strMatcher42);
        int int45 = strTokenizer4.nextIndex();
        java.lang.String[] strArray46 = strTokenizer4.getTokenArray();
        int int47 = strTokenizer4.size();
        java.lang.String[] strArray51 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setDelimiterString("hi!");
        boolean boolean65 = strTokenizer62.isIgnoreEmptyTokens();
        java.lang.String str66 = strTokenizer62.next();
        int int67 = strList52.indexOf((java.lang.Object) strTokenizer62);
        java.lang.String str68 = strTokenizer62.toString();
        java.lang.String str69 = strTokenizer62.toString();
        java.lang.String[] strArray70 = strTokenizer62.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer62.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer4.setDelimiterMatcher(strMatcher71);
        java.util.List<java.lang.String> strList73 = strTokenizer4.getTokenList();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "#4#a4#" + "'", str66, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str68, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str69, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strList73);
    }

    @Test
    public void test11091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11091");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(4);
        java.io.Reader reader22 = strBuilder21.asReader();
        reader22.close();
        reader22.mark((int) '\000');
        reader22.reset();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
    }

    @Test
    public void test11092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11092");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.appendln((float) 1L);
        java.io.Writer writer22 = strBuilder0.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.trim();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence26 = strBuilder0.subSequence((int) (short) -1, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(writer22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test11093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11093");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(" \n", "                                                             ##a#");
        java.lang.String str3 = strTokenizer2.previousToken();
        java.lang.String str4 = strTokenizer2.nextToken();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + " \n" + "'", str4, " \n");
    }

    @Test
    public void test11094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11094");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(55);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(" 10\n0.0aa4#4\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("hi!");
        java.lang.String str8 = strBuilder6.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        java.lang.String str12 = strBuilder11.getNullText();
        char[] charArray14 = new char[] { 'a' };
        char[] charArray15 = strBuilder11.getChars(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder6.append((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder6.replaceAll('#', ' ');
        java.util.stream.IntStream intStream20 = strBuilder6.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder6.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder22, 168, '\n');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test11095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11095");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("hi!");
        java.lang.String str37 = strTokenizer36.nextToken();
        java.util.List<java.lang.String> strList38 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer36.setTrimmerMatcher(strMatcher39);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        int int52 = strMatcher39.isMatch(charArray47, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder23.append(charArray47);
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int72 = strBuilder69.indexOf(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder74.replace(strMatcher79, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer87.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer89.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[#4#a4#]", strMatcher79, strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher66, strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        java.lang.String str94 = strTokenizer93.previousToken();
        java.util.List<java.lang.String> strList95 = strTokenizer93.getTokenList();
        java.util.Iterator<java.lang.String> strItor96 = strList95.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = strList95.get(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(strItor96);
    }

    @Test
    public void test11096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11096");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        boolean boolean17 = reader13.ready();
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray24);
        int int29 = reader13.read(charArray24);
        reader13.mark(1);
        int int32 = reader13.read();
        reader13.mark((-1));
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test11097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11097");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11098");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.append(false);
        java.lang.String str15 = strBuilder2.leftString(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder2.appendSeparator("35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]");
        int int19 = strBuilder17.lastIndexOf('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1false0\nfalse" + "'", str15, "1false0\nfalse");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test11099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11099");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendln("4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getQuoteMatcher();
        int int16 = strBuilder10.lastIndexOf(strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj19 = strTokenizer18.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer18.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("aa4#4\n", strMatcher15, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]", strMatcher15, strMatcher22);
        java.lang.String str24 = strTokenizer23.nextToken();
        boolean boolean25 = strTokenizer23.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]" + "'", str24, "java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test11100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11100");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str11 = strBuilder10.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNewLineText("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.deleteCharAt((int) '\000');
        char[] charArray22 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append(charArray22);
        int int25 = strBuilder23.indexOf('\n');
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "rue");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "rue");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[r, u, e]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
    }

    @Test
    public void test11101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11101");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(true);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer20.getTrimmerMatcher();
        int int25 = strBuilder5.indexOf(strMatcher23, 4);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int47 = strBuilder42.indexOf(strMatcher45, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher45);
        int int50 = strBuilder5.indexOf(strMatcher45, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder5.appendln(false);
        char[] charArray53 = strBuilder52.toCharArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "true\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "true\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[t, r, u, e, \n, f, a, l, s, e, \n]");
    }

    @Test
    public void test11102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11102");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int26 = strBuilder23.lastIndexOf(strMatcher24, (int) (short) 10);
        boolean boolean27 = strBuilder2.contains(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str30 = strBuilder29.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.deleteAll(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.appendln((java.lang.Object) strBuilder31);
        java.util.Iterator<java.lang.String> strItor37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.appendAll(strItor37);
        boolean boolean40 = strBuilder29.equals((java.lang.Object) (-1L));
        boolean boolean41 = strBuilder2.equals(strBuilder29);
        int int44 = strBuilder2.indexOf("lse0\nzinekoTrtSeslaf ", 36);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test11103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11103");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator("100.01210\n");
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        int int28 = strTokenizer25.previousIndex();
        char[] charArray35 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        int int46 = strBuilder36.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher51, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer25.setIgnoredMatcher(strMatcher55);
        int int59 = strBuilder2.indexOf(strMatcher55, (int) '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder2.appendln("zinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.setCharAt(37, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.setNewLineText("aaaaaaaaaaaaaaaaaaaaaaaa1");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder69.clear();
        java.lang.Throwable throwable74 = null;
        java.io.IOException iOException75 = new java.io.IOException("", throwable74);
        java.io.IOException iOException76 = new java.io.IOException("#4#a4#", throwable74);
        java.io.IOException iOException77 = new java.io.IOException(throwable74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray81 = new java.lang.Object[] { 1.0f, iOException77, false, 100, strBuilder80 };
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder70.appendWithSeparators(objArray81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder90.appendSeparator(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strBuilder90.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder66.appendFixedWidthPadLeft((java.lang.Object) strTokenizer95, 35, '4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test11104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11104");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setEmptyTokenAsNull(false);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        int int31 = strBuilder21.indexOf(strMatcher29);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher29, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer6.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append(stringBuffer54);
        java.io.Writer writer56 = strBuilder55.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        java.lang.String str60 = strBuilder59.getNullText();
        char[] charArray62 = new char[] { 'a' };
        char[] charArray63 = strBuilder59.getChars(charArray62);
        char[] charArray68 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray69 = strBuilder59.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        writer56.write(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer46.reset(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder1.append(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, 'I', '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer81);
    }

    @Test
    public void test11105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11105");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        char[] charArray48 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.appendln(charArray48);
        int int53 = strBuilder50.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder38.append(strBuilder50);
        java.lang.String str60 = strBuilder38.substring(10);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        int int72 = strMatcher61.isMatch(charArray68, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder38.append(charArray68);
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.setDelimiterString("hi!");
        boolean boolean87 = strTokenizer84.isIgnoreEmptyTokens();
        java.lang.String str88 = strTokenizer84.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer84.setDelimiterChar('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder38.insert((int) '#', (java.lang.Object) strTokenizer90);
        boolean boolean92 = strTokenizer90.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1" + "'", str60, ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "#4#a4#" + "'", str88, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test11106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11106");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        int int16 = reader13.read();
        reader13.reset();
        reader13.reset();
        boolean boolean19 = reader13.markSupported();
        int int20 = reader13.read();
        reader13.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test11107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11107");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        int int26 = strTokenizer24.size();
        java.lang.String str27 = strTokenizer24.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer24.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList30 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        boolean boolean35 = strBuilder34.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        int int46 = strMatcher37.isMatch(charArray44, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.append(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setIgnoreEmptyTokens(true);
        boolean boolean53 = strTokenizer50.hasNext();
        boolean boolean54 = strList30.contains((java.lang.Object) strTokenizer50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer50);
        int int58 = strBuilder10.lastIndexOf('3', 20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder10.insert((-1), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#" + "'", str27, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test11108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11108");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        int int7 = strTokenizer5.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setEmptyTokenAsNull(false);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        int int50 = strBuilder40.indexOf(strMatcher48);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher48, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer25.setDelimiterMatcher(strMatcher63);
        int int66 = strBuilder16.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer9.setQuoteMatcher(strMatcher63);
        java.lang.Object obj68 = strTokenizer67.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer67.reset("StrTokenizer[1.0j");
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer70);
    }

    @Test
    public void test11109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11109");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        int int38 = strBuilder28.indexOf(strMatcher36);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher36, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        int int54 = reader13.read(charArray22);
        reader13.close();
        int int56 = reader13.read();
        reader13.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test11110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11110");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(false);
        boolean boolean14 = strBuilder11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteAll("hi!");
        java.lang.CharSequence charSequence17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append(charSequence17, (int) '#', (int) (short) 100);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getTrimmerMatcher();
        int int35 = strBuilder20.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder20.appendNull();
        char[] charArray37 = strBuilder20.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "10\nfalse");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "10\nfalse");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[1, 0, \n, f, a, l, s, e]");
    }

    @Test
    public void test11111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11111");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        int int15 = strBuilder5.lastIndexOf("aa##", 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.append(true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert((int) '4', (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test11112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11112");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoreEmptyTokens(false);
        boolean boolean43 = strTokenizer42.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder15.appendAll((java.lang.Object[]) strArray46);
        int int50 = strBuilder47.lastIndexOf('1', 95);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int72 = strBuilder67.indexOf(strMatcher70, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher70);
        boolean boolean74 = strTokenizer73.hasNext();
        java.util.List<java.lang.String> strList75 = strTokenizer73.getTokenList();
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.setDelimiterString("hi!");
        java.lang.String str87 = strTokenizer86.nextToken();
        java.util.List<java.lang.String> strList88 = strTokenizer86.getTokenList();
        boolean boolean90 = strList88.add("hi!");
        java.util.Iterator<java.lang.String> strItor91 = strList88.iterator();
        boolean boolean92 = strList88.isEmpty();
        boolean boolean93 = strList75.removeAll((java.util.Collection<java.lang.String>) strList88);
        strList75.clear();
        java.util.ListIterator<java.lang.String> strItor95 = strList75.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder47.appendAll((java.lang.Iterable<java.lang.String>) strList75);
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = null;
        int int99 = strBuilder96.lastIndexOf(strMatcher97, 0);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 70 + "'", int50 == 70);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(strItor95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test11113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11113");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append((double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.append((double) '0');
        char[] charArray29 = strBuilder20.toCharArray(17, 42);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.insert(10, (long) 15);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "ptionfalse1001.0\n35.0\n1.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "ptionfalse1001.0\n35.0\n1.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, 1, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test11114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11114");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int6 = strBuilder3.indexOf(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.deleteFirst(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int34 = strBuilder31.lastIndexOf(strMatcher32, (int) (short) -1);
        int int35 = strBuilder19.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer1.setIgnoredMatcher(strMatcher32);
        boolean boolean37 = strTokenizer1.hasPrevious();
        boolean boolean38 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer1.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer1.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
    }

    @Test
    public void test11115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11115");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(' ');
        java.util.stream.IntStream intStream19 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int22 = strBuilder18.lastIndexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int37 = strBuilder34.lastIndexOf(strMatcher35, (int) (short) -1);
        boolean boolean38 = strBuilder18.contains(strMatcher35);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher52, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher35, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int60 = strTokenizer59.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer59.setTrimmerMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher62);
        boolean boolean65 = strTokenizer64.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer64.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer64.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setDelimiterString("a");
        java.lang.String[] strArray71 = strTokenizer68.getTokenArray();
        java.lang.String str72 = strTokenizer68.next();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "a4 4" + "'", str72, "a4 4");
    }

    @Test
    public void test11116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11116");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write("0java.io.IOExceptionfalse100", 0, 0);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray65);
        writer37.write(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test11117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11117");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        java.lang.String str16 = strBuilder0.midString((int) (byte) 1, (-1));
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.replaceFirst(strMatcher29, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert(0, '#');
        java.lang.Throwable throwable36 = null;
        java.io.IOException iOException37 = new java.io.IOException("", throwable36);
        java.lang.Throwable[] throwableArray38 = iOException37.getSuppressed();
        java.io.IOException iOException40 = new java.io.IOException();
        java.io.IOException iOException41 = new java.io.IOException("hi!", (java.lang.Throwable) iOException40);
        iOException37.addSuppressed((java.lang.Throwable) iOException41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.append((java.lang.Object) iOException37);
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln(stringBuffer44, (int) '3', (int) '0');
        char[] charArray48 = strBuilder43.toCharArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "##4#a4#java.io.IOException: \n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "##4#a4#java.io.IOException: \n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, #, 4, #, a, 4, #, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, :,  , \n]");
    }

    @Test
    public void test11118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11118");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.replaceAll("1false0\n", " ");
        java.lang.String str17 = strBuilder16.toString();
        java.lang.StringBuffer stringBuffer18 = strBuilder16.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strBuilder20.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setQuoteChar('a');
        java.lang.String str24 = strTokenizer21.previousToken();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(stringBuffer18);
        org.junit.Assert.assertEquals(stringBuffer18.toString(), "1");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test11119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11119");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln((double) 10.0f);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        java.lang.String str39 = strTokenizer38.nextToken();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer38.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendln((java.lang.Object) strTokenizer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder27.append("onfalse1001.0\n35.0\n1false0\n\ne104444444444444444444444444444444444444444444444  \n", (int) (short) 0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        java.lang.String str64 = strBuilder63.getNullText();
        char[] charArray66 = new char[] { 'a' };
        char[] charArray67 = strBuilder63.getChars(charArray66);
        char[] charArray72 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray73 = strBuilder63.getChars(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int87 = strBuilder84.lastIndexOf(strMatcher85, (int) (short) 10);
        boolean boolean88 = strBuilder63.contains(strMatcher85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder54.appendln(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder54.appendNewLine();
        boolean boolean91 = strBuilder48.equalsIgnoreCase(strBuilder90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder48.trim();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#4#a4#" + "'", str39, "#4#a4#");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test11120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11120");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.insert(0, charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.setLength(44);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.replace(strMatcher53, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder41.append((java.lang.Object) strTokenizer59);
        int int61 = strTokenizer59.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer59.setQuoteChar('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strTokenizer63);
    }

    @Test
    public void test11121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11121");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a");
        int int40 = strBuilder36.indexOf(strMatcher38, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setIgnoreEmptyTokens(false);
        boolean boolean45 = strTokenizer42.hasPrevious();
        java.util.List<java.lang.String> strList46 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.appendln((java.lang.Object) strTokenizer42);
        java.lang.Object obj48 = strTokenizer42.clone();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11122");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        char[] charArray12 = strBuilder9.toCharArray((int) (short) 0, 48);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        boolean boolean24 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList25 = strTokenizer21.getTokenList();
        java.util.List<java.lang.String> strList26 = strTokenizer21.getTokenList();
        java.lang.Object[] objArray27 = strList26.toArray();
        java.lang.String[] strArray30 = new java.lang.String[] { "0\nzinekoTrtSeslaf ", "a" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList31.isEmpty();
        java.util.Iterator<java.lang.String> strItor34 = strList31.iterator();
        boolean boolean35 = strList26.containsAll((java.util.Collection<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        boolean boolean40 = strBuilder39.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        java.lang.String str46 = strBuilder45.getNullText();
        char[] charArray48 = new char[] { 'a' };
        char[] charArray49 = strBuilder45.getChars(charArray48);
        int int51 = strMatcher42.isMatch(charArray49, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.append(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setIgnoreEmptyTokens(true);
        boolean boolean58 = strList26.contains((java.lang.Object) strTokenizer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer57, "ionfalse1001.0\n\n4\n");
        boolean boolean62 = strBuilder60.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "10\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "10\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[1, 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[#4#a4#]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test11123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11123");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteFirst(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        char[] charArray31 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder23.replace(strMatcher40, "", 2, (int) (short) 100, 10);
        char[] charArray51 = strBuilder23.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        java.lang.String str56 = strBuilder55.getNullText();
        char[] charArray58 = new char[] { 'a' };
        char[] charArray59 = strBuilder55.getChars(charArray58);
        int int63 = strMatcher52.isMatch(charArray59, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder5.append(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder5.append((long) 100);
        char[] charArray69 = strBuilder68.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, "100.01210\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str74 = strBuilder73.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteAll(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.setNewLineText("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.deleteCharAt((int) '\000');
        char[] charArray85 = strBuilder80.toCharArray();
        int int87 = strMatcher72.isMatch(charArray85, 86);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "false100");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "false100");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[f, a, l, s, e, 1, 0, 0]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "rue");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "rue");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[r, u, e]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test11124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11124");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        int int14 = strBuilder12.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendSeparator(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str20 = strTokenizer19.getContent();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer19.reset(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, "a");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        int int32 = strTokenizer30.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        java.lang.String str36 = strBuilder35.getNullText();
        char[] charArray38 = new char[] { 'a' };
        char[] charArray39 = strBuilder35.getChars(charArray38);
        char[] charArray44 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray45 = strBuilder35.getChars(charArray44);
        java.io.Reader reader46 = strBuilder35.asReader();
        reader46.mark(10);
        reader46.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        char[] charArray59 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.appendln(charArray59);
        int int62 = reader46.read(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer30.reset(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder12.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        java.lang.String str71 = strTokenizer67.toString();
        int int72 = strTokenizer67.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StrTokenizer[4#4]" + "'", str71, "StrTokenizer[4#4]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test11125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11125");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("hi!");
        java.lang.String str37 = strTokenizer36.nextToken();
        java.util.List<java.lang.String> strList38 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer36.setTrimmerMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("aa", strMatcher25, strMatcher39);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        java.lang.String str54 = strTokenizer50.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse", strMatcher39, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder20.deleteFirst(strMatcher55);
        boolean boolean59 = strBuilder20.contains('#');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "#4#a4#" + "'", str54, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test11126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11126");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.reverse();
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder7.append(stringBuffer52, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append(stringBuffer52);
        int int59 = strBuilder0.indexOf("StrTokenizer[not tokenized yet]", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder0.insert((int) (byte) 10, (float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder0.appendSeparator('a', 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder0.appendPadding((int) (byte) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder0.replaceAll('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.delete((int) '\000', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendSeparator("java.io.IOException: java.io.IOException: false", 18);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test11127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11127");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', ' ');
        java.lang.String str41 = strBuilder36.substring(37);
        java.lang.StringBuffer stringBuffer42 = strBuilder36.toStringBuffer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "0\n1false0\n\n#" + "'", str41, "0\n1false0\n\n#");
        org.junit.Assert.assertNotNull(stringBuffer42);
        org.junit.Assert.assertEquals(stringBuffer42.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n#");
    }

    @Test
    public void test11128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11128");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        java.io.Reader reader7 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendln(false);
        java.lang.String str10 = strBuilder9.toString();
        java.lang.String str12 = strBuilder9.leftString((int) '0');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.insert(109, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 109");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "100.0false\n" + "'", str10, "100.0false\n");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "100.0false\n" + "'", str12, "100.0false\n");
    }

    @Test
    public void test11129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11129");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder36.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder36.replaceFirst("4", "java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append(true);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setDelimiterString("hi!");
        java.lang.String str74 = strTokenizer73.nextToken();
        java.util.List<java.lang.String> strList75 = strTokenizer73.getTokenList();
        boolean boolean77 = strList75.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str80 = strTokenizer79.getContent();
        boolean boolean81 = strList75.equals((java.lang.Object) strTokenizer79);
        int int82 = strTokenizer79.previousIndex();
        java.util.List<java.lang.String> strList83 = strTokenizer79.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder62.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList83, " 10\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "#4#a4#" + "'", str74, "#4#a4#");
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test11130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11130");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.setNewLineText(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.minimizeCapacity();
        char[] charArray16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.append(charArray16);
        java.util.stream.IntStream intStream18 = strBuilder10.chars();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(intStream18);
    }

    @Test
    public void test11131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11131");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.Object obj7 = strTokenizer6.clone();
        java.util.List<java.lang.String> strList8 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int12 = strBuilder9.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(' ');
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterString("hi!");
        java.lang.String str26 = strTokenizer25.nextToken();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder9.appendln((float) 1L);
        java.io.Writer writer31 = strBuilder9.asWriter();
        int int32 = strList8.lastIndexOf((java.lang.Object) strBuilder9);
        java.util.stream.Stream<java.lang.String> strStream33 = strList8.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = strList8.set(40, "java.io.IOException: #4#a4#");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 40, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#4#a4#" + "'", str26, "#4#a4#");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strStream33);
    }

    @Test
    public void test11132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11132");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        int int7 = strTokenizer5.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        java.lang.Class<?> wildcardClass11 = strMatcher10.getClass();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test11133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11133");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        reader13.reset();
        int int18 = reader13.read();
        reader13.mark(6);
        boolean boolean21 = reader13.markSupported();
        reader13.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test11134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11134");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder19.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder19.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln('a');
        boolean boolean36 = strBuilder15.equalsIgnoreCase(strBuilder35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.deleteCharAt(2);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test11135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11135");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        boolean boolean4 = strTokenizer1.hasNext();
        int int5 = strTokenizer1.size();
        boolean boolean6 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer1.reset("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        int int9 = strTokenizer8.previousIndex();
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test11136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11136");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("se#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test11137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11137");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        java.lang.String str24 = strBuilder23.getNullText();
        char[] charArray26 = new char[] { 'a' };
        char[] charArray27 = strBuilder23.getChars(charArray26);
        int int29 = strMatcher20.isMatch(charArray27, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer16.setDelimiterMatcher(strMatcher20);
        java.lang.Object obj31 = strTokenizer30.clone();
        boolean boolean32 = strTokenizer30.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer30.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setEmptyTokenAsNull(true);
        java.util.List<java.lang.String> strList37 = strTokenizer36.getTokenList();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strList37);
    }

    @Test
    public void test11138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11138");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray19);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        java.util.Iterator<java.lang.String> strItor25 = strList24.iterator();
        boolean boolean26 = strList12.containsAll((java.util.Collection<java.lang.String>) strList24);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList12.replaceAll(strUnaryOperator27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test11139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11139");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strBuilder9.asTokenizer();
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11140");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.replaceAll('4', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.ensureCapacity((int) '#');
        java.io.Reader reader41 = strBuilder38.asReader();
        java.util.stream.IntStream intStream42 = strBuilder38.codePoints();
        java.lang.String str43 = strBuilder38.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.appendSeparator('I', 24);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(reader41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test11141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11141");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("hi!");
        java.lang.String str34 = strTokenizer33.nextToken();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        boolean boolean37 = strList35.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str40 = strTokenizer39.getContent();
        boolean boolean41 = strList35.equals((java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean43 = strList35.equals((java.lang.Object) strMatcher42);
        java.util.stream.Stream<java.lang.String> strStream44 = strList35.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.insert(0, (double) (byte) 100);
        java.io.Reader reader52 = strBuilder51.asReader();
        boolean boolean53 = strList35.remove((java.lang.Object) reader52);
        java.lang.String str55 = strList35.remove(1);
        boolean boolean56 = strList4.containsAll((java.util.Collection<java.lang.String>) strList35);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        int int70 = strTokenizer68.size();
        java.lang.String str71 = strTokenizer68.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer68.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList74 = strTokenizer68.getTokenList();
        java.lang.Object[] objArray75 = strList74.toArray();
        boolean boolean76 = strList35.addAll((java.util.Collection<java.lang.String>) strList74);
        java.util.stream.Stream<java.lang.String> strStream77 = strList35.parallelStream();
        int int78 = strList35.size();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strStream44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "#4#" + "'", str71, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[#4#, 4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[#4#, 4#]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strStream77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 3 + "'", int78 == 3);
    }

    @Test
    public void test11142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11142");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer33.set("10\n\n3#####a##############################################");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test11143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11143");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        int int15 = strBuilder13.indexOf("1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.insert(4, (float) 32);
        java.io.Writer writer19 = strBuilder18.asWriter();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strBuilder18.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.appendSeparator('.', 59);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test11144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11144");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(strMatcher10, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int27 = strBuilder22.indexOf(strMatcher25, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.replaceFirst(strMatcher25, "va.io.IOExceptionfalse1001.");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendln((long) 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder5.deleteCharAt(16);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        int int43 = strBuilder39.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append("#4#a4#");
        java.lang.String str58 = strBuilder51.leftString((int) (short) 100);
        int int60 = strBuilder51.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder51.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder51.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int79 = strBuilder76.lastIndexOf(strMatcher77, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder51.replaceFirst(strMatcher77, "#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder50.replaceFirst(strMatcher77, "#4#");
        boolean boolean84 = strBuilder5.equals((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder50.appendln(18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strBuilder86.asTokenizer();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "#4#a4#" + "'", str58, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer87);
    }

    @Test
    public void test11145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11145");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        java.util.stream.IntStream intStream5 = strBuilder2.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("1truefalse0\nzinekoTrtSeslaf true");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.replaceAll("#4", " a10\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendSeparator("n: StrTokenizer[not tokenized yet]", "1false0\nfalse");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("hi!");
        boolean boolean31 = strTokenizer28.isIgnoreEmptyTokens();
        java.lang.String str32 = strTokenizer28.next();
        int int33 = strList18.indexOf((java.lang.Object) strTokenizer28);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        int int56 = strBuilder46.indexOf(strMatcher54);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher54, strMatcher69);
        boolean boolean71 = strList18.equals((java.lang.Object) strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.trim();
        java.lang.Object[] objArray84 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.appendAll(objArray84);
        char[] charArray86 = strBuilder82.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray86);
        boolean boolean88 = strList18.equals((java.lang.Object) charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder2.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer90, "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder2.appendSeparator('.');
        java.lang.Class<?> wildcardClass95 = strBuilder94.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test11146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11146");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert(1, (float) (short) -1);
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln(strBuilder46, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.insert(2, (java.lang.Object) strBuilder56);
        char[] charArray58 = strBuilder51.toCharArray();
        writer36.write(charArray58, 0, 6);
        writer36.flush();
        // The following exception was thrown during execution in test generation
        try {
            writer36.write("100.012true", (int) (short) 10, 36);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "10\nhi!1.0java.io.IOExceptionfalse1001.0\n35.0\nhi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "10\nhi!1.0java.io.IOExceptionfalse1001.0\n35.0\nhi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[1, 0, \n, h, i, !, 1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, h, i, !]");
    }

    @Test
    public void test11147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11147");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        java.lang.String str12 = strTokenizer8.next();
        java.lang.String str13 = strTokenizer8.previous();
        boolean boolean14 = strTokenizer8.hasPrevious();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#4#a4#" + "'", str13, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test11148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11148");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.insert(0, charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.setLength(44);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.replace(strMatcher53, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder41.append((java.lang.Object) strTokenizer59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder41.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder41.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test11149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11149");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write("0java.io.IOExceptionfalse100", 0, 0);
        writer37.flush();
        writer37.write("0.012true104444444444444444444444444444444444444444444444");
        writer37.write((int) '.');
        writer37.write("4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        java.lang.String str69 = strBuilder68.getNullText();
        char[] charArray71 = new char[] { 'a' };
        char[] charArray72 = strBuilder68.getChars(charArray71);
        char[] charArray77 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray78 = strBuilder68.getChars(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray77);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray77);
        writer37.write(charArray77);
        writer37.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher81);
    }

    @Test
    public void test11150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11150");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        int int45 = strBuilder36.lastIndexOf("10\n\n", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test11151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11151");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        java.util.stream.IntStream intStream6 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int9 = strBuilder5.lastIndexOf(strMatcher8);
        java.lang.String str12 = strBuilder5.midString((int) ' ', 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher16);
        int int19 = strTokenizer18.size();
        int int20 = strTokenizer18.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer18.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.replace(strMatcher23, "", 35, 53, 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
    }

    @Test
    public void test11152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11152");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (byte) 0);
        java.io.Reader reader34 = strBuilder29.asReader();
        reader34.reset();
        reader34.close();
        reader34.mark(46);
        reader34.reset();
        reader34.reset();
        boolean boolean41 = reader34.markSupported();
        reader34.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test11153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11153");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n", "a");
        java.lang.String str3 = strTokenizer2.getContent();
        java.lang.Object obj4 = strTokenizer2.clone();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n" + "'", str3, "trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n");
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11154");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.trim();
        java.lang.Object[] objArray39 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendAll(objArray39);
        char[] charArray41 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.append((int) (short) 10);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str62 = strTokenizer61.getContent();
        boolean boolean63 = strList57.equals((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor64 = strList57.listIterator();
        int int65 = strList57.size();
        int int66 = strList57.size();
        java.lang.Object[] objArray67 = strList57.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder26.appendWithSeparators(objArray67, "0.1");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[#4#a4#, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[#4#a4#, hi!]");
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test11155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11155");
        java.io.IOException iOException1 = new java.io.IOException("2.02");
    }

    @Test
    public void test11156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11156");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterChar('0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset("o.IOExceptionfalse1001.0\n35.0\ntrue#4#a4#zi");
        boolean boolean50 = strTokenizer49.hasNext();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test11157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11157");
        char[] charArray7 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        int int18 = strBuilder8.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList23 = strTokenizer20.getTokenList();
        java.lang.Object[] objArray24 = strList23.toArray();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[java., o.IOExcept, on: StrToken, zer[not token, zed yet]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[java., o.IOExcept, on: StrToken, zer[not token, zed yet]]");
    }

    @Test
    public void test11158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11158");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        java.lang.String str14 = strBuilder13.getNullText();
        char[] charArray16 = new char[] { 'a' };
        char[] charArray17 = strBuilder13.getChars(charArray16);
        char[] charArray22 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray23 = strBuilder13.getChars(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int37 = strBuilder34.lastIndexOf(strMatcher35, (int) (short) 10);
        boolean boolean38 = strBuilder13.contains(strMatcher35);
        int int39 = strBuilder9.lastIndexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.append((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.insert((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.insert(3, "#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder9.appendFixedWidthPadRight((java.lang.Object) strBuilder55, (int) '1', '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder9.setNewLineText("StrTokenizer[]");
        java.util.stream.IntStream intStream61 = strBuilder60.chars();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
    }

    @Test
    public void test11159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11159");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        int int14 = strBuilder12.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendSeparator('.', 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadLeft((int) '3', 30, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.clear();
        java.lang.Throwable throwable32 = null;
        java.io.IOException iOException33 = new java.io.IOException("", throwable32);
        java.io.IOException iOException34 = new java.io.IOException("#4#a4#", throwable32);
        java.io.IOException iOException35 = new java.io.IOException(throwable32);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1.0f, iOException35, false, 100, strBuilder38 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder28.appendWithSeparators(objArray39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendln("[not ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setTrimmerMatcher(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer64.setIgnoredMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("StrTokenizer[eslf48]");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getDelimiterMatcher();
        int int72 = strBuilder55.indexOf(strMatcher70, 47);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder19.replaceAll(strMatcher70, "eslaf");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charMatcher('.');
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: java.io.IOException: 59.0", strMatcher77, strMatcher79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder19.replaceAll(strMatcher77, " ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test11160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11160");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '0', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setQuoteChar('0');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        java.lang.String str43 = strBuilder42.getNullText();
        char[] charArray45 = new char[] { 'a' };
        char[] charArray46 = strBuilder42.getChars(charArray45);
        char[] charArray51 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray52 = strBuilder42.getChars(charArray51);
        java.io.Reader reader53 = strBuilder42.asReader();
        reader53.reset();
        long long56 = reader53.skip((long) (byte) -1);
        int int57 = reader53.read();
        boolean boolean58 = reader53.ready();
        boolean boolean59 = reader53.ready();
        reader53.close();
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("hi!");
        java.lang.String str78 = strBuilder77.getNullText();
        char[] charArray80 = new char[] { 'a' };
        char[] charArray81 = strBuilder77.getChars(charArray80);
        char[] charArray86 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray87 = strBuilder77.getChars(charArray86);
        int int91 = strMatcher74.isMatch(charArray86, (int) (short) 100, (int) (short) 1, (int) (byte) 10);
        int int92 = reader53.read(charArray86);
        int int96 = strMatcher39.isMatch(charArray86, 91, 74, (int) (short) -1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[a]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test11161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11161");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(strMatcher10, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int27 = strBuilder22.indexOf(strMatcher25, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.replaceFirst(strMatcher25, "va.io.IOExceptionfalse1001.");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln(10);
        java.lang.String str45 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.append((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.appendNewLine();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "100.01210\n" + "'", str45, "100.01210\n");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test11162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11162");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("100.0false", 11);
        int int16 = strBuilder15.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.ensureCapacity(24);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test11163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11163");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendPadding(66, ' ');
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        int int23 = strTokenizer19.nextIndex();
        int int24 = strTokenizer19.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer19.setIgnoreEmptyTokens(false);
        int int27 = strTokenizer19.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer19.setIgnoredChar('4');
        java.lang.String[] strArray30 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder10.appendAll((java.lang.Object[]) strArray30);
        java.lang.StringBuffer stringBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(stringBuffer32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        java.lang.String str50 = strBuilder34.midString((int) (byte) 1, (-1));
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder34.replaceFirst(strMatcher63, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.clear();
        char[] charArray75 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.appendln(charArray75);
        int int79 = strMatcher63.isMatch(charArray75, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder33.deleteAll(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder33.setNewLineText("1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder33.insert((int) (short) 10, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder33.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder33.appendln((double) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test11164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11164");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        boolean boolean47 = strList26.add("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.clear();
        java.lang.Throwable throwable55 = null;
        java.io.IOException iOException56 = new java.io.IOException("", throwable55);
        java.io.IOException iOException57 = new java.io.IOException("#4#a4#", throwable55);
        java.io.IOException iOException58 = new java.io.IOException(throwable55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 1.0f, iOException58, false, 100, strBuilder61 };
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder51.appendWithSeparators(objArray62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strBuilder71.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setIgnoreEmptyTokens(false);
        boolean boolean75 = strTokenizer74.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray78 = strTokenizer77.getTokenArray();
        int int79 = strList26.lastIndexOf((java.lang.Object) strArray78);
        boolean boolean81 = strList26.remove((java.lang.Object) true);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator82 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList26.replaceAll(strUnaryOperator82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test11165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11165");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.setNewLineText(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append(59);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test11166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11166");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str28 = strBuilder27.getNullText();
        char[] charArray30 = new char[] { 'a' };
        char[] charArray31 = strBuilder27.getChars(charArray30);
        char[] charArray36 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray37 = strBuilder27.getChars(charArray36);
        java.io.Reader reader38 = strBuilder27.asReader();
        reader38.mark((int) (byte) 0);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        int int63 = strBuilder53.indexOf(strMatcher61);
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher61, strMatcher76);
        int int78 = reader38.read(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer13.reset(charArray47);
        java.lang.String str80 = strTokenizer79.next();
        java.lang.String str81 = strTokenizer79.nextToken();
        boolean boolean82 = strTokenizer79.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "#4#a4#" + "'", str80, "#4#a4#");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test11167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11167");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        boolean boolean3 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("hi!");
        java.lang.String str7 = strBuilder6.getNullText();
        char[] charArray9 = new char[] { 'a' };
        char[] charArray10 = strBuilder6.getChars(charArray9);
        char[] charArray15 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray16 = strBuilder6.getChars(charArray15);
        java.io.Reader reader17 = strBuilder6.asReader();
        reader17.mark(10);
        reader17.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        char[] charArray30 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.appendln(charArray30);
        int int33 = reader17.read(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer1.reset(charArray30);
        int int38 = strTokenizer1.size();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test11168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11168");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength(34);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException("", throwable28);
        java.io.IOException iOException30 = new java.io.IOException("#4#a4#", throwable28);
        java.io.IOException iOException31 = new java.io.IOException(throwable28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1.0f, iOException31, false, 100, strBuilder34 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder24.appendWithSeparators(objArray35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(4, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.setLength((int) '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst('4');
        boolean boolean53 = strBuilder50.isEmpty();
        char[] charArray54 = strBuilder50.toCharArray();
        char[] charArray55 = strBuilder20.getChars(charArray54);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "1\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a0.0j0.1\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "1\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a0.0j0.1\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[1, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, a, 0, ., 0, j, 0, ., 1, \000, \000, \000, \000, \000, \000]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "1\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a0.0j0.1\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "1\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a0.0j0.1\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[1, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, a, 0, ., 0, j, 0, ., 1, \000, \000, \000, \000, \000, \000]");
    }

    @Test
    public void test11169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11169");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        boolean boolean11 = strBuilder8.isEmpty();
        java.lang.String str13 = strBuilder8.rightString((int) 'a');
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder8.replaceAll(strMatcher26, "a");
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        java.lang.String str45 = strBuilder44.getNullText();
        char[] charArray47 = new char[] { 'a' };
        char[] charArray48 = strBuilder44.getChars(charArray47);
        char[] charArray53 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray54 = strBuilder44.getChars(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray54);
        int int56 = strList41.indexOf((java.lang.Object) charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("1.0", strMatcher26, strMatcher60);
        int int62 = strTokenizer61.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10\n\n" + "'", str13, "10\n\n");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test11170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11170");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str18 = strBuilder17.getNullText();
        char[] charArray20 = new char[] { 'a' };
        char[] charArray21 = strBuilder17.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.deleteFirst(strMatcher36);
        int int39 = strBuilder17.indexOf(strMatcher36);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        java.lang.String str51 = strTokenizer50.nextToken();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        boolean boolean54 = strList52.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str57 = strTokenizer56.getContent();
        boolean boolean58 = strList52.equals((java.lang.Object) strTokenizer56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean60 = strList52.equals((java.lang.Object) strMatcher59);
        java.util.stream.Stream<java.lang.String> strStream61 = strList52.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.insert(0, (double) (byte) 100);
        java.io.Reader reader69 = strBuilder68.asReader();
        boolean boolean70 = strList52.remove((java.lang.Object) reader69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder17.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder17.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder2.append((java.lang.CharSequence) strBuilder73, 6, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder2.appendSeparator('3', 44);
        java.io.IOException iOException82 = new java.io.IOException("0\nzinekoTrtSeslaf ");
        java.io.IOException iOException83 = new java.io.IOException("0java.io.IOExceptionfalse100", (java.lang.Throwable) iOException82);
        java.lang.Throwable[] throwableArray84 = iOException82.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder2.appendAll((java.lang.Object[]) throwableArray84);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.append("", 35, 53);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "#4#a4#" + "'", str51, "#4#a4#");
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test11171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11171");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setQuoteChar('#');
        java.lang.String str16 = strTokenizer15.next();
        java.lang.String[] strArray17 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append(false);
        java.lang.String str24 = strBuilder23.getNewLineText();
        java.lang.String str26 = strBuilder23.leftString((int) '4');
        java.io.Reader reader27 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setQuoteChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str33 = strBuilder32.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        java.lang.String str38 = strBuilder37.getNullText();
        char[] charArray40 = new char[] { 'a' };
        char[] charArray41 = strBuilder37.getChars(charArray40);
        int int45 = strMatcher34.isMatch(charArray41, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder32.replaceAll(strMatcher34, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer31.setTrimmerMatcher(strMatcher34);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int70 = strBuilder65.indexOf(strMatcher68, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer31.setTrimmerMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder23.appendFixedWidthPadRight((java.lang.Object) strMatcher68, (int) '0', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer15.setIgnoredMatcher(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "a4" + "'", str16, "a4");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "false" + "'", str26, "false");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test11172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11172");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int7 = strBuilder4.indexOf(strMatcher6);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append(false);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setDelimiterString("hi!");
        boolean boolean25 = strTokenizer22.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder9.appendFixedWidthPadRight((java.lang.Object) strTokenizer22, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) 10);
        boolean boolean39 = strBuilder9.equalsIgnoreCase(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(false);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        java.lang.String str61 = strBuilder60.getNullText();
        char[] charArray63 = new char[] { 'a' };
        char[] charArray64 = strBuilder60.getChars(charArray63);
        char[] charArray69 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray70 = strBuilder60.getChars(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray70);
        int int72 = strList57.indexOf((java.lang.Object) charArray70);
        char[] charArray73 = strBuilder44.getChars(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "1false0\nfalse");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer3.reset(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("1false01\n49.0", strMatcher1, strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
    }

    @Test
    public void test11173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11173");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        java.lang.String str24 = strBuilder20.leftString(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.trim();
        java.lang.Object[] objArray37 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendAll(objArray37);
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder20.append(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str50 = strBuilder48.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        java.lang.String str54 = strBuilder53.getNullText();
        char[] charArray56 = new char[] { 'a' };
        char[] charArray57 = strBuilder53.getChars(charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.append((java.lang.Object) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder48.replaceAll('#', ' ');
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder48.deleteAll(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '#', '0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str24, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test11174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11174");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int42 = strBuilder28.lastIndexOf(strMatcher40, (int) 'a');
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher56, strMatcher60);
        int int62 = strBuilder28.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder12.append((java.lang.CharSequence) strBuilder28);
        boolean boolean65 = strBuilder12.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder12.trim();
        java.lang.Object obj67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder12.appendln(obj67);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder12.appendFixedWidthPadRight(39, 25, '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test11175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11175");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        java.lang.String[] strArray8 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        java.lang.String str23 = strTokenizer19.next();
        int int24 = strList9.indexOf((java.lang.Object) strTokenizer19);
        java.util.ListIterator<java.lang.String> strItor26 = strList9.listIterator((int) (byte) 0);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        boolean boolean44 = strTokenizer41.isIgnoreEmptyTokens();
        java.lang.String str45 = strTokenizer41.next();
        int int46 = strList31.indexOf((java.lang.Object) strTokenizer41);
        java.util.ListIterator<java.lang.String> strItor48 = strList31.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor49 = strList31.iterator();
        boolean boolean50 = strList9.removeAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Iterator<java.lang.String> strItor51 = strList9.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strItor51, (int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append('#');
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("hi!");
        boolean boolean70 = strTokenizer67.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer67.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder58.appendln((java.lang.Object) strTokenizer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder83.trim();
        java.lang.Object[] objArray85 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.appendAll(objArray85);
        char[] charArray87 = strBuilder83.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer71.reset(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer71.setQuoteChar('0');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer90.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#4#a4#" + "'", str23, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#4#a4#" + "'", str45, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
    }

    @Test
    public void test11176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11176");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        long long18 = reader13.skip(0L);
        long long20 = reader13.skip((long) 16);
        reader13.reset();
        boolean boolean22 = reader13.ready();
        int int23 = reader13.read();
        reader13.mark((int) ':');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test11177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11177");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        boolean boolean27 = strBuilder23.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.appendSeparator('4', 'a');
        boolean boolean34 = strBuilder32.contains(" 10\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test11178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11178");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.appendln('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendln(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.replace(26, 60, " falseStrTokenizaaaaaaaaaaaaaaaaaaaaaaaa100");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test11179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11179");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int53 = strBuilder48.indexOf(strMatcher51, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.replace(strMatcher51, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        boolean boolean59 = strBuilder29.contains(strMatcher51);
        int int61 = strBuilder29.indexOf("1.0java.io.IOExceptionfal");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder29.appendln("4#-1133333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333", 61, 4);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test11180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11180");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append(false);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setDelimiterString("hi!");
        boolean boolean80 = strTokenizer77.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder64.appendFixedWidthPadRight((java.lang.Object) strTokenizer77, 10, ' ');
        int int84 = strTokenizer77.previousIndex();
        boolean boolean85 = strTokenizer77.isIgnoreEmptyTokens();
        java.lang.String[] strArray86 = strTokenizer77.getTokenArray();
        java.lang.String str87 = strTokenizer77.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder57.appendAll((java.util.Iterator<java.lang.String>) strTokenizer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.append('I');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder88.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.appendln(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strBuilder94.asTokenizer();
        java.util.List<java.lang.String> strList96 = strTokenizer95.getTokenList();
        boolean boolean97 = strList96.isEmpty();
        boolean boolean99 = strList96.add("1111111111");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test11181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11181");
        char[] charArray7 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        int int18 = strBuilder8.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException:  10\n\n", strMatcher20);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer21.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
    }

    @Test
    public void test11182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11182");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append(false);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("hi!");
        boolean boolean29 = strTokenizer26.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder13.appendFixedWidthPadRight((java.lang.Object) strTokenizer26, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln((int) (short) 10);
        boolean boolean43 = strBuilder13.equalsIgnoreCase(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder13.reverse();
        java.lang.StringBuffer stringBuffer45 = strBuilder44.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder0.append(stringBuffer45, (int) (byte) 0, 2);
        boolean boolean50 = strBuilder0.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.setNullText("java.io.IOException: 1false0\n1.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder0.insert(91, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 91");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test11183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11183");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        int int10 = strBuilder9.capacity();
        int int11 = strBuilder9.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendNull();
        char[] charArray13 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        java.lang.String str15 = strTokenizer14.getContent();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "10\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "10\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[1, 0, \n, \n]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10\n\n" + "'", str15, "10\n\n");
    }

    @Test
    public void test11184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11184");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        char[] charArray23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(charArray23);
        boolean boolean25 = strBuilder22.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        boolean boolean31 = strBuilder30.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        java.lang.String str37 = strBuilder36.getNullText();
        char[] charArray39 = new char[] { 'a' };
        char[] charArray40 = strBuilder36.getChars(charArray39);
        int int42 = strMatcher33.isMatch(charArray40, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.append(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder22.insert((int) (byte) 1, charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer59);
        java.lang.String str63 = strBuilder47.midString((int) (byte) 1, (-1));
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder47.replaceFirst(strMatcher76, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer46.setQuoteMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\n", strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer12.setTrimmerMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer12.reset("StrTokenizer[not tokenized yet]\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer83);
    }

    @Test
    public void test11185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11185");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendSeparator("java.io.IOException: 59.0", 20);
        int int18 = strBuilder10.lastIndexOf('\000', 72);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder10.appendln('a');
        char[] charArray21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        int int24 = strBuilder10.indexOf(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 27 + "'", int24 == 27);
    }

    @Test
    public void test11186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11186");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(' ');
        java.util.stream.IntStream intStream19 = strBuilder18.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int22 = strBuilder18.lastIndexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int37 = strBuilder34.lastIndexOf(strMatcher35, (int) (short) -1);
        boolean boolean38 = strBuilder18.contains(strMatcher35);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher52, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher35, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "1.0java.io.IOExceptionfalse1001.0\n35.0\n1.0java");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer60.add("0\nhi!hi!truehi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher56);
    }

    @Test
    public void test11187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11187");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        java.lang.Throwable throwable15 = null;
        java.io.IOException iOException16 = new java.io.IOException("", throwable15);
        java.io.IOException iOException17 = new java.io.IOException("#4#a4#", throwable15);
        java.io.IOException iOException18 = new java.io.IOException(throwable15);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1.0f, iOException18, false, 100, strBuilder21 };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendWithSeparators(objArray22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer32 = strBuilder26.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder7.append(stringBuffer32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder33.asTokenizer();
        java.lang.String str36 = strBuilder33.substring(0);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        int int50 = strTokenizer48.size();
        java.lang.String str51 = strTokenizer48.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer48.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList54 = strTokenizer48.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        boolean boolean59 = strBuilder58.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        int int70 = strMatcher61.isMatch(charArray68, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.append(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setIgnoreEmptyTokens(true);
        boolean boolean77 = strTokenizer74.hasNext();
        boolean boolean78 = strList54.contains((java.lang.Object) strTokenizer74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer74.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder33.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer80, "10\n4444444444org.apache.commons.");
        boolean boolean84 = strBuilder82.contains('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(stringBuffer32);
        org.junit.Assert.assertEquals(stringBuffer32.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str36, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "#4#" + "'", str51, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test11188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11188");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("java.io.IOException");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('\n');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer1.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
    }

    @Test
    public void test11189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11189");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.reset("");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer9.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test11190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11190");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert((int) (byte) 0, false);
        java.util.Iterator<java.lang.String> strItor16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendWithSeparators(strItor16, " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException("", throwable28);
        java.io.IOException iOException30 = new java.io.IOException("#4#a4#", throwable28);
        java.io.IOException iOException31 = new java.io.IOException(throwable28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1.0f, iOException31, false, 100, strBuilder34 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder24.appendWithSeparators(objArray35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        java.util.stream.IntStream intStream51 = strBuilder50.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int54 = strBuilder50.lastIndexOf(strMatcher53);
        java.lang.StringBuffer stringBuffer55 = strBuilder50.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.append(stringBuffer55);
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder18.append((java.lang.CharSequence) strBuilder56);
        java.lang.String str61 = strBuilder56.midString(47, 100);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(intStream51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), " ");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "eslaf\neslaf\n0.1001eslafnoitpecxEOI.oi.avaj0.1 ");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test11191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11191");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append((double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.append((double) '0');
        java.lang.StringBuffer stringBuffer27 = strBuilder26.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replace((int) '.', 48, "1false0");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.appendPadding((int) (byte) 1, '4');
        boolean boolean44 = strBuilder26.equals(strBuilder43);
        int int45 = strBuilder43.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(stringBuffer27);
        org.junit.Assert.assertEquals(stringBuffer27.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n1.048.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 6 + "'", int45 == 6);
    }

    @Test
    public void test11192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11192");
        java.lang.String[] strArray2 = new java.lang.String[] { "0\nzinekoTrtSeslaf ", "a" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        boolean boolean5 = strList3.isEmpty();
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        java.lang.String str24 = strTokenizer20.next();
        int int25 = strList10.indexOf((java.lang.Object) strTokenizer20);
        java.util.ListIterator<java.lang.String> strItor27 = strList10.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor28 = strList10.iterator();
        java.lang.String[] strArray32 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        java.lang.String str47 = strTokenizer43.next();
        int int48 = strList33.indexOf((java.lang.Object) strTokenizer43);
        boolean boolean49 = strList10.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.ListIterator<java.lang.String> strItor50 = strList33.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        int int61 = strBuilder51.indexOf(strMatcher59);
        int int62 = strList33.indexOf((java.lang.Object) strBuilder51);
        int int63 = strList33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int67 = strBuilder64.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.setNullText("");
        int int76 = strList33.lastIndexOf((java.lang.Object) strBuilder75);
        boolean boolean77 = strList3.removeAll((java.util.Collection<java.lang.String>) strList33);
        boolean boolean79 = strList33.add("OExceptionfalse");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 3 + "'", int63 == 3);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test11193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11193");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        java.lang.String str16 = strBuilder0.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder19.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder0.append((java.lang.Object) strBuilder31);
        java.io.Writer writer33 = strBuilder0.asWriter();
        java.io.Writer writer35 = writer33.append('0');
        writer35.write(9);
        char[] charArray38 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        writer35.write(charArray38);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(strMatcher41);
    }

    @Test
    public void test11194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11194");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[100.0\n]", strMatcher1);
        java.lang.String str3 = strTokenizer2.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "StrTokenizer[100.0\n]" + "'", str3, "StrTokenizer[100.0\n]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
    }

    @Test
    public void test11195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11195");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("", "a4");
        java.lang.String str29 = strBuilder25.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1.0java.io.IOExceptionfalse1000" + "'", str29, "1.0java.io.IOExceptionfalse1000");
    }

    @Test
    public void test11196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11196");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '#', '0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setDelimiterChar('I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test11197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11197");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("#4#a4#");
        java.lang.String str6 = strTokenizer2.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer2.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer2.setDelimiterChar('1');
        boolean boolean11 = strTokenizer10.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer10.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
    }

    @Test
    public void test11198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11198");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("hi!");
        java.lang.String str19 = strTokenizer18.nextToken();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer18.setTrimmerMatcher(strMatcher21);
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        int int34 = strMatcher21.isMatch(charArray29, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) strMatcher35, 1, '#');
        int int39 = strBuilder38.length();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.delete(100, 44);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
    }

    @Test
    public void test11199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11199");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        int int16 = reader13.read();
        reader13.reset();
        reader13.close();
        long long20 = reader13.skip((long) 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test11200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11200");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.ensureCapacity(39);
        boolean boolean11 = strBuilder9.endsWith(".0jav");
        char[] charArray16 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray18 = strBuilder9.getChars(charArray16);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        java.lang.String str30 = strTokenizer29.nextToken();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        char[] charArray43 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray44 = strBuilder34.getChars(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        int int46 = strList31.indexOf((java.lang.Object) charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int52 = strTokenizer51.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer51.setTrimmerMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher50, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'e', ' ');
        char[] charArray60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.reset(charArray60);
        boolean boolean62 = strTokenizer59.hasNext();
        int int63 = strTokenizer59.size();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer59.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test11201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11201");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setEmptyTokenAsNull(true);
        boolean boolean28 = strTokenizer25.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer25.setQuoteChar(' ');
        java.lang.String str31 = strTokenizer25.next();
        boolean boolean32 = strTokenizer25.hasNext();
        boolean boolean33 = strTokenizer25.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test11202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11202");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendFixedWidthPadRight(48, 1, '0');
        boolean boolean37 = strBuilder30.contains('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.deleteCharAt(16);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendFixedWidthPadLeft((int) '3', 4, '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test11203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11203");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.replaceFirst("10\n\n", "1.0java.io.IOExceptionfalse1001.0");
        boolean boolean36 = strBuilder34.contains('I');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendSeparator('a', 51);
        int int42 = strBuilder40.lastIndexOf("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.trim();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test11204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11204");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = strBuilder41.substring(60);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test11205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11205");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        java.lang.String str37 = strBuilder36.toString();
        int int38 = strBuilder36.length();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "zinekoTrtSeslaf " + "'", str37, "zinekoTrtSeslaf ");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 16 + "'", int38 == 16);
    }

    @Test
    public void test11206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11206");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(false);
        boolean boolean14 = strBuilder11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.clear();
        int int23 = strBuilder21.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append("#4#a4#");
        java.lang.String str34 = strBuilder27.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.append(false);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        boolean boolean56 = strTokenizer53.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder40.appendFixedWidthPadRight((java.lang.Object) strTokenizer53, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.appendln((int) (short) 10);
        boolean boolean70 = strBuilder40.equalsIgnoreCase(strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder40.reverse();
        java.lang.StringBuffer stringBuffer72 = strBuilder71.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder27.append(stringBuffer72, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder25.append(stringBuffer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder16.appendln(stringBuffer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder16.appendSeparator("", "java.io.IOException: StrTokenizer[");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder16.replaceFirst("#4#a4#java.io.IOException: zinekoTrtSeslaf \n", ".0jav");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder16.appendSeparator('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder86.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.append((long) 59);
        int int91 = strBuilder89.lastIndexOf("0.01StrTokenizer[not toke");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(stringBuffer72);
        org.junit.Assert.assertEquals(stringBuffer72.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test11207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11207");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111", '3', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setQuoteMatcher(strMatcher5);
        java.lang.String str7 = strTokenizer3.next();
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111" + "'", str7, "001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111");
    }

    @Test
    public void test11208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11208");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        java.lang.String str16 = strBuilder0.midString((int) (byte) 1, (-1));
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.replaceFirst(strMatcher29, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder0.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder0.trim();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        java.lang.Throwable throwable44 = null;
        java.io.IOException iOException45 = new java.io.IOException("", throwable44);
        java.io.IOException iOException46 = new java.io.IOException("#4#a4#", throwable44);
        java.io.IOException iOException47 = new java.io.IOException(throwable44);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1.0f, iOException47, false, 100, strBuilder50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder40.appendWithSeparators(objArray51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append("java.io.IOException: ");
        boolean boolean64 = strBuilder60.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.appendSeparator('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int75 = strBuilder72.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int81 = strBuilder78.indexOf(strMatcher80);
        int int82 = strBuilder72.indexOf(strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder69.appendln((java.lang.Object) strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer36.setQuoteMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder34.appendAll((java.util.Iterator<java.lang.String>) strTokenizer36);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder34.insert(25, "3#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder88.appendFixedWidthPadLeft(44, 33, 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder88.appendFixedWidthPadRight((-1), 0, 'e');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test11209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11209");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test11210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11210");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert(4, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.clear();
        java.util.stream.IntStream intStream29 = strBuilder28.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.append(stringBuffer37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.deleteFirst('#');
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.appendAll((java.util.Iterator<java.lang.String>) strTokenizer50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append(4L);
        java.lang.String str56 = strBuilder51.midString((int) 'a', 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder28.appendln(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test11211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11211");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        boolean boolean19 = strBuilder18.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        java.lang.String str25 = strBuilder24.getNullText();
        char[] charArray27 = new char[] { 'a' };
        char[] charArray28 = strBuilder24.getChars(charArray27);
        int int30 = strMatcher21.isMatch(charArray28, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder18.append(charArray28);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int47 = strBuilder44.indexOf(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int53 = strBuilder50.indexOf(strMatcher52);
        int int54 = strBuilder44.indexOf(strMatcher52);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher52, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int75 = strBuilder72.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder77.replace(strMatcher82, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int89 = strBuilder71.lastIndexOf(strMatcher82, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer69.setTrimmerMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer14.setQuoteMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer("true\n", strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer8.setTrimmerMatcher(strMatcher82);
        boolean boolean94 = strTokenizer93.hasNext();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test11212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11212");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        boolean boolean5 = strTokenizer3.hasPrevious();
        int int6 = strTokenizer3.previousIndex();
        boolean boolean7 = strTokenizer3.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        java.lang.String str11 = strBuilder10.getNullText();
        char[] charArray13 = new char[] { 'a' };
        char[] charArray14 = strBuilder10.getChars(charArray13);
        char[] charArray19 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray20 = strBuilder10.getChars(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray20);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer21.reset(charArray28);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher46, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer21.setIgnoredMatcher(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer3.setIgnoredMatcher(strMatcher46);
        java.lang.String str54 = strTokenizer3.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer3.setDelimiterString("\000\000\000\000\000\000\000\000\000");
        boolean boolean57 = strTokenizer3.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test11213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11213");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((long) '#');
        java.util.stream.IntStream intStream34 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.clear();
        int int45 = strBuilder43.capacity();
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(stringBuffer46, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.insert(0, false);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int74 = strBuilder71.indexOf(strMatcher73);
        int int75 = strBuilder65.indexOf(strMatcher73);
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, strMatcher86);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher73, strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder52.append(charArray59);
        int int95 = strBuilder92.indexOf('a', 100);
        java.lang.StringBuffer stringBuffer96 = strBuilder92.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder26.append(stringBuffer96, 88, 59);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 32 + "'", int45 == 32);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer96);
        org.junit.Assert.assertEquals(stringBuffer96.toString(), "false\n#4#a4#");
    }

    @Test
    public void test11214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11214");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.write("0java.io.IOExceptionfalse100", 4, 4);
        writer9.flush();
        java.io.Writer writer31 = writer9.append('4');
        writer9.close();
        writer9.write("1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n");
        writer9.close();
        writer9.close();
        writer9.write("2.0 ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer31);
    }

    @Test
    public void test11215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11215");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(strBuilder26, (int) 'a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str31 = strBuilder30.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str36 = strBuilder34.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder23.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(4);
        int int52 = strBuilder49.capacity();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder49.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 66 + "'", int52 == 66);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test11216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11216");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("hi!");
        boolean boolean19 = strTokenizer16.isIgnoreEmptyTokens();
        java.lang.String str20 = strTokenizer16.next();
        int int21 = strList6.indexOf((java.lang.Object) strTokenizer16);
        int int22 = strTokenizer16.nextIndex();
        java.util.List<java.lang.String> strList23 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.setDelimiterString("1false0");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int39 = strBuilder36.lastIndexOf(strMatcher37, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer16.setIgnoredMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(" falsezinekoTrtSeslaf \n", strMatcher1, strMatcher37);
        boolean boolean42 = strTokenizer41.hasPrevious();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test11217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11217");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln(10);
        java.lang.String str15 = strBuilder10.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder(66);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendPadding(0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendln((java.lang.Object) strBuilder18);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray27 = strBuilder24.toCharArray(28, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100.01210\n" + "'", str15, "100.01210\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test11218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11218");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean29 = strBuilder27.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        char[] charArray40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln(charArray40);
        boolean boolean42 = strBuilder39.isEmpty();
        java.lang.String str44 = strBuilder39.rightString((int) 'a');
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.replaceAll(strMatcher57, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder31.appendln((java.lang.Object) strMatcher57);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence63 = strBuilder60.subSequence(42, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -41");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "10\n\n" + "'", str44, "10\n\n");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test11219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11219");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append("#4#a4#");
        boolean boolean32 = strBuilder25.equals(strBuilder31);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        int int55 = strBuilder45.indexOf(strMatcher53);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher53, strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder31.replaceFirst(strMatcher53, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln("a");
        java.lang.String str75 = strBuilder71.leftString(35);
        java.lang.String str77 = strBuilder71.leftString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder71.appendln('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceAll('#', 'e');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "#4#a4#a\n" + "'", str75, "#4#a4#a\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test11220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11220");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append("eptionfalse1001.0\n35.0\n1false0\n\n", 32, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln((long) '#');
        java.util.stream.IntStream intStream23 = strBuilder20.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int27 = strBuilder25.lastIndexOf(strMatcher26);
        int int28 = strBuilder15.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) 10);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getIgnoredMatcher();
        int int53 = strBuilder34.indexOf(strMatcher51, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder34.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.trim();
        java.lang.Object[] objArray68 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendAll(objArray68);
        char[] charArray70 = strBuilder66.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder55.append(charArray70);
        char[] charArray72 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = strMatcher26.isMatch(charArray72, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " 10\n0java.io.IOExceptionfalse100\n100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " 10\n0java.io.IOExceptionfalse100\n100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ , 1, 0, \n, 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, \n, 1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strMatcher73);
    }

    @Test
    public void test11221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11221");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(strMatcher10, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int27 = strBuilder22.indexOf(strMatcher25, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.replaceFirst(strMatcher25, "va.io.IOExceptionfalse1001.");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendln((long) 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder5.deleteCharAt(16);
        boolean boolean35 = strBuilder33.endsWith("java.");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((int) '\000');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test11222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11222");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray26);
        int int34 = strTokenizer33.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer33.getTrimmerMatcher();
        int int36 = strTokenizer33.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test11223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11223");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        java.io.Reader reader29 = strBuilder28.asReader();
        int int30 = reader29.read();
        long long32 = reader29.skip((long) (short) -1);
        reader29.reset();
        boolean boolean34 = reader29.markSupported();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 49 + "'", int30 == 49);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test11224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11224");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.replaceAll("10\n\n", "#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendSeparator(' ', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(".0j", ' ', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder14.appendln((java.lang.Object) '0');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test11225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11225");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        int int29 = strBuilder19.indexOf(strMatcher27);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher27, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer4.setDelimiterMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer4.setIgnoreEmptyTokens(true);
        boolean boolean47 = strTokenizer4.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test11226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11226");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendln(true);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getTrimmerMatcher();
        int int26 = strBuilder6.indexOf(strMatcher24, 4);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int48 = strBuilder43.indexOf(strMatcher46, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher46);
        int int51 = strBuilder6.indexOf(strMatcher46, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.clear();
        java.lang.Throwable throwable59 = null;
        java.io.IOException iOException60 = new java.io.IOException("", throwable59);
        java.io.IOException iOException61 = new java.io.IOException("#4#a4#", throwable59);
        java.io.IOException iOException62 = new java.io.IOException(throwable59);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 1.0f, iOException62, false, 100, strBuilder65 };
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.appendWithSeparators(objArray66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln((float) '#');
        java.lang.String str74 = strBuilder72.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.append((double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        java.lang.String str81 = strBuilder79.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.appendFixedWidthPadLeft((int) (short) 100, 27, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder79.replaceAll(strMatcher87, "StrTokenizer[#4#a4#]");
        int int91 = strBuilder76.indexOf(strMatcher87, 15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfal", strMatcher46, strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str74, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 19 + "'", int91 == 19);
    }

    @Test
    public void test11227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11227");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        java.lang.String str14 = strBuilder13.getNullText();
        char[] charArray16 = new char[] { 'a' };
        char[] charArray17 = strBuilder13.getChars(charArray16);
        char[] charArray18 = strBuilder10.getChars(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder10.append(6L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.insert(88, (float) 61);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test11228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11228");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.replaceAll("10\n\n", "#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("java.io.IOException", "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendSeparator("StrTokenizer[not tokenized yet]\n", 18);
        java.lang.String str23 = strBuilder20.substring(30, 112);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ed yet]\n" + "'", str23, "ed yet]\n");
    }

    @Test
    public void test11229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11229");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        java.lang.String str8 = strBuilder5.leftString((int) '4');
        java.lang.String str9 = strBuilder5.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) '#');
        java.util.stream.IntStream intStream17 = strBuilder14.chars();
        boolean boolean19 = strBuilder14.contains('1');
        java.lang.String str21 = strBuilder14.substring((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.append((java.lang.Object) strBuilder14);
        boolean boolean24 = strBuilder5.startsWith("java.io.IOException: StrTokenizer[100.0\n]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "false" + "'", str9, "false");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "35\n" + "'", str21, "35\n");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test11230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11230");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.deleteAll(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("0\nzinekoTrtSeslaf ", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer34, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setLength(44);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.deleteFirst(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        java.lang.String str44 = strBuilder42.leftString(190);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + " 10\n\n0\nzinekoTrtSeslaf \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000" + "'", str44, " 10\n\n0\nzinekoTrtSeslaf \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
    }

    @Test
    public void test11231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11231");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteFirst(strMatcher21);
        int int24 = strBuilder2.indexOf(strMatcher21);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.nextToken();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        boolean boolean39 = strList37.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str42 = strTokenizer41.getContent();
        boolean boolean43 = strList37.equals((java.lang.Object) strTokenizer41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean45 = strList37.equals((java.lang.Object) strMatcher44);
        java.util.stream.Stream<java.lang.String> strStream46 = strList37.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.insert(0, (double) (byte) 100);
        java.io.Reader reader54 = strBuilder53.asReader();
        boolean boolean55 = strList37.remove((java.lang.Object) reader54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder2.appendAll((java.lang.Iterable<java.lang.String>) strList37);
        java.lang.Object[] objArray57 = strList37.toArray();
        char[][] charArray58 = new char[][] {};
        char[][] charArray59 = new char[][] {};
        char[][] charArray60 = new char[][] {};
        char[][] charArray61 = new char[][] {};
        char[][] charArray62 = new char[][] {};
        char[][] charArray63 = new char[][] {};
        char[][][] charArray64 = new char[][][] { charArray58, charArray59, charArray60, charArray61, charArray62, charArray63 };
        // The following exception was thrown during execution in test generation
        try {
            char[][][] charArray65 = strList37.toArray(charArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "#4#a4#" + "'", str36, "#4#a4#");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[#4#a4#, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[#4#a4#, hi!]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertNotNull(charArray64);
    }

    @Test
    public void test11232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11232");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        char[] charArray25 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray26 = strBuilder16.getChars(charArray25);
        int int30 = strMatcher13.isMatch(charArray25, (int) (short) 100, (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "lse1001.0\n35.0\n1false0\n\n");
        java.lang.String str36 = strTokenizer35.next();
        java.lang.String str37 = strTokenizer35.previousToken();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "a4 4" + "'", str36, "a4 4");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "a4 4" + "'", str37, "a4 4");
    }

    @Test
    public void test11233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11233");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int23 = strBuilder20.lastIndexOf(strMatcher21, (int) (short) 10);
        int int25 = strBuilder4.indexOf(strMatcher21, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendln(10L);
        int int59 = strBuilder53.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.appendln(strBuilder62);
        java.io.Writer writer64 = strBuilder63.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        java.lang.String str68 = strBuilder67.getNullText();
        char[] charArray70 = new char[] { 'a' };
        char[] charArray71 = strBuilder67.getChars(charArray70);
        char[] charArray76 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray77 = strBuilder67.getChars(charArray76);
        writer64.write(charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder4.insert(0, charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, '4');
        java.lang.String[] strArray83 = strTokenizer82.getTokenArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(writer64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test11234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11234");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setEmptyTokenAsNull(false);
        java.lang.String[] strArray27 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.appendWithSeparators((java.lang.Object[]) strArray27, "1.0java.");
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        java.lang.String str41 = strTokenizer40.nextToken();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        java.lang.String str46 = strBuilder45.getNullText();
        char[] charArray48 = new char[] { 'a' };
        char[] charArray49 = strBuilder45.getChars(charArray48);
        char[] charArray54 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray55 = strBuilder45.getChars(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        int int57 = strList42.indexOf((java.lang.Object) charArray55);
        strList42.clear();
        java.lang.Object[] objArray59 = strList42.toArray();
        boolean boolean60 = strList42.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream61 = strList42.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder29.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList42, "0\n 10\n");
        java.util.Spliterator<java.lang.String> strSpliterator64 = strList42.spliterator();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strSpliterator64);
    }

    @Test
    public void test11235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11235");
        java.lang.Throwable throwable0 = null;
        java.io.IOException iOException1 = new java.io.IOException(throwable0);
        java.io.IOException iOException3 = new java.io.IOException("StrTokenizer[#4#a4#]");
        iOException1.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("java.io.IOException: StrTokenizer[not tokenized yet]");
        java.io.IOException iOException8 = new java.io.IOException(".0java.io.IOExceptionfalse1000", (java.lang.Throwable) iOException7);
        iOException1.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        java.lang.String str11 = iOException8.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.io.IOException: .0java.io.IOExceptionfalse1000" + "'", str11, "java.io.IOException: .0java.io.IOExceptionfalse1000");
    }

    @Test
    public void test11236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11236");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher35);
        int int38 = strBuilder16.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.deleteFirst(strMatcher35);
        boolean boolean41 = strBuilder0.contains("true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder0.appendSeparator(':');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test11237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11237");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder9.setNullText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.ensureCapacity((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.insert(0, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.ensureCapacity(20);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test11238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11238");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(strBuilder26, (int) 'a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str31 = strBuilder30.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str36 = strBuilder34.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder23.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.clear();
        java.lang.Throwable throwable61 = null;
        java.io.IOException iOException62 = new java.io.IOException("", throwable61);
        java.io.IOException iOException63 = new java.io.IOException("#4#a4#", throwable61);
        java.io.IOException iOException64 = new java.io.IOException(throwable61);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray68 = new java.lang.Object[] { 1.0f, iOException64, false, 100, strBuilder67 };
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder57.appendWithSeparators(objArray68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.deleteAll('a');
        boolean boolean83 = strBuilder81.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder51.append(strBuilder81, (int) '\000', 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder88.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.append((-1.0d));
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder91.delete((int) (byte) 1, 102);
        // The following exception was thrown during execution in test generation
        try {
            char char96 = strBuilder91.charAt(6);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 6");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test11239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11239");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        java.util.List<java.lang.String> strList29 = strTokenizer28.getTokenList();
        strList29.clear();
        boolean boolean32 = strList29.add("#4#");
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        java.lang.String str44 = strTokenizer43.nextToken();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        boolean boolean47 = strList45.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str50 = strTokenizer49.getContent();
        boolean boolean51 = strList45.equals((java.lang.Object) strTokenizer49);
        java.util.ListIterator<java.lang.String> strItor52 = strList45.listIterator();
        int int53 = strList45.size();
        int int54 = strList45.size();
        boolean boolean55 = strList29.removeAll((java.util.Collection<java.lang.String>) strList45);
        java.util.ListIterator<java.lang.String> strItor56 = strList29.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        java.lang.String str61 = strBuilder59.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder59.append((java.lang.Object) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder59.replaceAll('#', ' ');
        java.util.stream.IntStream intStream73 = strBuilder59.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder59.appendSeparator('#');
        java.lang.String str77 = strBuilder75.substring(0);
        int int78 = strBuilder75.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.deleteAll("o.IOExceptio");
        int int81 = strList29.lastIndexOf((java.lang.Object) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceAll('a', '3');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(intStream73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 32 + "'", int78 == 32);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test11240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11240");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int10 = strBuilder5.indexOf(strMatcher8, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strBuilder5.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            char char13 = strBuilder5.charAt(41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 41");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer11);
    }

    @Test
    public void test11241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11241");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendln(10L);
        int int68 = strBuilder62.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder59.appendln(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder59.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder59.insert(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder32.append(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst("#", "aa4#4\n");
        java.lang.String str84 = strBuilder78.midString((int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.setNewLineText("java.io.IOException");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test11242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11242");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        int int15 = strBuilder13.indexOf("1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        int int18 = strBuilder13.lastIndexOf("#a4#-1", 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.insert(19, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.delete((int) '\000', 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln("eptionfalse1001.0\n35.0\n1false0\n\n", 4, 18);
        java.lang.Iterable<java.lang.String> strIterable29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendAll(strIterable29);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test11243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11243");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder18.indexOf(strMatcher19, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.setLength(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln(200);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.Throwable throwable35 = null;
        java.io.IOException iOException36 = new java.io.IOException("", throwable35);
        java.io.IOException iOException37 = new java.io.IOException("#4#a4#", throwable35);
        java.io.IOException iOException38 = new java.io.IOException(throwable35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 1.0f, iOException38, false, 100, strBuilder41 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendWithSeparators(objArray42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.deleteAll('a');
        boolean boolean56 = strBuilder55.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        java.lang.String str72 = strBuilder71.getNullText();
        char[] charArray74 = new char[] { 'a' };
        char[] charArray75 = strBuilder71.getChars(charArray74);
        char[] charArray80 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray81 = strBuilder71.getChars(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder62.appendln(charArray80, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder55.appendln(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray80);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder22.insert(74, charArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 74");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test11244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11244");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar(' ');
        boolean boolean4 = strTokenizer3.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.reset("I.oi.avaj0.1");
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test11245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11245");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.clear();
        java.lang.Object obj19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append(obj19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst('e', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher27);
        int int30 = strTokenizer29.size();
        int int31 = strTokenizer29.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.replaceAll(strMatcher34, "false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1a10\n104aa");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder23.appendFixedWidthPadLeft((java.lang.Object) strTokenizer38, 47, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll('#', ':');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test11246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11246");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((double) 5);
        boolean boolean17 = strBuilder13.startsWith("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.replaceFirst("java.io.IOException: \n01 false\n", "100.0\n48.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.deleteFirst('c');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder26.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendSeparator(".0jav");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator("1.0", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        java.lang.String str54 = strBuilder53.getNullText();
        char[] charArray56 = new char[] { 'a' };
        char[] charArray57 = strBuilder53.getChars(charArray56);
        int int61 = strMatcher50.isMatch(charArray57, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ".0j");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.append(charArray57);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder13.append(charArray57, 91, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test11247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11247");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterChar(' ');
        int int14 = strTokenizer13.nextIndex();
        java.lang.String str15 = strTokenizer13.next();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#4#a4#" + "'", str15, "#4#a4#");
    }

    @Test
    public void test11248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11248");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int32 = strBuilder30.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        int int37 = strBuilder30.lastIndexOf(' ', 48);
        java.io.Reader reader38 = strBuilder30.asReader();
        boolean boolean40 = strBuilder30.contains("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.clear();
        java.lang.String str46 = strBuilder44.rightString((int) (short) -1);
        java.lang.String str48 = strBuilder44.rightString((int) (short) 100);
        int int50 = strBuilder44.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder30.appendFixedWidthPadLeft((java.lang.Object) int50, (int) '1', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.setCharAt((int) '1', 'e');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test11249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11249");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append("#4#a4#");
        java.lang.String str9 = strBuilder2.leftString((int) (short) 100);
        int int11 = strBuilder2.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder2.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append("#4#a4#");
        java.lang.String str29 = strBuilder22.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(false);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        boolean boolean51 = strTokenizer48.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strTokenizer48, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln((int) (short) 10);
        boolean boolean65 = strBuilder35.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder35.reverse();
        java.lang.StringBuffer stringBuffer67 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder22.append(stringBuffer67, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder21.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder72.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendSeparator("\n59\n97\n", "4#4");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#4#a4#" + "'", str9, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#4#a4#" + "'", str29, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test11250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11250");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        int int20 = strTokenizer14.nextIndex();
        java.util.List<java.lang.String> strList21 = strTokenizer14.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer14.setDelimiterString("1false0");
        boolean boolean24 = strTokenizer23.isIgnoreEmptyTokens();
        int int25 = strTokenizer23.nextIndex();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test11251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11251");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        int int45 = strBuilder36.indexOf('4', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.insert(5, (float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.insert(22, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.insert(53, (double) (byte) 1);
        java.io.Reader reader55 = strBuilder51.asReader();
        boolean boolean56 = reader55.markSupported();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test11252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11252");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        java.util.stream.IntStream intStream16 = strBuilder2.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendSeparator('#');
        boolean boolean19 = strBuilder18.isEmpty();
        char[] charArray20 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendFixedWidthPadLeft(21, 11, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.Throwable throwable35 = null;
        java.io.IOException iOException36 = new java.io.IOException("", throwable35);
        java.io.IOException iOException37 = new java.io.IOException("#4#a4#", throwable35);
        java.io.IOException iOException38 = new java.io.IOException(throwable35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 1.0f, iOException38, false, 100, strBuilder41 };
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendWithSeparators(objArray42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.clear();
        java.lang.String str50 = strBuilder48.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder31.append((java.lang.CharSequence) str50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        char[] charArray70 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray71 = strBuilder61.getChars(charArray70);
        java.io.Reader reader72 = strBuilder61.asReader();
        java.lang.String str73 = strBuilder61.toString();
        java.lang.StringBuffer stringBuffer74 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder51.append(stringBuffer74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder27.appendln(stringBuffer74);
        java.lang.String str78 = strBuilder76.rightString(0);
        int int80 = strBuilder76.indexOf(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test11253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11253");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        java.lang.String str13 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder4.appendSeparator('a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append("a10");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendFixedWidthPadLeft((java.lang.Object) "aa4#", 5, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test11254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11254");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.String str7 = strTokenizer6.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int43 = strBuilder40.lastIndexOf(strMatcher41, (int) (short) -1);
        int int44 = strBuilder28.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer11.setQuoteMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer11.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
    }

    @Test
    public void test11255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11255");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendSeparator(" a10\n", (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteCharAt((int) (byte) 1);
        int int29 = strBuilder25.lastIndexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.append((float) 11);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test11256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11256");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        java.lang.String str4 = strBuilder3.getNullText();
        char[] charArray6 = new char[] { 'a' };
        char[] charArray7 = strBuilder3.getChars(charArray6);
        char[] charArray12 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray13 = strBuilder3.getChars(charArray12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int27 = strBuilder24.lastIndexOf(strMatcher25, (int) (short) 10);
        boolean boolean28 = strBuilder3.contains(strMatcher25);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        int int55 = strMatcher42.isMatch(charArray50, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher25, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getDelimiterMatcher();
        java.lang.String[] strArray58 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer56.reset();
        java.util.List<java.lang.String> strList60 = strTokenizer59.getTokenList();
        boolean boolean61 = strList60.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            strList60.add(87, "1.0java.io.IOExceptionfalse1001.32\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 87, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test11257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11257");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        int int20 = strBuilder14.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append("#4#a4#");
        java.lang.String str31 = strBuilder24.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder37.reverse();
        java.lang.StringBuffer stringBuffer69 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.append(stringBuffer69, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder23.append(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder7.appendln(stringBuffer69, 13, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.append((long) 23);
        java.lang.Iterable<java.lang.String> strIterable81 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendWithSeparators(strIterable81, "10\n ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test11258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11258");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        int int39 = strBuilder29.indexOf(strMatcher37);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher37, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.replace(strMatcher67, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int74 = strBuilder56.lastIndexOf(strMatcher67, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer54.setTrimmerMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int79 = strBuilder76.indexOf(strMatcher78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int85 = strBuilder82.indexOf(strMatcher84);
        int int86 = strBuilder76.indexOf(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer54.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer87.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.reset(" a10\n");
        boolean boolean91 = strTokenizer90.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test11259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11259");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        java.io.Writer writer12 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append("#4#a4#");
        java.lang.String str20 = strBuilder13.leftString((int) (short) 100);
        int int22 = strBuilder13.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder13.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder13.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder13.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder13.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.insert((int) (byte) 10, (double) 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.deleteAll(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.append((double) 59);
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        boolean boolean56 = strTokenizer53.hasNext();
        java.util.List<java.lang.String> strList57 = strTokenizer53.getTokenList();
        java.util.List<java.lang.String> strList58 = strTokenizer53.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer53, 100, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer53, "#4#a4#a\n");
        int int65 = strTokenizer53.nextIndex();
        boolean boolean66 = strTokenizer53.hasNext();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test11260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11260");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append("#4#a4#");
        java.lang.String str15 = strBuilder8.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append(false);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("hi!");
        boolean boolean37 = strTokenizer34.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strTokenizer34, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((int) (short) 10);
        boolean boolean51 = strBuilder21.equalsIgnoreCase(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder21.reverse();
        java.lang.StringBuffer stringBuffer53 = strBuilder52.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder8.append(stringBuffer53, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder6.append(stringBuffer53);
        int int60 = strBuilder57.lastIndexOf('a', (int) ' ');
        boolean boolean62 = strBuilder57.endsWith("true\n");
        java.lang.StringBuffer stringBuffer63 = strBuilder57.toStringBuffer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#4#a4#" + "'", str15, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 13 + "'", int60 == 13);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(stringBuffer63);
        org.junit.Assert.assertEquals(stringBuffer63.toString(), "zinekoTrtSeslaf ");
    }

    @Test
    public void test11261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11261");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator("#4#a4#", (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strBuilder27.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strTokenizer28);
    }

    @Test
    public void test11262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11262");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder30.appendSeparator('4', ' ');
        java.util.stream.IntStream intStream46 = strBuilder45.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator("aa");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.trim();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test11263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11263");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: StrTokenizer[100.0\n]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        java.lang.String str5 = strBuilder4.getNullText();
        char[] charArray7 = new char[] { 'a' };
        char[] charArray8 = strBuilder4.getChars(charArray7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.ensureCapacity((int) '#');
        char[] charArray15 = strBuilder14.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.append(charArray15, 22, 18);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 18");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "35.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "35.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[3, 5, ., 0, \n]");
    }

    @Test
    public void test11264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11264");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.deleteAll("true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator("java.io.IOException: java.io.IOException: java.io.IOException: 59.0", "tionfalse100\n100.01");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test11265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11265");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        int int29 = strBuilder19.indexOf(strMatcher27);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher27, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer4.setDelimiterMatcher(strMatcher42);
        int int45 = strTokenizer4.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer4.setQuoteChar('.');
        boolean boolean48 = strTokenizer47.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test11266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11266");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        int int38 = strBuilder28.indexOf(strMatcher36);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher36, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        int int54 = reader13.read(charArray22);
        reader13.close();
        long long57 = reader13.skip(0L);
        int int58 = reader13.read();
        reader13.mark((int) (short) 10);
        long long62 = reader13.skip((long) 59);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
    }

    @Test
    public void test11267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11267");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNewLine();
        java.lang.CharSequence charSequence44 = strBuilder40.subSequence((int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadLeft(0, 93, ' ');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test11268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11268");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        writer37.write("1false0\nfalse");
        writer37.write("");
        writer37.write(16);
        writer37.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
    }

    @Test
    public void test11269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11269");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln((long) '#');
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder7.deleteFirst(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: ", "100.01210\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher21, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer27.reset();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
    }

    @Test
    public void test11270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11270");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendPadding((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.append("aa");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append('a');
        int int16 = strBuilder12.indexOf('a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test11271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11271");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        java.lang.String str12 = strTokenizer8.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setDelimiterChar('e');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer8.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
    }

    @Test
    public void test11272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11272");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write("0java.io.IOExceptionfalse100", 0, 0);
        writer37.flush();
        java.io.Writer writer61 = writer37.append('#');
        java.io.Writer writer63 = writer61.append('0');
        writer61.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(writer63);
    }

    @Test
    public void test11273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11273");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("#4#a4#");
        java.lang.String str6 = strTokenizer2.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        int int16 = strBuilder7.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int35 = strBuilder32.lastIndexOf(strMatcher33, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder7.replaceFirst(strMatcher33, "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer2.setIgnoredMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer2.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setQuoteChar('c');
        java.lang.String str44 = strTokenizer41.previousToken();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test11274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11274");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.lang.String[] strArray49 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        boolean boolean63 = strTokenizer60.isIgnoreEmptyTokens();
        java.lang.String str64 = strTokenizer60.next();
        int int65 = strList50.indexOf((java.lang.Object) strTokenizer60);
        java.util.ListIterator<java.lang.String> strItor67 = strList50.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor68 = strList50.iterator();
        java.lang.String[] strArray72 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        char[] charArray81 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setDelimiterString("hi!");
        boolean boolean86 = strTokenizer83.isIgnoreEmptyTokens();
        java.lang.String str87 = strTokenizer83.next();
        int int88 = strList73.indexOf((java.lang.Object) strTokenizer83);
        boolean boolean89 = strList50.addAll((java.util.Collection<java.lang.String>) strList73);
        java.util.ListIterator<java.lang.String> strItor90 = strList73.listIterator();
        boolean boolean92 = strList73.add("");
        java.util.ListIterator<java.lang.String> strItor93 = strList73.listIterator();
        boolean boolean94 = strList4.removeAll((java.util.Collection<java.lang.String>) strList73);
        java.util.Spliterator<java.lang.String> strSpliterator95 = strList4.spliterator();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#4#a4#" + "'", str64, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(strItor93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strSpliterator95);
    }

    @Test
    public void test11275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11275");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.append(strBuilder24, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln((float) 72);
        boolean boolean30 = strBuilder29.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence33 = strBuilder29.subSequence(63, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -62");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test11276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11276");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.append('\000');
        java.lang.Iterable<java.lang.String> strIterable34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendAll(strIterable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        java.lang.Throwable throwable44 = null;
        java.io.IOException iOException45 = new java.io.IOException("", throwable44);
        java.io.IOException iOException46 = new java.io.IOException("#4#a4#", throwable44);
        java.io.IOException iOException47 = new java.io.IOException(throwable44);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1.0f, iOException47, false, 100, strBuilder50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder40.appendWithSeparators(objArray51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendln(10L);
        int int69 = strBuilder63.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder63.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendln(strBuilder72);
        java.io.Writer writer74 = strBuilder73.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("hi!");
        java.lang.String str78 = strBuilder77.getNullText();
        char[] charArray80 = new char[] { 'a' };
        char[] charArray81 = strBuilder77.getChars(charArray80);
        char[] charArray86 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray87 = strBuilder77.getChars(charArray86);
        writer74.write(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, "#4#a4#");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder35.insert(97, charArray86, (int) (byte) 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(writer74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[a]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[a]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a, 4,  , 4]");
    }

    @Test
    public void test11277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11277");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.append(stringBuffer4, (int) '4', 10);
        java.lang.String str8 = strBuilder7.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.setNullText("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        char[] charArray11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        boolean boolean13 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        char[] charArray25 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray26 = strBuilder16.getChars(charArray25);
        java.io.Reader reader27 = strBuilder16.asReader();
        reader27.mark(10);
        reader27.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        char[] charArray40 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.appendln(charArray40);
        int int43 = reader27.read(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, "StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer12.reset(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder10.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer12, "StrTokenizer[true\n]");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder10.append(4L);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.appendNewLine();
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        char[] charArray76 = strBuilder66.getChars(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setQuoteChar('I');
        int int80 = strTokenizer79.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer79);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test11278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11278");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        java.lang.String str4 = strBuilder3.getNullText();
        char[] charArray6 = new char[] { 'a' };
        char[] charArray7 = strBuilder3.getChars(charArray6);
        char[] charArray12 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray13 = strBuilder3.getChars(charArray12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int27 = strBuilder24.lastIndexOf(strMatcher25, (int) (short) 10);
        boolean boolean28 = strBuilder3.contains(strMatcher25);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setTrimmerMatcher(strMatcher42);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        int int55 = strMatcher42.isMatch(charArray50, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher25, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer56.setDelimiterString("1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce");
        java.lang.String str61 = strTokenizer60.getContent();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test11279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11279");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        int int14 = strBuilder11.indexOf("StrTokenizer[#4#a4#]", (int) (short) 100);
        java.util.stream.IntStream intStream15 = strBuilder11.chars();
        java.lang.CharSequence charSequence18 = strBuilder11.subSequence((int) (byte) 1, (int) (byte) 1);
        int int21 = strBuilder11.indexOf('e', 25);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test11280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11280");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.appendln(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test11281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11281");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11282");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append(' ');
        java.util.stream.IntStream intStream30 = strBuilder29.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int33 = strBuilder29.lastIndexOf(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = strBuilder29.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder22.append(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.replaceAll(strMatcher36, "##a#");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder22.insert(168, (float) 57);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 168");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer34);
        org.junit.Assert.assertEquals(stringBuffer34.toString(), " ");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test11283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11283");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder30.asTokenizer();
        java.lang.String str42 = strTokenizer41.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer41.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "a10" + "'", str42, "a10");
        org.junit.Assert.assertNotNull(strMatcher43);
    }

    @Test
    public void test11284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11284");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.trim();
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterChar('a');
        java.lang.String str17 = strTokenizer16.previousToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.append((java.lang.Object) str17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendSeparator("trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException("", throwable28);
        java.io.IOException iOException30 = new java.io.IOException("#4#a4#", throwable28);
        java.io.IOException iOException31 = new java.io.IOException(throwable28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1.0f, iOException31, false, 100, strBuilder34 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder24.appendWithSeparators(objArray35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder18.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder18.appendSeparator("33333333333333333333333333100", 15);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((int) 'f');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test11285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11285");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendSeparator(':', 25);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test11286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11286");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator("#4#a4#", (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        java.lang.Throwable throwable37 = null;
        java.io.IOException iOException38 = new java.io.IOException("", throwable37);
        java.io.IOException iOException39 = new java.io.IOException("#4#a4#", throwable37);
        java.io.IOException iOException40 = new java.io.IOException(throwable37);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1.0f, iOException40, false, 100, strBuilder43 };
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.appendWithSeparators(objArray44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.append(strBuilder56, (int) 'a', 1);
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.append(stringBuffer60, (int) (byte) -1, 33);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder27.appendFixedWidthPadLeft((java.lang.Object) strBuilder63, 42, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder27.appendFixedWidthPadRight(38, 53, '1');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test11287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11287");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        boolean boolean27 = strBuilder23.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.appendSeparator('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        int int45 = strBuilder35.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder32.appendln((java.lang.Object) strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.deleteAll("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strBuilder46.asTokenizer();
        int int53 = strTokenizer52.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test11288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11288");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("eslf\n\n181111");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11289");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        int int24 = strBuilder18.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNewLineText(" falseStrTokeniz");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.delete(27, (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight((int) '0', 5, '.');
        int int52 = strBuilder46.lastIndexOf('4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 29 + "'", int52 == 29);
    }

    @Test
    public void test11290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11290");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln(strBuilder43, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        char[] charArray58 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray59 = strBuilder49.getChars(charArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder49.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.append(strBuilder61, 5, (int) (short) 1);
        boolean boolean65 = strBuilder35.equals(strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder35.append((double) (short) 1);
        java.io.Reader reader68 = strBuilder67.asReader();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.replace((int) ' ', 11, "33333333333333333333333333100");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(reader68);
    }

    @Test
    public void test11291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11291");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        reader13.reset();
        int int18 = reader13.read();
        reader13.mark(6);
        boolean boolean21 = reader13.markSupported();
        boolean boolean22 = reader13.ready();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11292");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        boolean boolean46 = reader13.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        char[] charArray58 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray59 = strBuilder49.getChars(charArray58);
        java.io.Reader reader60 = strBuilder49.asReader();
        reader60.mark(10);
        reader60.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        char[] charArray73 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder66.appendln(charArray73);
        int int76 = reader60.read(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        java.lang.String str80 = strBuilder79.getNullText();
        char[] charArray82 = new char[] { 'a' };
        char[] charArray83 = strBuilder79.getChars(charArray82);
        char[] charArray88 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray89 = strBuilder79.getChars(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray88);
        int int92 = reader60.read(charArray88);
        int int93 = reader13.read(charArray88);
        long long95 = reader13.skip((long) 168);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 0L + "'", long95 == 0L);
    }

    @Test
    public void test11293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11293");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset("#4#a4#");
        boolean boolean16 = strTokenizer13.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setDelimiterChar('4');
        boolean boolean19 = strTokenizer18.hasNext();
        java.lang.String str20 = strTokenizer18.previousToken();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test11294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11294");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder18.ensureCapacity(15);
        int int34 = strBuilder31.lastIndexOf('0', 16);
        java.lang.String str35 = strBuilder31.getNullText();
        java.lang.CharSequence charSequence36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.append(charSequence36, 66, 9);
        java.io.Reader reader40 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.replaceAll("0.012true104444444444444444444444444444444444444444444444  \n", "-java.io.IOException: StrTokenizer[#4#a4#]1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test11295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11295");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        java.lang.String str8 = strBuilder5.leftString((int) '4');
        java.lang.String str9 = strBuilder5.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.appendln(strBuilder46);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int52 = strBuilder38.lastIndexOf(strMatcher50, (int) 'a');
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher66, strMatcher70);
        int int72 = strBuilder38.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder22.append((java.lang.CharSequence) strBuilder38);
        java.util.stream.IntStream intStream74 = strBuilder22.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) intStream74, 52, '#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence80 = strBuilder77.subSequence(40, 36);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -4");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "false" + "'", str9, "false");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(intStream74);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test11296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11296");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.flush();
        writer9.write("StrTokenizer[#4#a4#]");
        writer9.write("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]", 39, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((long) '#');
        java.util.stream.IntStream intStream39 = strBuilder36.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendNull();
        java.io.Writer writer46 = writer9.append((java.lang.CharSequence) strBuilder36);
        writer46.write(52);
        java.io.Writer writer50 = writer46.append(' ');
        writer50.write(" 10.0\nStrTokenizer[#4#a4#]\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
        org.junit.Assert.assertNotNull(writer50);
    }

    @Test
    public void test11297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11297");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '\n', 'I');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test11298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11298");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("hi!");
        java.lang.String[] strArray15 = strTokenizer12.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendAll((java.lang.Object[]) strArray15);
        boolean boolean18 = strBuilder2.endsWith("#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.setNullText("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(28);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "2.02");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test11299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11299");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendSeparator(' ', '4');
        boolean boolean18 = strBuilder5.equals(strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder5.append((-1.0d));
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test11300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11300");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset();
        java.lang.String str5 = strTokenizer4.nextToken();
        int int6 = strTokenizer4.nextIndex();
        java.lang.String str7 = strTokenizer4.getContent();
        boolean boolean8 = strTokenizer4.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test11301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11301");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.appendln((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.appendSeparator('0');
        java.lang.String str13 = strBuilder12.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test11302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11302");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        char[] charArray27 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray28 = strBuilder18.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        strBuilder13.getChars((int) (byte) 0, 0, charArray27, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        java.io.IOException iOException42 = new java.io.IOException("#4#a4#", throwable40);
        java.io.IOException iOException43 = new java.io.IOException(throwable40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1.0f, iOException43, false, 100, strBuilder46 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendWithSeparators(objArray47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        java.lang.String str55 = strBuilder53.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.append((java.lang.CharSequence) str55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder13.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        java.lang.String str68 = strBuilder65.substring((int) (short) 0, (int) (short) 100);
        int int71 = strBuilder65.lastIndexOf("1false0\n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.append(strBuilder65);
        java.io.Writer writer73 = strBuilder65.asWriter();
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.setDelimiterString("hi!");
        java.lang.String str85 = strTokenizer84.nextToken();
        java.util.List<java.lang.String> strList86 = strTokenizer84.getTokenList();
        boolean boolean88 = strList86.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str91 = strTokenizer90.getContent();
        boolean boolean92 = strList86.equals((java.lang.Object) strTokenizer90);
        int int93 = strTokenizer90.previousIndex();
        java.util.List<java.lang.String> strList94 = strTokenizer90.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder65.append((java.lang.Object) strList94);
        java.util.stream.Stream<java.lang.String> strStream96 = strList94.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList99 = strList94.subList(134, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 13");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(writer73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "#4#a4#" + "'", str85, "#4#a4#");
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strStream96);
    }

    @Test
    public void test11303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11303");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.insert(0, charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '0', '4');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer43.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
    }

    @Test
    public void test11304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11304");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append("#4#a4#");
        java.lang.String str9 = strBuilder2.leftString((int) (short) 100);
        int int11 = strBuilder2.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder2.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append("#4#a4#");
        java.lang.String str29 = strBuilder22.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(false);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        boolean boolean51 = strTokenizer48.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strTokenizer48, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln((int) (short) 10);
        boolean boolean65 = strBuilder35.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder35.reverse();
        java.lang.StringBuffer stringBuffer67 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder22.append(stringBuffer67, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder21.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder1.appendSeparator('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.ensureCapacity(24);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendSeparator('a', 24);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("true\n", strMatcher81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder74.replaceFirst(strMatcher81, "java.io.IOException: #4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder74.ensureCapacity(27);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#4#a4#" + "'", str9, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#4#a4#" + "'", str29, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test11305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11305");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setEmptyTokenAsNull(false);
        java.lang.String[] strArray27 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.appendWithSeparators((java.lang.Object[]) strArray27, "1.0java.");
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        java.lang.String str41 = strTokenizer40.nextToken();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        java.lang.String str46 = strBuilder45.getNullText();
        char[] charArray48 = new char[] { 'a' };
        char[] charArray49 = strBuilder45.getChars(charArray48);
        char[] charArray54 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray55 = strBuilder45.getChars(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        int int57 = strList42.indexOf((java.lang.Object) charArray55);
        strList42.clear();
        java.lang.Object[] objArray59 = strList42.toArray();
        boolean boolean60 = strList42.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream61 = strList42.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder29.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList42, "0\n 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder29.append('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test11306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11306");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        boolean boolean27 = strBuilder23.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.appendSeparator('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        int int45 = strBuilder35.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder32.appendln((java.lang.Object) strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(60);
        int int53 = strBuilder51.lastIndexOf('\n');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 132 + "'", int53 == 132);
    }

    @Test
    public void test11307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11307");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append(false);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) strTokenizer19, 10, ' ');
        int int26 = strTokenizer19.previousIndex();
        boolean boolean27 = strTokenizer19.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer19.reset("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer19.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setQuoteChar('e');
        java.lang.String str34 = strTokenizer33.getContent();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1" + "'", str34, ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
    }

    @Test
    public void test11308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11308");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.deleteFirst(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln("a10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        java.io.IOException iOException42 = new java.io.IOException("#4#a4#", throwable40);
        java.io.IOException iOException43 = new java.io.IOException(throwable40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1.0f, iOException43, false, 100, strBuilder46 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendWithSeparators(objArray47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendln(10L);
        int int65 = strBuilder59.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder59.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder56.appendln(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendln(10L);
        int int79 = strBuilder73.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder73.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder73.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder68.appendln((java.lang.Object) strBuilder84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder68.appendln("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder30.append((java.lang.Object) strBuilder87);
        int int89 = strList12.lastIndexOf((java.lang.Object) strBuilder87);
        java.lang.Object[] objArray90 = strList12.toArray();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[#4#a4#]");
    }

    @Test
    public void test11309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11309");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        int int17 = strBuilder14.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        java.lang.Throwable throwable25 = null;
        java.io.IOException iOException26 = new java.io.IOException("", throwable25);
        java.io.IOException iOException27 = new java.io.IOException("#4#a4#", throwable25);
        java.io.IOException iOException28 = new java.io.IOException(throwable25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1.0f, iOException28, false, 100, strBuilder31 };
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendWithSeparators(objArray32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.deleteAll('a');
        boolean boolean46 = strBuilder45.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        char[] charArray70 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray71 = strBuilder61.getChars(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder52.appendln(charArray70, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder45.appendln(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder14.appendln(charArray70);
        char[] charArray79 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray79);
        java.util.List<java.lang.String> strList81 = strTokenizer80.getTokenList();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator82 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList81.replaceAll(strUnaryOperator82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "100a4 4\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "100a4 4\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[1, 0, 0, a, 4,  , 4, \n]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strList81);
    }

    @Test
    public void test11310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11310");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.append(stringBuffer4, (int) '4', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendln(" a10\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteCharAt((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test11311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11311");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder32.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        java.lang.String str48 = strBuilder32.midString((int) (byte) 1, (-1));
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder32.replaceFirst(strMatcher61, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer31.setQuoteMatcher(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setIgnoreEmptyTokens(true);
        java.lang.String str67 = strTokenizer64.next();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "a" + "'", str67, "a");
    }

    @Test
    public void test11312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11312");
        java.io.IOException iOException4 = new java.io.IOException("");
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("hi!", throwable7);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        iOException4.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException("a4aa# ", (java.lang.Throwable) iOException4);
        java.io.IOException iOException13 = new java.io.IOException("java.io.IOException:  10\n", (java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]", (java.lang.Throwable) iOException12);
        java.lang.String str15 = iOException14.toString();
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]" + "'", str15, "java.io.IOException: java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
    }

    @Test
    public void test11313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11313");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.write("#4#a4#", 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        writer9.write(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray57 = strBuilder49.getChars(charArray55);
        writer9.write(charArray55);
        writer9.write("StrTokenizer[not tokenized yet]", 0, (int) (byte) 0);
        writer9.write("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        java.io.Writer writer66 = writer9.append('f');
        writer66.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(writer66);
    }

    @Test
    public void test11314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11314");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("Seslaf false");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder40.asTokenizer();
        java.lang.StringBuffer stringBuffer42 = strBuilder40.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.append(stringBuffer42);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(stringBuffer42);
        org.junit.Assert.assertEquals(stringBuffer42.toString(), "100.012true");
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test11315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11315");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.clear();
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        int int24 = strMatcher15.isMatch(charArray22, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.append(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.appendAll((java.util.Iterator<java.lang.String>) strTokenizer30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('I', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        java.lang.String str38 = strBuilder37.getNullText();
        char[] charArray40 = new char[] { 'a' };
        char[] charArray41 = strBuilder37.getChars(charArray40);
        char[] charArray46 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray47 = strBuilder37.getChars(charArray46);
        java.io.Reader reader48 = strBuilder37.asReader();
        reader48.mark(10);
        reader48.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.clear();
        char[] charArray61 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder54.appendln(charArray61);
        int int64 = reader48.read(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        java.lang.String str68 = strBuilder67.getNullText();
        char[] charArray70 = new char[] { 'a' };
        char[] charArray71 = strBuilder67.getChars(charArray70);
        char[] charArray76 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray77 = strBuilder67.getChars(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray76);
        int int80 = reader48.read(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder31.appendln(charArray76, 54, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer81);
    }

    @Test
    public void test11316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11316");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.ensureCapacity(39);
        boolean boolean10 = strBuilder9.isEmpty();
        int int13 = strBuilder9.indexOf("tionfalse100\n100.01", 37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.insert(36, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 36");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test11317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11317");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("hi!");
        boolean boolean61 = strTokenizer58.isIgnoreEmptyTokens();
        java.lang.String str62 = strTokenizer58.next();
        int int63 = strList48.indexOf((java.lang.Object) strTokenizer58);
        java.util.ListIterator<java.lang.String> strItor65 = strList48.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor66 = strList48.iterator();
        java.lang.String[] strArray70 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("hi!");
        boolean boolean84 = strTokenizer81.isIgnoreEmptyTokens();
        java.lang.String str85 = strTokenizer81.next();
        int int86 = strList71.indexOf((java.lang.Object) strTokenizer81);
        java.util.ListIterator<java.lang.String> strItor88 = strList71.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor89 = strList71.iterator();
        boolean boolean90 = strList48.remove((java.lang.Object) strItor89);
        boolean boolean91 = strList4.removeAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean92 = strList4.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator93 = strList4.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList96 = strList4.subList(102, 31);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 31");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#4#a4#" + "'", str62, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "#4#a4#" + "'", str85, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(strSpliterator93);
    }

    @Test
    public void test11318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11318");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((long) '#');
        java.util.stream.IntStream intStream22 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendSeparator("10\n\n");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        boolean boolean42 = strTokenizer39.isIgnoreEmptyTokens();
        java.lang.String str43 = strTokenizer39.next();
        int int44 = strList29.indexOf((java.lang.Object) strTokenizer39);
        java.util.ListIterator<java.lang.String> strItor46 = strList29.listIterator((int) (byte) 0);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList51.iterator();
        boolean boolean70 = strList29.removeAll((java.util.Collection<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList29, "10\n\n");
        boolean boolean73 = strList12.retainAll((java.util.Collection<java.lang.String>) strList29);
        int int74 = strList12.size();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#4#a4#" + "'", str43, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test11319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11319");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        int int20 = strBuilder10.indexOf(strMatcher18);
        int int22 = strBuilder9.indexOf(strMatcher18, (int) (short) 10);
        java.lang.String str25 = strBuilder9.midString(3, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendln((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append((java.lang.Object) "OExceptionfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        java.lang.String str36 = strBuilder35.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.trim();
        int int39 = strBuilder35.indexOf("a10\n");
        java.lang.StringBuffer stringBuffer40 = strBuilder35.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.append((java.lang.Object) strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer40);
        org.junit.Assert.assertEquals(stringBuffer40.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test11320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11320");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        int int27 = strBuilder17.indexOf(strMatcher25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher25, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder4.deleteAll(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        char[] charArray51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(charArray51);
        boolean boolean53 = strBuilder50.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        boolean boolean59 = strBuilder58.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        int int70 = strMatcher61.isMatch(charArray68, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.append(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder50.insert((int) (byte) 1, charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "StrTokenizer[#4#a4#]");
        char[] charArray75 = strBuilder42.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '\000', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '#', '3');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer81.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
    }

    @Test
    public void test11321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11321");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        reader13.reset();
        int int47 = reader13.read();
        boolean boolean48 = reader13.ready();
        boolean boolean49 = reader13.ready();
        reader13.close();
        boolean boolean51 = reader13.markSupported();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test11322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11322");
        java.io.IOException iOException1 = new java.io.IOException("");
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException("", throwable4);
        java.io.IOException iOException6 = new java.io.IOException("hi!", throwable4);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        iOException1.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray11 = iOException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test11323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11323");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        java.lang.Throwable throwable20 = null;
        java.io.IOException iOException21 = new java.io.IOException("", throwable20);
        java.io.IOException iOException22 = new java.io.IOException("#4#a4#", throwable20);
        java.io.IOException iOException23 = new java.io.IOException(throwable20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1.0f, iOException23, false, 100, strBuilder26 };
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.appendWithSeparators(objArray27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.append(true);
        int int42 = strBuilder39.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.replaceAll('4', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.delete(11, 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder9.append((java.lang.Object) 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.insert(4, (int) 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("59.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.insert(10, (long) 31);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.setNullText("java.io.IOException: StrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder59.insert(50, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 50");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test11324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11324");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        java.util.stream.Stream<java.lang.String> strStream45 = strList27.stream();
        java.util.stream.Stream<java.lang.String> strStream46 = strList27.parallelStream();
        java.lang.Object[] objArray47 = strList27.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = strList27.remove((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[, , ]");
    }

    @Test
    public void test11325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11325");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt((int) '\000');
        java.lang.String str43 = strBuilder42.getNewLineText();
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        java.lang.String str55 = strTokenizer54.nextToken();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setTrimmerMatcher(strMatcher57);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        int int70 = strMatcher57.isMatch(charArray65, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int76 = strBuilder73.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.setDelimiterString("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder42.appendAll((java.util.Iterator<java.lang.String>) strTokenizer78);
        boolean boolean82 = strTokenizer78.hasNext();
        java.lang.String str83 = strTokenizer78.previousToken();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#4#a4#" + "'", str55, "#4#a4#");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "#4#a4#" + "'", str83, "#4#a4#");
    }

    @Test
    public void test11326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11326");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("hi!");
        java.lang.String str19 = strTokenizer18.nextToken();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        boolean boolean22 = strList20.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str25 = strTokenizer24.getContent();
        boolean boolean26 = strList20.equals((java.lang.Object) strTokenizer24);
        int int27 = strTokenizer24.previousIndex();
        java.lang.String str28 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer24.setDelimiterChar('#');
        java.lang.Object obj31 = strTokenizer30.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder3.appendln((java.lang.Object) strTokenizer30);
        java.lang.String str35 = strBuilder32.substring(0, 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendPadding((int) '\000', '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.replace(0, 54, "0.1");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str28, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]\n" + "'", str35, "StrTokenizer[not tokenized yet]\n");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test11327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11327");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        int int24 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, (int) '4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder11.replaceAll(" ", "1false0\n");
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher44, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.replaceFirst(strMatcher48, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str53 = strBuilder52.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        java.lang.String str58 = strBuilder57.getNullText();
        char[] charArray60 = new char[] { 'a' };
        char[] charArray61 = strBuilder57.getChars(charArray60);
        int int65 = strMatcher54.isMatch(charArray61, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder52.replaceAll(strMatcher54, "java.io.IOException: ");
        int int70 = strBuilder52.indexOf(' ', (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder51.append((java.lang.CharSequence) strBuilder52);
        java.lang.String str73 = strBuilder51.rightString(20);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder51.deleteFirst("ionfalse1001.0\n\n4\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "okenized1false0\nyet]" + "'", str73, "okenized1false0\nyet]");
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test11328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11328");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.clear();
        java.lang.Throwable throwable52 = null;
        java.io.IOException iOException53 = new java.io.IOException("", throwable52);
        java.io.IOException iOException54 = new java.io.IOException("#4#a4#", throwable52);
        java.io.IOException iOException55 = new java.io.IOException(throwable52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray59 = new java.lang.Object[] { 1.0f, iOException55, false, 100, strBuilder58 };
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder48.appendWithSeparators(objArray59, "");
        java.lang.String str63 = strBuilder48.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder48.deleteFirst("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder48.append('#');
        java.lang.StringBuffer stringBuffer68 = strBuilder48.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder16.appendln(stringBuffer68, (int) (short) 0, (int) (byte) 0);
        boolean boolean73 = strBuilder71.startsWith("o.IOExceptionfalse1001.0\n35.0\ntrue#4#a4#zi");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str63, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(stringBuffer68);
        org.junit.Assert.assertEquals(stringBuffer68.toString(), "1.0jva.io.IOExceptionfalse100#");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test11329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11329");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        int int2 = strTokenizer1.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test11330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11330");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        java.lang.String str26 = strBuilder5.leftString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder5.append("aa", (int) (short) 1, 0);
        char[] charArray31 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        int int34 = strTokenizer33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendAll((java.util.Iterator<java.lang.String>) strTokenizer33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append('1');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.setCharAt((-1), '3');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test11331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11331");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        int int24 = strBuilder19.indexOf(' ', 32);
        java.io.Reader reader25 = strBuilder19.asReader();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(reader25);
    }

    @Test
    public void test11332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11332");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.replaceAll('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator("", "java.io.IOException: StrTokenizer[#4#a4#]");
        boolean boolean24 = strBuilder19.contains("java.");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = strBuilder25.substring((int) 'I');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test11333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11333");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        int int22 = strBuilder18.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln((double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.setNewLineText("StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        java.lang.String str47 = strBuilder46.getNullText();
        char[] charArray49 = new char[] { 'a' };
        char[] charArray50 = strBuilder46.getChars(charArray49);
        char[] charArray55 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray56 = strBuilder46.getChars(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder37.appendln(charArray55, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int69 = strBuilder66.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.appendln((int) (short) 10);
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, strMatcher86);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getIgnoredMatcher();
        int int90 = strBuilder71.indexOf(strMatcher88, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher65, strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder31.deleteAll(strMatcher65);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder12.append((java.lang.CharSequence) strBuilder92, 168, 74);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test11334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11334");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        int int9 = strBuilder3.lastIndexOf("1false0\n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.replace((int) (byte) 0, 0, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        int int16 = strBuilder13.lastIndexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln("100.0false\n");
        int int21 = strBuilder18.indexOf('#', 47);
        int int22 = strBuilder18.capacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 22 + "'", int22 == 22);
    }

    @Test
    public void test11335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11335");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder36.deleteFirst(strMatcher58);
        int int61 = strBuilder36.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder36.deleteAll("true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 59 + "'", int61 == 59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test11336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11336");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.setNewLineText("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder8.appendFixedWidthPadRight(6, 17, '0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strBuilder8.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
    }

    @Test
    public void test11337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11337");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("0\nzinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test11338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11338");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteFirst(strMatcher21);
        int int24 = strBuilder2.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder2.appendFixedWidthPadLeft((int) (short) 0, (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll("100.01210\n");
        java.lang.StringBuffer stringBuffer35 = strBuilder34.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendln(10L);
        int int68 = strBuilder62.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder59.appendln(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder59.deleteAll("java.io.IOException: ");
        java.lang.String str76 = strBuilder59.rightString(32);
        int int79 = strBuilder59.lastIndexOf(" ", 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder59.appendln(false);
        char[] charArray82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.append(charArray82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setDelimiterChar(' ');
        boolean boolean88 = strTokenizer87.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer87.getDelimiterMatcher();
        int int91 = strBuilder81.lastIndexOf(strMatcher89, 44);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder34.replace(strMatcher89, "35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]", (int) (short) 0, (int) '4', (int) '\n');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(stringBuffer35);
        org.junit.Assert.assertEquals(stringBuffer35.toString(), "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00\nfalse\n");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "eptionfalse1001.0\n35.0\n1false0\n\n" + "'", str76, "eptionfalse1001.0\n35.0\n1false0\n\n");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test11339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11339");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(strBuilder26, (int) 'a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str31 = strBuilder30.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str36 = strBuilder34.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder23.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator('\000', 70);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.append((long) 42);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test11340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11340");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset();
        java.lang.String str5 = strTokenizer4.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str14 = strTokenizer13.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        char[] charArray28 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray29 = strBuilder19.getChars(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder19.appendln("java.io.IOException: ");
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder31.replaceFirst(strMatcher42, "#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer16.setTrimmerMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("100.0false", strMatcher11, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer4.setTrimmerMatcher(strMatcher11);
        boolean boolean49 = strTokenizer48.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test11341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11341");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(11);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(52);
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test11342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11342");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendSeparator("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append(42);
        int int70 = strBuilder65.indexOf('3', 206);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test11343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11343");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("a", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.trim();
        java.lang.Object[] objArray22 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendAll(objArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder9.appendWithSeparators(objArray22, "java.io.IOException: StrTokenizer[#4#a4#]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert((int) (short) 10, (double) ':');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test11344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11344");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        java.io.Reader reader7 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendln(false);
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(66);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.appendln((java.lang.Object) charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.setNewLineText("10\n\n");
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("hi!");
        boolean boolean45 = strTokenizer42.isIgnoreEmptyTokens();
        java.lang.String str46 = strTokenizer42.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer42.getIgnoredMatcher();
        int int49 = strBuilder30.indexOf(strMatcher47, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher27, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setQuoteChar('c');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "100.0false\n" + "'", str10, "100.0false\n");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "#4#a4#" + "'", str46, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
    }

    @Test
    public void test11345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11345");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.insert(0, (double) (byte) 100);
        java.io.Reader reader29 = strBuilder28.asReader();
        boolean boolean30 = strList12.remove((java.lang.Object) reader29);
        reader29.close();
        boolean boolean32 = reader29.markSupported();
        reader29.mark((int) '3');
        reader29.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test11346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11346");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("aa4#4\n4\n \n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test11347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11347");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendSeparator("001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111", "#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder8.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder5.append((java.lang.CharSequence) strBuilder20);
        int int22 = strBuilder21.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 51 + "'", int22 == 51);
    }

    @Test
    public void test11348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11348");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.trim();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.deleteAll(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test11349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11349");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("hi!");
        java.lang.String[] strArray15 = strTokenizer12.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendAll((java.lang.Object[]) strArray15);
        boolean boolean18 = strBuilder2.endsWith("#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.setNullText("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(28);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(' ');
        java.lang.String str31 = strBuilder29.rightString(20);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#true\n28\n " + "'", str31, "#4#a4#true\n28\n ");
    }

    @Test
    public void test11350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11350");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append("#4#a4#");
        java.lang.String str38 = strBuilder31.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append(false);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("hi!");
        boolean boolean60 = strTokenizer57.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder44.appendFixedWidthPadRight((java.lang.Object) strTokenizer57, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int67 = strBuilder64.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.appendln((int) (short) 10);
        boolean boolean74 = strBuilder44.equalsIgnoreCase(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder44.reverse();
        java.lang.StringBuffer stringBuffer76 = strBuilder75.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder31.append(stringBuffer76, (int) (byte) 0, 2);
        boolean boolean81 = strBuilder31.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder30.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append('#');
        java.lang.String str86 = strBuilder84.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32", "false");
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer89.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder84.replaceFirst(strMatcher90, "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n 10");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "#4#a4#" + "'", str38, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test11351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11351");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        java.util.ListIterator<java.lang.String> strItor8 = strList7.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.clear();
        java.lang.String str14 = strBuilder12.rightString((int) (short) -1);
        java.lang.String str16 = strBuilder12.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoreEmptyTokens(false);
        int int23 = strTokenizer20.previousIndex();
        java.lang.Object obj24 = strTokenizer20.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.append((java.lang.Object) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.reverse();
        java.io.Reader reader27 = strBuilder26.asReader();
        int int28 = strList7.indexOf((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.setCharAt(18, '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder26.replaceFirst("33333333333333333333333333100", "0");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder26.append((long) 21);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strItor8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test11352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11352");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        java.util.stream.IntStream intStream6 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int9 = strBuilder5.lastIndexOf(strMatcher8);
        java.lang.StringBuffer stringBuffer10 = strBuilder5.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator('1');
        // The following exception was thrown during execution in test generation
        try {
            char char14 = strBuilder12.charAt((int) '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer10);
        org.junit.Assert.assertEquals(stringBuffer10.toString(), " ");
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test11353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11353");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer2.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer2.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setEmptyTokenAsNull(false);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        int int49 = strBuilder39.indexOf(strMatcher47);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher47, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer24.setDelimiterMatcher(strMatcher62);
        int int65 = strBuilder15.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer2.setIgnoredMatcher(strMatcher62);
        java.lang.String str67 = strTokenizer2.nextToken();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test11354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11354");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append("#4#a4#");
        java.lang.String str21 = strBuilder14.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(false);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        boolean boolean43 = strTokenizer40.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder27.appendFixedWidthPadRight((java.lang.Object) strTokenizer40, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        boolean boolean57 = strBuilder27.equalsIgnoreCase(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.reverse();
        java.lang.StringBuffer stringBuffer59 = strBuilder58.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder14.append(stringBuffer59, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder13.appendln(stringBuffer59);
        int int66 = strBuilder63.lastIndexOf('3', 63);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#4#a4#" + "'", str21, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(stringBuffer59);
        org.junit.Assert.assertEquals(stringBuffer59.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test11355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11355");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.trim();
        java.lang.Object[] objArray39 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendAll(objArray39);
        char[] charArray41 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.append(charArray41);
        boolean boolean44 = strBuilder42.startsWith("java.io.IOException: StrTokenizer[not tokenized yet]");
        java.lang.Throwable throwable47 = null;
        java.io.IOException iOException48 = new java.io.IOException("", throwable47);
        java.io.IOException iOException49 = new java.io.IOException("#4#a4#", throwable47);
        java.io.IOException iOException50 = new java.io.IOException(throwable47);
        java.lang.Throwable[] throwableArray51 = iOException50.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder42.appendWithSeparators((java.lang.Object[]) throwableArray51, "0\nfalse32.0");
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setDelimiterString("hi!");
        java.lang.String str65 = strTokenizer64.nextToken();
        java.util.List<java.lang.String> strList66 = strTokenizer64.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer64.setTrimmerMatcher(strMatcher67);
        java.lang.String str69 = strTokenizer68.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setDelimiterChar('a');
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        int int85 = strTokenizer83.size();
        java.lang.String str86 = strTokenizer83.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer83.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer83.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer68.setTrimmerMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder53.replaceFirst(strMatcher89, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder92.appendSeparator("0\n 10\n", "0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder92.replaceAll('\n', '\n');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "#4#a4#" + "'", str69, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "#4#" + "'", str86, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test11356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11356");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        int int17 = strBuilder14.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        java.lang.Throwable throwable25 = null;
        java.io.IOException iOException26 = new java.io.IOException("", throwable25);
        java.io.IOException iOException27 = new java.io.IOException("#4#a4#", throwable25);
        java.io.IOException iOException28 = new java.io.IOException(throwable25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1.0f, iOException28, false, 100, strBuilder31 };
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendWithSeparators(objArray32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.deleteAll('a');
        boolean boolean46 = strBuilder45.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        char[] charArray70 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray71 = strBuilder61.getChars(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder52.appendln(charArray70, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder45.appendln(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder14.appendln(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a', 'a');
        boolean boolean82 = strTokenizer81.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test11357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11357");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(strMatcher10, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        int int20 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendln(stringBuffer21, (int) (byte) 1, (int) (byte) 1);
        boolean boolean25 = strBuilder5.equalsIgnoreCase(strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendSeparator("");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test11358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11358");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        java.io.IOException iOException5 = new java.io.IOException("hi!", throwable3);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("", (java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test11359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11359");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        char[] charArray27 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray28 = strBuilder18.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        strBuilder13.getChars((int) (byte) 0, 0, charArray27, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        java.io.IOException iOException42 = new java.io.IOException("#4#a4#", throwable40);
        java.io.IOException iOException43 = new java.io.IOException(throwable40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1.0f, iOException43, false, 100, strBuilder46 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendWithSeparators(objArray47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        java.lang.String str55 = strBuilder53.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.append((java.lang.CharSequence) str55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder13.append((java.lang.CharSequence) strBuilder58);
        int int64 = strBuilder61.lastIndexOf('e', 37);
        int int66 = strBuilder61.lastIndexOf('0');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 29 + "'", int64 == 29);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 36 + "'", int66 == 36);
    }

    @Test
    public void test11360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11360");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        int int16 = reader13.read();
        reader13.reset();
        boolean boolean18 = reader13.markSupported();
        int int19 = reader13.read();
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("hi!");
        java.lang.String str31 = strTokenizer30.nextToken();
        java.util.List<java.lang.String> strList32 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer30.setTrimmerMatcher(strMatcher33);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        int int46 = strMatcher33.isMatch(charArray41, 0);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer58.getTrimmerMatcher();
        boolean boolean61 = strTokenizer58.isIgnoreEmptyTokens();
        boolean boolean62 = strTokenizer58.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        java.lang.String str67 = strBuilder66.getNullText();
        char[] charArray69 = new char[] { 'a' };
        char[] charArray70 = strBuilder66.getChars(charArray69);
        int int74 = strMatcher63.isMatch(charArray70, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer58.reset(charArray70);
        int int80 = strMatcher33.isMatch(charArray70, 0, (int) '4', 49);
        int int81 = reader13.read(charArray70);
        reader13.mark(40);
        reader13.reset();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test11361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11361");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        int int14 = strBuilder0.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln("1false0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setIgnoreEmptyTokens(false);
        java.lang.String str21 = strTokenizer18.nextToken();
        char[] charArray27 = new char[] { 'a', 'a', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.appendln(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj32 = strTokenizer31.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        boolean boolean34 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList35 = strTokenizer31.getTokenList();
        boolean boolean36 = strList35.isEmpty();
        boolean boolean38 = strList35.add("35.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.appendAll((java.lang.Iterable<java.lang.String>) strList35);
        int int42 = strBuilder16.indexOf('4', 46);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "aa## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "aa## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, a, #, #,  ]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test11362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11362");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int23 = strBuilder9.lastIndexOf(strMatcher21, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.appendSeparator("StrTokenizer[#4#a4#]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder26.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.deleteFirst(strMatcher56);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("hi!");
        java.lang.String str69 = strTokenizer68.nextToken();
        java.util.List<java.lang.String> strList70 = strTokenizer68.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer68.setTrimmerMatcher(strMatcher71);
        java.lang.String str73 = strTokenizer72.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer72.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder57.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer72, "  \nStrTokenizer[#4#a4#0]1.0java.io.IOExceptionfalse1001.035.04");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln(" falseStrTokenizaaaaaaaaaaaaaaaaaaaaaaaa100");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder83.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendln((long) '#');
        java.util.stream.IntStream intStream87 = strBuilder84.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.insert(0, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder79.append((java.lang.CharSequence) strBuilder89);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder89.appendln((long) 190);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "#4#a4#" + "'", str69, "#4#a4#");
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(intStream87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test11363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11363");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        java.io.Reader reader7 = strBuilder6.asReader();
        int int9 = strBuilder6.indexOf('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append((double) (-1));
        java.lang.String str14 = strBuilder6.substring((int) '\000', 70);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder6.replace(0, 66, "a.io.IOExceptionfalse1001.0\n35.0\n#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append("\nava.io.IOE\n.IOExceptionfalse1001.0\n35.0\n1false0\n\n3232.0\n1.0java.io.IOExceptionfalse1001.0\n35.0\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "100.0-1.0" + "'", str14, "100.0-1.0");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test11364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11364");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream13 = strList12.stream();
        // The following exception was thrown during execution in test generation
        try {
            strList12.add(15, "\n0.53\n0.1001eslafnoitpecxEOI.oi.avaj0.1");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 15, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strStream13);
    }

    @Test
    public void test11365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11365");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.clear();
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        int int24 = strMatcher15.isMatch(charArray22, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.append(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.appendAll((java.util.Iterator<java.lang.String>) strTokenizer30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        java.lang.String str37 = strBuilder35.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNull();
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.append(stringBuffer42, (int) '4', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.appendln((java.lang.Object) stringBuffer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder31.appendln(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder31.deleteFirst("1.0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("0\n 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator('\000', 'f');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test11366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11366");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        java.lang.String str13 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder4.appendSeparator('a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append("a10");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.delete(41, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test11367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11367");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int21 = strBuilder18.indexOf(strMatcher20);
        int int22 = strBuilder12.indexOf(strMatcher20);
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher20, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test11368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11368");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.reset();
        java.util.List<java.lang.String> strList13 = strTokenizer8.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        int int23 = strBuilder17.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln(true);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        java.lang.String str47 = strTokenizer43.next();
        int int48 = strList33.indexOf((java.lang.Object) strTokenizer43);
        java.util.stream.Stream<java.lang.String> strStream49 = strList33.stream();
        strList33.add((int) (short) 0, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList33, "\n");
        boolean boolean55 = strList13.addAll((int) '\000', (java.util.Collection<java.lang.String>) strList33);
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("hi!");
        java.lang.String str67 = strTokenizer66.nextToken();
        java.util.List<java.lang.String> strList68 = strTokenizer66.getTokenList();
        boolean boolean70 = strList68.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str73 = strTokenizer72.getContent();
        boolean boolean74 = strList68.equals((java.lang.Object) strTokenizer72);
        java.lang.String str76 = strList68.remove((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream77 = strList68.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator78 = strList68.spliterator();
        boolean boolean79 = strList33.containsAll((java.util.Collection<java.lang.String>) strList68);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#4#a4#" + "'", str67, "#4#a4#");
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "#4#a4#" + "'", str76, "#4#a4#");
        org.junit.Assert.assertNotNull(strStream77);
        org.junit.Assert.assertNotNull(strSpliterator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test11369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11369");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        long long18 = reader13.skip(0L);
        reader13.close();
        java.nio.CharBuffer charBuffer20 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int21 = reader13.read(charBuffer20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test11370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11370");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("hi!");
        java.lang.String str37 = strTokenizer36.nextToken();
        java.util.List<java.lang.String> strList38 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer36.setTrimmerMatcher(strMatcher39);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        int int52 = strMatcher39.isMatch(charArray47, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder23.append(charArray47);
        int int54 = strBuilder53.length();
        int int57 = strBuilder53.lastIndexOf('0', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.append((float) 33);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 37 + "'", int54 == 37);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test11371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11371");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("hi!");
        boolean boolean62 = strTokenizer59.isIgnoreEmptyTokens();
        java.lang.String str63 = strTokenizer59.next();
        int int64 = strList49.indexOf((java.lang.Object) strTokenizer59);
        boolean boolean65 = strList27.addAll((java.util.Collection<java.lang.String>) strList49);
        java.util.stream.Stream<java.lang.String> strStream66 = strList49.parallelStream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#4#a4#" + "'", str63, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strStream66);
    }

    @Test
    public void test11372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11372");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.appendln(42);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendSeparator('\000', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendPadding((int) ':', '.');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.append("2.02", 60, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test11373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11373");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteFirst(strMatcher21);
        int int24 = strBuilder2.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder2.appendFixedWidthPadLeft((int) (short) 0, (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.append(true);
        java.lang.String str33 = strBuilder32.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test11374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11374");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a');
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoreEmptyTokens(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer17.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test11375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11375");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        java.lang.Throwable throwable19 = null;
        java.io.IOException iOException20 = new java.io.IOException("", throwable19);
        java.io.IOException iOException21 = new java.io.IOException("#4#a4#", throwable19);
        java.io.IOException iOException22 = new java.io.IOException(throwable19);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray26 = new java.lang.Object[] { 1.0f, iOException22, false, 100, strBuilder25 };
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.appendWithSeparators(objArray26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendln(10L);
        int int44 = strBuilder38.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean54 = strBuilder48.startsWith("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int71 = strBuilder68.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder48.deleteFirst(strMatcher70);
        int int73 = strBuilder9.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder9.appendPadding((int) (byte) -1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder9.minimizeCapacity();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test11376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11376");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setDelimiterChar('I');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = strTokenizer15.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test11377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11377");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.deleteAll(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.append((float) (byte) 0);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int57 = strBuilder52.indexOf(strMatcher55, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.replaceFirst(strMatcher55, "100.0false\n");
        int int62 = strBuilder28.lastIndexOf(strMatcher55, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder18.replaceAll(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        java.lang.String str69 = strBuilder68.getNullText();
        char[] charArray71 = new char[] { 'a' };
        char[] charArray72 = strBuilder68.getChars(charArray71);
        int int76 = strMatcher65.isMatch(charArray72, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray72);
        boolean boolean78 = strBuilder18.equals((java.lang.Object) charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray72);
        char[] charArray80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.reset(charArray80);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
    }

    @Test
    public void test11378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11378");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasNext();
        java.util.List<java.lang.String> strList12 = strTokenizer8.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream13 = strList12.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList12.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        int int40 = strList12.indexOf((java.lang.Object) strTokenizer33);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        java.lang.String str52 = strTokenizer51.nextToken();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        boolean boolean55 = strList53.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str58 = strTokenizer57.getContent();
        boolean boolean59 = strList53.equals((java.lang.Object) strTokenizer57);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean61 = strList53.equals((java.lang.Object) strMatcher60);
        java.util.Spliterator<java.lang.String> strSpliterator62 = strList53.spliterator();
        boolean boolean64 = strList53.add("59.052.0");
        strList53.clear();
        boolean boolean66 = strList12.containsAll((java.util.Collection<java.lang.String>) strList53);
        java.util.ListIterator<java.lang.String> strItor67 = strList12.listIterator();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "#4#a4#" + "'", str52, "#4#a4#");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strItor67);
    }

    @Test
    public void test11379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11379");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        reader13.mark(48);
        long long20 = reader13.skip(0L);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        int int32 = reader13.read(charArray27);
        java.nio.CharBuffer charBuffer33 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int34 = reader13.read(charBuffer33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test11380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11380");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendPadding(4, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.insert(34, (float) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((double) '4');
        char[] charArray41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln(charArray41, 66, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.appendSeparator(" e");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendSeparator('3', 61);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test11381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11381");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.appendln((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.appendln((float) 15);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        int int22 = strBuilder18.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln((double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadLeft((int) (short) 0, (int) '\000', '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((double) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder2.appendFixedWidthPadLeft((java.lang.Object) 100, 93, '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test11382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11382");
        java.lang.String[] strArray2 = new java.lang.String[] { "0\nzinekoTrtSeslaf ", "a" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        boolean boolean5 = strList3.isEmpty();
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        java.lang.String str24 = strTokenizer20.next();
        int int25 = strList10.indexOf((java.lang.Object) strTokenizer20);
        java.util.ListIterator<java.lang.String> strItor27 = strList10.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor28 = strList10.iterator();
        java.lang.String[] strArray32 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        java.lang.String str47 = strTokenizer43.next();
        int int48 = strList33.indexOf((java.lang.Object) strTokenizer43);
        boolean boolean49 = strList10.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.ListIterator<java.lang.String> strItor50 = strList33.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        int int61 = strBuilder51.indexOf(strMatcher59);
        int int62 = strList33.indexOf((java.lang.Object) strBuilder51);
        int int63 = strList33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int67 = strBuilder64.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.setNullText("");
        int int76 = strList33.lastIndexOf((java.lang.Object) strBuilder75);
        boolean boolean77 = strList3.removeAll((java.util.Collection<java.lang.String>) strList33);
        java.util.ListIterator<java.lang.String> strItor78 = strList3.listIterator();
        strList3.clear();
        java.lang.Object[] objArray80 = strList3.toArray();
        strList3.clear();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 3 + "'", int63 == 3);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
    }

    @Test
    public void test11383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11383");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        java.io.Writer writer28 = writer9.append(' ');
        writer9.write("a10");
        writer9.write((int) '.');
        // The following exception was thrown during execution in test generation
        try {
            writer9.write(" \n", 5, 41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer28);
    }

    @Test
    public void test11384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11384");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write("StrTokenizer[#4#a4#]", 0, 15);
        writer37.flush();
        writer37.write("1false0\n");
        writer37.write((int) (byte) 100);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
    }

    @Test
    public void test11385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11385");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        java.util.ListIterator<java.lang.String> strItor8 = strList7.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.clear();
        java.lang.String str14 = strBuilder12.rightString((int) (short) -1);
        java.lang.String str16 = strBuilder12.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoreEmptyTokens(false);
        int int23 = strTokenizer20.previousIndex();
        java.lang.Object obj24 = strTokenizer20.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.append((java.lang.Object) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.reverse();
        java.io.Reader reader27 = strBuilder26.asReader();
        int int28 = strList7.indexOf((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln('0');
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("hi!");
        boolean boolean44 = strTokenizer41.isIgnoreEmptyTokens();
        int int45 = strTokenizer41.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer41.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNewLine();
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        char[] charArray68 = strBuilder58.getChars(charArray65);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer47.reset(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder30.getChars(13, 28, charArray68, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strItor8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
    }

    @Test
    public void test11386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11386");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        int int15 = strBuilder13.indexOf("1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str20 = strBuilder18.leftString(32);
        boolean boolean21 = strBuilder13.equalsIgnoreCase(strBuilder18);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        java.lang.String str33 = strTokenizer32.nextToken();
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        java.lang.String str38 = strBuilder37.getNullText();
        char[] charArray40 = new char[] { 'a' };
        char[] charArray41 = strBuilder37.getChars(charArray40);
        char[] charArray46 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray47 = strBuilder37.getChars(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray47);
        int int49 = strList34.indexOf((java.lang.Object) charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray47);
        int int54 = strBuilder18.lastIndexOf(strMatcher53);
        java.lang.String str56 = strBuilder18.leftString(34);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.deleteAll(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.append((float) (byte) 0);
        char[] charArray72 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder79.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int87 = strBuilder82.indexOf(strMatcher85, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher85);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder59.replaceFirst(strMatcher85, "100.0false\n");
        char[] charArray91 = strBuilder59.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            strBuilder18.getChars(48, 48, charArray91, 65);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 48");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "0.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "0.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[0, ., 0]");
    }

    @Test
    public void test11387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11387");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator("#4#a4#", (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.replace(1, 5, "StrTokenizer[100.0\n]");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        java.io.Reader reader37 = strBuilder34.asReader();
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        int int49 = reader37.read(charArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder29.appendln(charArray44);
        java.lang.String str53 = strBuilder50.substring(22, 70);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.insert(64, (float) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 64");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "a.io.IOExceptionfalse1001.0\n35.0\n#4#a4#\n" + "'", str53, "a.io.IOExceptionfalse1001.0\n35.0\n#4#a4#\n");
    }

    @Test
    public void test11388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11388");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("#", '3', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test11389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11389");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String str10 = strBuilder0.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.append((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        boolean boolean17 = strBuilder16.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        int int28 = strMatcher19.isMatch(charArray26, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.append(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append("#4#a4#");
        java.lang.String str37 = strBuilder30.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.append(false);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendFixedWidthPadRight((java.lang.Object) strTokenizer56, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.appendln((int) (short) 10);
        boolean boolean73 = strBuilder43.equalsIgnoreCase(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder43.reverse();
        java.lang.StringBuffer stringBuffer75 = strBuilder74.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder30.append(stringBuffer75, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder16.append(stringBuffer75, 6, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder0.appendln(stringBuffer75);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.appendFixedWidthPadLeft(10, 32, 'c');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder84.insert(46, 'a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#4#a4#" + "'", str10, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(stringBuffer75);
        org.junit.Assert.assertEquals(stringBuffer75.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test11390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11390");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) '4');
        int int16 = reader13.read();
        boolean boolean17 = reader13.markSupported();
        boolean boolean18 = reader13.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator('e', '0');
        char[] charArray43 = strBuilder42.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            int int46 = reader13.read(charArray43, 16, 206);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " e");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " e");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , e]");
    }

    @Test
    public void test11391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11391");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        boolean boolean17 = reader13.markSupported();
        int int18 = reader13.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        char[] charArray30 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray31 = strBuilder21.getChars(charArray30);
        java.io.Reader reader32 = strBuilder21.asReader();
        long long34 = reader32.skip((long) 59);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        int int57 = strBuilder47.indexOf(strMatcher55);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher55, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        int int73 = reader32.read(charArray41);
        int int74 = reader13.read(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "aa");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer79.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher81);
    }

    @Test
    public void test11392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11392");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        java.lang.String str13 = strBuilder11.leftString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        java.lang.Throwable throwable21 = null;
        java.io.IOException iOException22 = new java.io.IOException("", throwable21);
        java.io.IOException iOException23 = new java.io.IOException("#4#a4#", throwable21);
        java.io.IOException iOException24 = new java.io.IOException(throwable21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1.0f, iOException24, false, 100, strBuilder27 };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.appendWithSeparators(objArray28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        java.lang.String str36 = strBuilder34.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder17.append((java.lang.CharSequence) str36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append("#4#a4#");
        boolean boolean46 = strBuilder39.equals(strBuilder45);
        int int49 = strBuilder45.indexOf('a', 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.append((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strBuilder51, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendSeparator('I', 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1false0\n" + "'", str13, "1false0\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test11393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11393");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendSeparator("ptionfalse100", 57);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        java.lang.String str22 = strTokenizer18.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer18.setDelimiterChar('e');
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.Throwable throwable33 = null;
        java.io.IOException iOException34 = new java.io.IOException("", throwable33);
        java.io.IOException iOException35 = new java.io.IOException("#4#a4#", throwable33);
        java.io.IOException iOException36 = new java.io.IOException(throwable33);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1.0f, iOException36, false, 100, strBuilder39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendWithSeparators(objArray40, "");
        java.lang.String str44 = strBuilder29.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.deleteFirst("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer24.setQuoteMatcher(strMatcher47);
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray50, "se#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("java.io.IOException: java.io.IOException: java.io.IOException: 59.0");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#4#a4#" + "'", str22, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str25, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str44, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test11394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11394");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) strMatcher15, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((double) 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln((long) 37);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test11395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11395");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int10 = strBuilder5.indexOf(strMatcher8, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strBuilder5.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        java.io.Reader reader25 = strBuilder14.asReader();
        java.lang.String str26 = strBuilder14.toString();
        java.lang.StringBuffer stringBuffer27 = strBuilder14.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.append(stringBuffer27);
        boolean boolean30 = strBuilder28.contains(".0jva.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(stringBuffer27);
        org.junit.Assert.assertEquals(stringBuffer27.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test11396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11396");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int10 = strBuilder0.indexOf('\000', 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendln("##########################110\n\ni###############################################################################################", 66, 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        char[] charArray23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(charArray23);
        boolean boolean25 = strBuilder22.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        boolean boolean31 = strBuilder30.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        java.lang.String str37 = strBuilder36.getNullText();
        char[] charArray39 = new char[] { 'a' };
        char[] charArray40 = strBuilder36.getChars(charArray39);
        int int42 = strMatcher33.isMatch(charArray40, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.append(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder22.insert((int) (byte) 1, charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int53 = strBuilder50.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(' ');
        java.util.stream.IntStream intStream56 = strBuilder55.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int59 = strBuilder55.lastIndexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int74 = strBuilder71.lastIndexOf(strMatcher72, (int) (short) -1);
        boolean boolean75 = strBuilder55.contains(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher49, strMatcher72);
        int int78 = strBuilder44.lastIndexOf(strMatcher72, 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder0.replaceAll(strMatcher72, "a4");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(intStream56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test11397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11397");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("1false0\n\n#", "#");
    }

    @Test
    public void test11398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11398");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.write("#4#a4#", 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        writer9.write(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray57 = strBuilder49.getChars(charArray55);
        writer9.write(charArray55);
        java.io.Writer writer60 = writer9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int76 = strBuilder73.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.deleteFirst(strMatcher75);
        char[] charArray78 = strBuilder77.toCharArray();
        writer9.write(charArray78);
        // The following exception was thrown during execution in test generation
        try {
            writer9.write("StrTokenizer[4#4]", (int) 'e', 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(writer60);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 10\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 10\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 1, 0, \n]");
    }

    @Test
    public void test11399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11399");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert((int) '\000', "4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendPadding((int) 'a', '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.delete(5, 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.setNullText("a4 4");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.replace(48, 45, "StrTokenizer[#4#a4#]\na#4#a4#\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test11400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11400");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.io.Reader reader3 = strBuilder0.asReader();
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray10);
        int int15 = reader3.read(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        int int18 = strTokenizer17.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(reader3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test11401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11401");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("java.io.IOException: StrTokenizer[not tokenized yet]");
        int int2 = strTokenizer1.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('\000');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test11402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11402");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        char[] charArray7 = null;
        char[] charArray8 = strBuilder6.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, " falseStrTokeniz");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer10.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "0.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "0.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[0, ., 0]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher13);
    }

    @Test
    public void test11403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11403");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        boolean boolean60 = strList27.retainAll((java.util.Collection<java.lang.String>) strList57);
        strList27.clear();
        java.util.ListIterator<java.lang.String> strItor62 = strList27.listIterator();
        java.util.stream.Stream<java.lang.String> strStream63 = strList27.parallelStream();
        int int64 = strList27.size();
        java.util.Iterator<java.lang.String> strItor65 = strList27.iterator();
        boolean boolean66 = strItor65.hasNext();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test11404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11404");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.setLength(16);
        boolean boolean76 = strBuilder71.endsWith("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.ensureCapacity((int) (short) 100);
        java.io.Reader reader79 = strBuilder71.asReader();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(reader79);
    }

    @Test
    public void test11405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11405");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        int int13 = strTokenizer11.nextIndex();
        java.lang.String str14 = strTokenizer11.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer11.setDelimiterChar('a');
        boolean boolean17 = strTokenizer16.hasNext();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test11406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11406");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.setLength(2);
        char[] charArray30 = strBuilder27.toCharArray(1, 70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray30);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), ".");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), ".");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[.]");
        org.junit.Assert.assertNotNull(strMatcher32);
    }

    @Test
    public void test11407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11407");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder17.appendln(charArray35, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer8.reset(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '0', '\n');
        java.util.List<java.lang.String> strList46 = strTokenizer45.getTokenList();
        int int47 = strTokenizer45.size();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test11408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11408");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.reverse();
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder7.append(stringBuffer52, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append(stringBuffer52);
        int int59 = strBuilder0.indexOf("StrTokenizer[not tokenized yet]", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder0.insert((int) (byte) 10, (float) 100L);
        boolean boolean64 = strBuilder62.contains('3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test11409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11409");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.appendln(strBuilder9);
        java.lang.String str14 = strBuilder2.leftString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder2.appendln(true);
        char[] charArray18 = strBuilder17.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "10\nhi!hi!truehi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "10\nhi!hi!truehi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[1, 0, \n, h, i, !, h, i, !, t, r, u, e, h, i, !]");
    }

    @Test
    public void test11410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11410");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendFixedWidthPadLeft(1, 32, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.appendln(6L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendSeparator('.');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test11411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11411");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(" a4a4", '\000', '0');
    }

    @Test
    public void test11412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11412");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        java.lang.String str16 = strBuilder15.getNullText();
        char[] charArray18 = new char[] { 'a' };
        char[] charArray19 = strBuilder15.getChars(charArray18);
        char[] charArray24 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray25 = strBuilder15.getChars(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        int int27 = strList12.indexOf((java.lang.Object) charArray25);
        strList12.clear();
        java.lang.Object[] objArray29 = strList12.toArray();
        strList12.add(0, "35.0");
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList12.replaceAll(strUnaryOperator33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
    }

    @Test
    public void test11413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11413");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "java.io.IOException: StrTokenizer[not tokenized yet]");
        java.lang.String str30 = strTokenizer29.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        boolean boolean37 = strBuilder36.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        java.lang.String str43 = strBuilder42.getNullText();
        char[] charArray45 = new char[] { 'a' };
        char[] charArray46 = strBuilder42.getChars(charArray45);
        int int48 = strMatcher39.isMatch(charArray46, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.append(charArray46);
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int71 = strBuilder68.indexOf(strMatcher70);
        int int72 = strBuilder62.indexOf(strMatcher70);
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher83);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher70, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer32.setQuoteMatcher(strMatcher85);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer88);
    }

    @Test
    public void test11414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11414");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream8 = strList7.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.deleteAll(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        char[] charArray43 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray44 = strBuilder34.getChars(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder25.appendln(charArray43, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendln((int) (short) 10);
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getIgnoredMatcher();
        int int78 = strBuilder59.indexOf(strMatcher76, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher53, strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder19.append(charArray43);
        java.util.stream.IntStream intStream81 = strBuilder19.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder10.append(strBuilder19);
        java.util.stream.IntStream intStream83 = strBuilder10.chars();
        boolean boolean84 = strList7.equals((java.lang.Object) strBuilder10);
        int int87 = strBuilder10.indexOf("\n01 false\n", (int) '\000');
        boolean boolean89 = strBuilder10.endsWith("java.io.IOException: false19.0");
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(intStream81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(intStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test11415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11415");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        int int36 = strTokenizer35.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test11416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11416");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test11417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11417");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.String str31 = strBuilder29.rightString((int) (short) -1);
        java.lang.String str33 = strBuilder29.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setIgnoreEmptyTokens(false);
        int int40 = strTokenizer37.previousIndex();
        java.lang.Object obj41 = strTokenizer37.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.append((java.lang.Object) strTokenizer37);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder25.appendFixedWidthPadLeft((java.lang.Object) strBuilder42, (int) 'a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder25.append(true);
        char[] charArray49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setQuoteChar('#');
        java.util.List<java.lang.String> strList57 = strTokenizer56.getTokenList();
        java.util.ListIterator<java.lang.String> strItor58 = strList57.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList57, "onfalse1001.0\n35.0\n1false0\n\ne104444444444444444444444444444444444444444444444  \n");
        int int61 = strList57.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test11418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11418");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        int int21 = strBuilder15.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append("#4#a4#");
        java.lang.String str32 = strBuilder25.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.append(false);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setDelimiterString("hi!");
        boolean boolean54 = strTokenizer51.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder38.appendFixedWidthPadRight((java.lang.Object) strTokenizer51, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.appendln((int) (short) 10);
        boolean boolean68 = strBuilder38.equalsIgnoreCase(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.reverse();
        java.lang.StringBuffer stringBuffer70 = strBuilder69.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder25.append(stringBuffer70, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder24.append(stringBuffer70);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder9.append((java.lang.Object) stringBuffer70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder2.append(stringBuffer70);
        java.lang.CharSequence charSequence79 = strBuilder2.subSequence((int) (byte) 10, 15);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder2.setLength(15);
        char[] charArray82 = strBuilder81.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(stringBuffer70);
        org.junit.Assert.assertEquals(stringBuffer70.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + charSequence79 + "' != '" + "eslaf" + "'", charSequence79, "eslaf");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "zinekoTrtSeslaf");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "zinekoTrtSeslaf");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[z, i, n, e, k, o, T, r, t, S, e, s, l, a, f]");
    }

    @Test
    public void test11419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11419");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        java.lang.String str17 = strTokenizer8.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.replace(strMatcher41, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int48 = strBuilder30.lastIndexOf(strMatcher41, (int) (short) 100);
        int int50 = strBuilder25.lastIndexOf(strMatcher41, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer18.setDelimiterMatcher(strMatcher41);
        java.lang.String str52 = strTokenizer51.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = strTokenizer51.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test11420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11420");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32", 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.setCharAt(31, '0');
        java.io.Writer writer16 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str18 = strBuilder17.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setNewLineText("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.deleteCharAt((int) '\000');
        char[] charArray29 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("");
        char[] charArray39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(charArray39);
        boolean boolean41 = strBuilder38.isEmpty();
        java.lang.String str43 = strBuilder38.rightString((int) 'a');
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder38.replaceAll(strMatcher56, "a");
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("hi!");
        java.lang.String str70 = strTokenizer69.nextToken();
        java.util.List<java.lang.String> strList71 = strTokenizer69.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst("hi!");
        java.lang.String str75 = strBuilder74.getNullText();
        char[] charArray77 = new char[] { 'a' };
        char[] charArray78 = strBuilder74.getChars(charArray77);
        char[] charArray83 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray84 = strBuilder74.getChars(charArray83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray84);
        int int86 = strList71.indexOf((java.lang.Object) charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("1.0", strMatcher56, strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        int int95 = strBuilder9.indexOf(strMatcher93, (int) '\n');
        boolean boolean97 = strBuilder9.contains("java.io.IOException: StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "rue");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "rue");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[r, u, e]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10\n\n" + "'", str43, "10\n\n");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#4#a4#" + "'", str70, "#4#a4#");
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 12 + "'", int95 == 12);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test11421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11421");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        int int13 = strBuilder11.lastIndexOf("aaaaaaaaaaaaaaaaaaaaaaaa100");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceFirst('1', 'c');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test11422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11422");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.deleteAll('4');
        int int16 = strBuilder11.size();
        boolean boolean18 = strBuilder11.contains("se1001.0\n35.0\ntrue");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11423");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("se1001.0\n35.0\ntrue");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test11424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11424");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        java.lang.String str53 = strTokenizer52.nextToken();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer52.setTrimmerMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("aa", strMatcher41, strMatcher55);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("hi!");
        boolean boolean69 = strTokenizer66.isIgnoreEmptyTokens();
        java.lang.String str70 = strTokenizer66.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse", strMatcher55, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder30.replaceFirst(strMatcher71, "java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendSeparator("100.012", 37);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln((double) 109);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#4#a4#" + "'", str70, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test11425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11425");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterChar('a');
        java.lang.String str12 = strTokenizer11.previousToken();
        java.util.List<java.lang.String> strList13 = strTokenizer11.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream14 = strList13.stream();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        int int40 = strTokenizer33.previousIndex();
        boolean boolean41 = strTokenizer33.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer33.reset("#4#a4#");
        java.util.List<java.lang.String> strList44 = strTokenizer43.getTokenList();
        strList44.clear();
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int67 = strBuilder62.indexOf(strMatcher65, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher65);
        boolean boolean69 = strTokenizer68.hasNext();
        java.util.List<java.lang.String> strList70 = strTokenizer68.getTokenList();
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setDelimiterString("hi!");
        java.lang.String str82 = strTokenizer81.nextToken();
        java.util.List<java.lang.String> strList83 = strTokenizer81.getTokenList();
        boolean boolean85 = strList83.add("hi!");
        java.util.Iterator<java.lang.String> strItor86 = strList83.iterator();
        boolean boolean87 = strList83.isEmpty();
        boolean boolean88 = strList70.removeAll((java.util.Collection<java.lang.String>) strList83);
        java.util.ListIterator<java.lang.String> strItor90 = strList70.listIterator(0);
        boolean boolean91 = strList44.containsAll((java.util.Collection<java.lang.String>) strList70);
        boolean boolean92 = strList13.retainAll((java.util.Collection<java.lang.String>) strList44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = strList44.remove((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "#4#a4#" + "'", str82, "#4#a4#");
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test11426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11426");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        int int20 = strBuilder14.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append("#4#a4#");
        java.lang.String str31 = strBuilder24.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder37.reverse();
        java.lang.StringBuffer stringBuffer69 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.append(stringBuffer69, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder23.append(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder9.appendln(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.setNewLineText("100.01210");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test11427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11427");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterString("hi!");
        java.lang.String str26 = strTokenizer25.nextToken();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        java.lang.String str31 = strBuilder30.getNullText();
        char[] charArray33 = new char[] { 'a' };
        char[] charArray34 = strBuilder30.getChars(charArray33);
        char[] charArray39 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray40 = strBuilder30.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        int int42 = strList27.indexOf((java.lang.Object) charArray40);
        strList27.clear();
        java.lang.Object[] objArray44 = strList27.toArray();
        boolean boolean45 = strList12.retainAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor46 = strList27.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("100.01210\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        java.lang.String str52 = strBuilder51.getNullText();
        char[] charArray54 = new char[] { 'a' };
        char[] charArray55 = strBuilder51.getChars(charArray54);
        char[] charArray60 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray61 = strBuilder51.getChars(charArray60);
        java.io.Reader reader62 = strBuilder51.asReader();
        reader62.mark(10);
        reader62.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.clear();
        char[] charArray75 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.appendln(charArray75);
        int int78 = reader62.read(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '0', 'a');
        int int87 = strMatcher48.isMatch(charArray75, (-1));
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray75);
        boolean boolean89 = strList27.contains((java.lang.Object) charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#4#a4#" + "'", str26, "#4#a4#");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test11428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11428");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder11.insert((int) (short) 1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendNull();
        boolean boolean80 = strBuilder78.contains("0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test11429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11429");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append("#4#a4#");
        java.lang.String str21 = strBuilder14.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(false);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        boolean boolean43 = strTokenizer40.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder27.appendFixedWidthPadRight((java.lang.Object) strTokenizer40, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        boolean boolean57 = strBuilder27.equalsIgnoreCase(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.reverse();
        java.lang.StringBuffer stringBuffer59 = strBuilder58.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder14.append(stringBuffer59, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder13.appendln(stringBuffer59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str67 = strTokenizer66.getContent();
        char[] charArray73 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer66.reset(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder13.insert((int) (byte) 1, (java.lang.Object) strTokenizer75);
        java.lang.StringBuffer stringBuffer77 = strBuilder13.toStringBuffer();
        java.io.Writer writer78 = strBuilder13.asWriter();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#4#a4#" + "'", str21, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(stringBuffer59);
        org.junit.Assert.assertEquals(stringBuffer59.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), " StrTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n");
        org.junit.Assert.assertNotNull(writer78);
    }

    @Test
    public void test11430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11430");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        java.lang.String str13 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder4.appendSeparator('a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.appendln(true);
        java.lang.String str21 = strBuilder4.midString(22, 35);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder4.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((long) 200);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test11431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11431");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setDelimiterString("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer2.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer2.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getQuoteMatcher();
        java.lang.String str12 = strTokenizer8.nextToken();
        java.lang.String str13 = strTokenizer8.nextToken();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test11432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11432");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append("#4#a4#");
        java.lang.String str20 = strBuilder13.leftString((int) (short) 100);
        int int22 = strBuilder13.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder13.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder13.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int41 = strBuilder38.lastIndexOf(strMatcher39, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder13.replaceFirst(strMatcher39, "#4#a4#");
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        int int55 = strBuilder43.lastIndexOf(strMatcher53, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        java.lang.String str58 = strTokenizer57.getContent();
        boolean boolean59 = strTokenizer57.isIgnoreEmptyTokens();
        java.lang.String str60 = strTokenizer57.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 15 + "'", int55 == 15);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "aa4#4" + "'", str58, "aa4#4");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "aa4#4" + "'", str60, "aa4#4");
    }

    @Test
    public void test11433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11433");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.deleteFirst("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendFixedWidthPadRight(10, 2, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test11434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11434");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(strBuilder9, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst('a', 'I');
        int int18 = strBuilder15.indexOf(' ', 73);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test11435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11435");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("hi!");
        java.lang.String str37 = strTokenizer36.nextToken();
        java.util.List<java.lang.String> strList38 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer36.setTrimmerMatcher(strMatcher39);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        int int52 = strMatcher39.isMatch(charArray47, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder23.append(charArray47);
        int int54 = strBuilder53.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.deleteAll("va.io.IOExceptionfalse1001.");
        char[] charArray59 = strBuilder56.toCharArray(33, 109);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 37 + "'", int54 == 37);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a, 4, #]");
    }

    @Test
    public void test11436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11436");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        boolean boolean60 = strList27.retainAll((java.util.Collection<java.lang.String>) strList57);
        java.util.Spliterator<java.lang.String> strSpliterator61 = strList57.spliterator();
        java.util.Collection<java.lang.String> strCollection62 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = strList57.removeAll(strCollection62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strSpliterator61);
    }

    @Test
    public void test11437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11437");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append("#4#a4#");
        java.lang.String str9 = strBuilder2.leftString((int) (short) 100);
        int int11 = strBuilder2.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder2.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append("#4#a4#");
        java.lang.String str29 = strBuilder22.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(false);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        boolean boolean51 = strTokenizer48.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strTokenizer48, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln((int) (short) 10);
        boolean boolean65 = strBuilder35.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder35.reverse();
        java.lang.StringBuffer stringBuffer67 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder22.append(stringBuffer67, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder21.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder1.appendSeparator('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.ensureCapacity(24);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendSeparator('a', 24);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("true\n", strMatcher81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder74.replaceFirst(strMatcher81, "java.io.IOException: #4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder74.appendln((double) '.');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#4#a4#" + "'", str9, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#4#a4#" + "'", str29, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test11438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11438");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder36.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder36.replaceFirst("4", "java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.ensureCapacity((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.minimizeCapacity();
        java.lang.String str65 = strBuilder60.substring(6);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "a.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n 10" + "'", str65, "a.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n 10");
    }

    @Test
    public void test11439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11439");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        int int11 = strBuilder10.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.deleteAll("#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.deleteFirst("1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.setCharAt(0, '\n');
        boolean boolean20 = strBuilder18.startsWith("ptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11440");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        int int13 = strTokenizer11.size();
        java.lang.String str14 = strTokenizer11.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer11.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer11.getIgnoredMatcher();
        java.lang.String str18 = strTokenizer11.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer11.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#" + "'", str14, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#" + "'", str18, "#4#");
    }

    @Test
    public void test11441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11441");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '#', '4');
        char[] charArray34 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        int int45 = strBuilder35.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer27.reset(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, '#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder51.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        java.lang.String str68 = strBuilder67.getNullText();
        char[] charArray70 = new char[] { 'a' };
        char[] charArray71 = strBuilder67.getChars(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int75 = strBuilder72.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int87 = strBuilder84.indexOf(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder83.deleteFirst(strMatcher86);
        int int89 = strBuilder67.indexOf(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder51.deleteFirst(strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer50.setDelimiterMatcher(strMatcher86);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer50.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strTokenizer91);
    }

    @Test
    public void test11442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11442");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setEmptyTokenAsNull(true);
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test11443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11443");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln((long) '#');
        java.util.stream.IntStream intStream8 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int24 = strBuilder21.lastIndexOf(strMatcher22, (int) (short) 10);
        int int26 = strBuilder5.indexOf(strMatcher22, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer0.setTrimmerMatcher(strMatcher22);
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.appendNewLine();
        java.lang.String str49 = strBuilder48.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        java.lang.Throwable throwable57 = null;
        java.io.IOException iOException58 = new java.io.IOException("", throwable57);
        java.io.IOException iOException59 = new java.io.IOException("#4#a4#", throwable57);
        java.io.IOException iOException60 = new java.io.IOException(throwable57);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1.0f, iOException60, false, 100, strBuilder63 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.appendWithSeparators(objArray64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.deleteAll('a');
        boolean boolean79 = strBuilder77.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.appendln((long) 100);
        boolean boolean83 = strBuilder81.startsWith("zinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder48.appendFixedWidthPadLeft((java.lang.Object) "zinekoTrtSeslaf ", (int) 'e', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder48.insert(59, 6);
        int int90 = strList28.lastIndexOf((java.lang.Object) strBuilder48);
        strList28.clear();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test11444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11444");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        boolean boolean7 = strBuilder2.endsWith("trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.deleteFirst("alse1001.0\n35.0\n1false0\n\nava.io.IOE\n1#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test11445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11445");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(' ');
        java.util.stream.IntStream intStream7 = strBuilder6.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendSeparator('\n', 0);
        int int13 = strBuilder10.indexOf("1.0java.io.IOExceptionfalse10005.0\nException: StrTo\n", 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test11446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11446");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        java.lang.String str6 = strBuilder5.getNullText();
        char[] charArray8 = new char[] { 'a' };
        char[] charArray9 = strBuilder5.getChars(charArray8);
        int int13 = strMatcher2.isMatch(charArray9, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer1.setTrimmerMatcher(strMatcher2);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString(".0jva.io.IOExceptionfalse1001.0jav\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        java.lang.String str21 = strBuilder20.getNullText();
        char[] charArray23 = new char[] { 'a' };
        char[] charArray24 = strBuilder20.getChars(charArray23);
        char[] charArray29 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray30 = strBuilder20.getChars(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.appendln("java.io.IOException: ");
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder32.replaceFirst(strMatcher43, "#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer14.setQuoteMatcher(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
    }

    @Test
    public void test11447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11447");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.deleteAll(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append(false);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("hi!");
        boolean boolean27 = strTokenizer24.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder11.appendFixedWidthPadRight((java.lang.Object) strTokenizer24, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln((int) (short) 10);
        boolean boolean41 = strBuilder11.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.insert((int) (byte) 1, 'a');
        char char46 = strBuilder36.charAt(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.appendPadding((int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(true);
        int int54 = strBuilder50.indexOf('c');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder5.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.appendSeparator('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteCharAt(20);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + char46 + "' != '" + ' ' + "'", char46 == ' ');
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test11448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11448");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (byte) 0);
        java.io.Reader reader34 = strBuilder29.asReader();
        long long36 = reader34.skip((long) (short) 1);
        reader34.mark(74);
        reader34.reset();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
    }

    @Test
    public void test11449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11449");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder16.indexOf(strMatcher19, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        boolean boolean23 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.nextToken();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        boolean boolean39 = strList37.add("hi!");
        java.util.Iterator<java.lang.String> strItor40 = strList37.iterator();
        boolean boolean41 = strList37.isEmpty();
        boolean boolean42 = strList24.removeAll((java.util.Collection<java.lang.String>) strList37);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        int int56 = strTokenizer54.size();
        java.lang.String str57 = strTokenizer54.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer54.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList60 = strTokenizer54.getTokenList();
        boolean boolean62 = strList60.add("0\n 10\n");
        boolean boolean63 = strList37.containsAll((java.util.Collection<java.lang.String>) strList60);
        java.util.Spliterator<java.lang.String> strSpliterator64 = strList60.spliterator();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "#4#a4#" + "'", str36, "#4#a4#");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#4#" + "'", str57, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strSpliterator64);
    }

    @Test
    public void test11450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11450");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln((long) '#');
        java.util.stream.IntStream intStream8 = strBuilder5.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int24 = strBuilder21.lastIndexOf(strMatcher22, (int) (short) 10);
        int int26 = strBuilder5.indexOf(strMatcher22, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer0.setTrimmerMatcher(strMatcher22);
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        java.lang.String[] strArray29 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        java.lang.Throwable throwable37 = null;
        java.io.IOException iOException38 = new java.io.IOException("", throwable37);
        java.io.IOException iOException39 = new java.io.IOException("#4#a4#", throwable37);
        java.io.IOException iOException40 = new java.io.IOException(throwable37);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1.0f, iOException40, false, 100, strBuilder43 };
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.appendWithSeparators(objArray44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder48.setLength((int) ' ');
        char[] charArray62 = strBuilder59.toCharArray((int) ' ', (int) 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.clear();
        java.lang.String str70 = strBuilder68.rightString((int) (short) -1);
        java.lang.String str72 = strBuilder68.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setIgnoreEmptyTokens(false);
        int int79 = strTokenizer76.previousIndex();
        java.lang.Object obj80 = strTokenizer76.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder68.append((java.lang.Object) strTokenizer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer86.setTrimmerMatcher(strMatcher88);
        int int91 = strBuilder82.lastIndexOf(strMatcher88, 48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer27.reset(charArray62);
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 22 + "'", int91 == 22);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strTokenizer96);
    }

    @Test
    public void test11451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11451");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        int int5 = strTokenizer4.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.set("alse1001.0\n35.0\n1false0\n\nava.io.IOE\n1#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test11452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11452");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.clear();
        char[] charArray71 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder64.appendln(charArray71);
        int int76 = strBuilder73.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        boolean boolean81 = strList27.remove((java.lang.Object) 32);
        java.util.stream.Stream<java.lang.String> strStream82 = strList27.stream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strStream82);
    }

    @Test
    public void test11453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11453");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert(4, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.appendNewLine();
        int int39 = strBuilder38.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.deleteAll("#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.deleteFirst("1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce");
        java.util.stream.IntStream intStream44 = strBuilder38.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder23.insert(19, (java.lang.Object) intStream44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder23.appendFixedWidthPadLeft((int) '0', (int) '3', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test11454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11454");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", 3, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher32);
        int int35 = strTokenizer34.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer34.getDelimiterMatcher();
        int int37 = strBuilder26.lastIndexOf(strMatcher36);
        boolean boolean38 = strBuilder14.equals((java.lang.Object) strBuilder26);
        boolean boolean40 = strBuilder14.contains('#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence43 = strBuilder14.subSequence(0, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 64");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test11455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11455");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst('#');
        java.lang.String str22 = strBuilder21.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.append(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        boolean boolean28 = strBuilder25.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.appendNewLine();
        java.lang.StringBuffer stringBuffer40 = strBuilder39.toStringBuffer();
        java.lang.StringBuffer stringBuffer41 = strBuilder39.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendFixedWidthPadLeft(55, 80, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNewLine();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder39.appendln(stringBuffer57);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder25.append(stringBuffer57, 9, 41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + " " + "'", str22, " ");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(stringBuffer40);
        org.junit.Assert.assertEquals(stringBuffer40.toString(), "100.0\n");
        org.junit.Assert.assertNotNull(stringBuffer41);
        org.junit.Assert.assertEquals(stringBuffer41.toString(), "100.0\n");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "100.0\n");
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test11456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11456");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.reverse();
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder7.append(stringBuffer52, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append(stringBuffer52);
        int int59 = strBuilder0.lastIndexOf('a', 39);
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer71.setDelimiterChar('a');
        java.lang.String str76 = strTokenizer75.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer75, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer75.setIgnoreEmptyTokens(false);
        boolean boolean81 = strTokenizer80.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = strTokenizer80.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 16 + "'", int59 == 16);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str76, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test11457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11457");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        java.lang.Throwable throwable27 = null;
        java.io.IOException iOException28 = new java.io.IOException("", throwable27);
        java.io.IOException iOException29 = new java.io.IOException("#4#a4#", throwable27);
        java.io.IOException iOException30 = new java.io.IOException(throwable27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1.0f, iOException30, false, 100, strBuilder33 };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendWithSeparators(objArray34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.setLength((int) ' ');
        int int50 = strList4.lastIndexOf((java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder38.deleteFirst('c');
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test11458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11458");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        boolean boolean60 = strList27.retainAll((java.util.Collection<java.lang.String>) strList57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append("#4#a4#");
        java.lang.String str68 = strBuilder61.leftString((int) (short) 100);
        int int70 = strBuilder61.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder61.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder61.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int89 = strBuilder86.lastIndexOf(strMatcher87, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder61.replaceFirst(strMatcher87, "#4#a4#");
        boolean boolean92 = strList27.remove((java.lang.Object) strBuilder91);
        int int93 = strList27.size();
        // The following exception was thrown during execution in test generation
        try {
            strList27.add(51, "1.0java.io.IOExceptionfalse1001.0\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 51, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "#4#a4#" + "'", str68, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test11459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11459");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("eptionfalse1001.0\n35.0\n1false0\n\n");
        boolean boolean2 = strTokenizer1.hasNext();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test11460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11460");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(15);
        java.io.Writer writer2 = strBuilder1.asWriter();
        writer2.write(4);
        java.io.Writer writer6 = writer2.append('.');
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertNotNull(writer6);
    }

    @Test
    public void test11461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11461");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder18.indexOf(strMatcher19, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.insert(0, '3');
        int int27 = strBuilder18.lastIndexOf("", 132);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 38 + "'", int27 == 38);
    }

    @Test
    public void test11462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11462");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(strBuilder9, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.insert(2, (java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.appendln((int) (short) 100);
        java.lang.String str23 = strBuilder14.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert(0, (double) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((float) 45);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test11463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11463");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        java.lang.Throwable throwable29 = null;
        java.io.IOException iOException30 = new java.io.IOException("", throwable29);
        java.io.IOException iOException31 = new java.io.IOException("#4#a4#", throwable29);
        java.io.IOException iOException32 = new java.io.IOException(throwable29);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1.0f, iOException32, false, 100, strBuilder35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.appendWithSeparators(objArray36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert((int) (byte) 0, (int) (short) -1);
        boolean boolean50 = strList12.remove((java.lang.Object) strBuilder46);
        java.util.Iterator<java.lang.String> strItor51 = strList12.iterator();
        java.lang.String[] strArray55 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("hi!");
        boolean boolean69 = strTokenizer66.isIgnoreEmptyTokens();
        java.lang.String str70 = strTokenizer66.next();
        int int71 = strList56.indexOf((java.lang.Object) strTokenizer66);
        java.util.ListIterator<java.lang.String> strItor73 = strList56.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor74 = strList56.iterator();
        java.lang.String[] strArray78 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        char[] charArray87 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer89.setDelimiterString("hi!");
        boolean boolean92 = strTokenizer89.isIgnoreEmptyTokens();
        java.lang.String str93 = strTokenizer89.next();
        int int94 = strList79.indexOf((java.lang.Object) strTokenizer89);
        boolean boolean95 = strList56.addAll((java.util.Collection<java.lang.String>) strList79);
        java.util.ListIterator<java.lang.String> strItor96 = strList79.listIterator();
        boolean boolean98 = strList79.add("");
        boolean boolean99 = strList12.addAll((java.util.Collection<java.lang.String>) strList79);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#4#a4#" + "'", str70, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertNotNull(strItor74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "#4#a4#" + "'", str93, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(strItor96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test11464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11464");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(".0j");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        java.lang.String str6 = strBuilder5.getNullText();
        char[] charArray8 = new char[] { 'a' };
        char[] charArray9 = strBuilder5.getChars(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendPadding((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.replaceFirst('a', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.replaceFirst("1.0java.io.IOExceptionfalse100", "001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.reverse();
        char[] charArray29 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("hi!");
        boolean boolean34 = strTokenizer31.isIgnoreEmptyTokens();
        int int35 = strTokenizer31.nextIndex();
        int int36 = strTokenizer31.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer31.setIgnoreEmptyTokens(false);
        int int39 = strTokenizer31.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer31.reset("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.deleteFirst(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int73 = strBuilder70.lastIndexOf(strMatcher71, (int) (short) -1);
        int int74 = strBuilder58.indexOf(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer41.setTrimmerMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer41.setIgnoredMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getIgnoredMatcher();
        int int79 = strBuilder22.indexOf(strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer1.setDelimiterMatcher(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(strTokenizer80);
    }

    @Test
    public void test11465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11465");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(93);
    }

    @Test
    public void test11466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11466");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        java.lang.String str26 = strBuilder5.leftString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder5.append("aa", (int) (short) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.replaceFirst('\000', 'e');
        int int38 = strBuilder35.indexOf("eptionfalse1001.0\n35.0\n1false0\n\n", 200);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = strBuilder39.substring((int) ':', 64);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test11467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11467");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasNext();
        java.util.List<java.lang.String> strList12 = strTokenizer8.getTokenList();
        boolean boolean13 = strList12.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder((int) ' ');
        java.lang.String[] strArray19 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        boolean boolean33 = strTokenizer30.isIgnoreEmptyTokens();
        java.lang.String str34 = strTokenizer30.next();
        int int35 = strList20.indexOf((java.lang.Object) strTokenizer30);
        java.util.ListIterator<java.lang.String> strItor37 = strList20.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor38 = strList20.iterator();
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setDelimiterString("hi!");
        boolean boolean50 = strTokenizer47.isIgnoreEmptyTokens();
        java.lang.String str51 = strTokenizer47.next();
        boolean boolean52 = strList20.equals((java.lang.Object) strTokenizer47);
        java.lang.Object[] objArray53 = strList20.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder15.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList20, "1false0\nfalse");
        java.lang.Object[] objArray56 = strList20.toArray();
        boolean boolean57 = strList12.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.stream.Stream<java.lang.String> strStream58 = strList12.stream();
        boolean boolean59 = strList12.isEmpty();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "#4#a4#" + "'", str51, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[, , ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test11468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11468");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder36.insert(4, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.setNewLineText("aaaaaaaaaaaaaaaa35.0\n \n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test11469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11469");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" false");
    }

    @Test
    public void test11470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11470");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int23 = strBuilder18.indexOf(strMatcher21, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.replace(strMatcher21, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        java.lang.String str45 = strBuilder29.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        int int54 = strBuilder48.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.append((java.lang.Object) strBuilder60);
        boolean boolean62 = strBuilder10.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int77 = strBuilder74.lastIndexOf(strMatcher75, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder61.replace(strMatcher75, "a", 2, 15, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln((double) (byte) 10);
        java.util.stream.IntStream intStream85 = strBuilder84.chars();
        java.lang.CharSequence charSequence86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.append(charSequence86, 34, 37);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = null;
        int int91 = strBuilder84.lastIndexOf(strMatcher90);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder84.replaceFirst("\000\000\000\000\000\000\000\000\000", "java.");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder84.replaceAll("java.io.IOException: StrTokenizer[", "java.io.IOExceptionfalse1001.0\n35.0\nhi!100hi!ahi!");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(intStream85);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test11471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11471");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        int int11 = strTokenizer8.previousIndex();
        char[] charArray18 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        int int29 = strBuilder19.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher34);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher34, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer8.setIgnoredMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer8.setDelimiterChar('0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("1.0java.io.IOExceptionfalse1001.0\n35.0\n10.0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setDelimiterString("#.IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        java.lang.String[] strArray47 = strTokenizer42.getTokenArray();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strArray47);
    }

    @Test
    public void test11472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11472");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        java.lang.String str12 = strBuilder7.rightString((int) 'a');
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.replaceAll(strMatcher25, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder7.appendSeparator('#', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        java.lang.String[] strArray46 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder33.appendAll((java.lang.Object[]) strArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder7.appendWithSeparators((java.lang.Object[]) strArray46, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.trim();
        java.io.Reader reader51 = strBuilder49.asReader();
        reader51.reset();
        reader51.close();
        int int54 = reader51.read();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10\n\n" + "'", str12, "10\n\n");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 49 + "'", int54 == 49);
    }

    @Test
    public void test11473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11473");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(stringBuffer5, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.ensureCapacity(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendln(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder34.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.insert(16, (int) (byte) 10);
        boolean boolean59 = strBuilder34.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder34.appendln(strBuilder60, (int) (short) 0, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test11474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11474");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str28 = strBuilder27.getNullText();
        char[] charArray30 = new char[] { 'a' };
        char[] charArray31 = strBuilder27.getChars(charArray30);
        char[] charArray36 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray37 = strBuilder27.getChars(charArray36);
        java.io.Reader reader38 = strBuilder27.asReader();
        reader38.mark((int) (byte) 0);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        int int63 = strBuilder53.indexOf(strMatcher61);
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher61, strMatcher76);
        int int78 = reader38.read(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer13.reset(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        boolean boolean81 = strTokenizer80.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer80.setIgnoredChar('a');
        int int84 = strTokenizer83.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test11475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11475");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        java.lang.Throwable throwable15 = null;
        java.io.IOException iOException16 = new java.io.IOException("", throwable15);
        java.io.IOException iOException17 = new java.io.IOException("#4#a4#", throwable15);
        java.io.IOException iOException18 = new java.io.IOException(throwable15);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1.0f, iOException18, false, 100, strBuilder21 };
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendWithSeparators(objArray22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer32 = strBuilder26.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder7.append(stringBuffer32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((long) 13);
        java.lang.String str37 = strBuilder35.leftString(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln("java.io.IOException: java.io.IOException: hi!", (int) (byte) 1, 21);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendSeparator("java.io.IOException: StrTokenizer[#4#a4#]", "#4#a4#true\n28\n ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(stringBuffer32);
        org.junit.Assert.assertEquals(stringBuffer32.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1.0" + "'", str37, "1.0");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test11476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11476");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendln(10L);
        int int68 = strBuilder62.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder59.appendln(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder59.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder59.insert(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder32.append(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder32.append((float) 1L);
        boolean boolean81 = strBuilder32.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder32.insert(15, "1001.0.0");
        java.lang.Object obj85 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder32.append(obj85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.replaceFirst("Exceptionfals", "1.0java.io.IOExceptionfalse1001.0\n35.0\ntrueaaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.insert(50, "35.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test11477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11477");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll(' ');
        int int8 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.append((int) 'I');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        java.lang.String str14 = strBuilder13.getNullText();
        char[] charArray16 = new char[] { 'a' };
        char[] charArray17 = strBuilder13.getChars(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.ensureCapacity((int) '#');
        char[] charArray24 = strBuilder23.toCharArray();
        java.io.Writer writer25 = strBuilder23.asWriter();
        boolean boolean26 = strBuilder5.equals((java.lang.Object) writer25);
        writer25.flush();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6 + "'", int8 == 6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "35.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "35.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[3, 5, ., 0, \n]");
        org.junit.Assert.assertNotNull(writer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test11478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11478");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteFirst(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        char[] charArray31 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder23.replace(strMatcher40, "", 2, (int) (short) 100, 10);
        char[] charArray51 = strBuilder23.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        java.lang.String str56 = strBuilder55.getNullText();
        char[] charArray58 = new char[] { 'a' };
        char[] charArray59 = strBuilder55.getChars(charArray58);
        int int63 = strMatcher52.isMatch(charArray59, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder5.append(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder5.append(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder5.appendln((double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.clear();
        java.io.Writer writer72 = strBuilder71.asWriter();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
    }

    @Test
    public void test11479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11479");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(strBuilder9, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.insert(2, (java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.appendln((int) (short) 100);
        java.lang.String str23 = strBuilder14.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.replaceFirst('1', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        java.lang.String str31 = strBuilder30.getNullText();
        char[] charArray33 = new char[] { 'a' };
        char[] charArray34 = strBuilder30.getChars(charArray33);
        int int38 = strMatcher27.isMatch(charArray34, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder14.appendln(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendSeparator(" 0\n1.0java.io.IOExceptionfalse10005", 52);
        java.lang.String str44 = strBuilder43.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence47 = strBuilder43.subSequence((int) (short) 1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test11480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11480");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor45 = strList27.iterator();
        boolean boolean46 = strList4.remove((java.lang.Object) strItor45);
        java.util.Spliterator<java.lang.String> strSpliterator47 = strList4.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.clear();
        java.lang.String str53 = strBuilder51.rightString((int) (short) -1);
        java.lang.String str55 = strBuilder51.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.replaceFirst("#4#", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteAll(strMatcher62);
        boolean boolean64 = strList4.remove((java.lang.Object) strBuilder61);
        strList4.clear();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSpliterator47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test11481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11481");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.replace(0, 46, "se1001.0\n35.0\ntrue");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("1truefalse0\nzinekoTrtSeslaf true");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.replaceAll(strMatcher21, "1a10\n104aa");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.deleteCharAt(45);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 45");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test11482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11482");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        int int21 = strBuilder16.lastIndexOf("java.io.IOException: ", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        java.lang.String str25 = strBuilder24.getNullText();
        char[] charArray27 = new char[] { 'a' };
        char[] charArray28 = strBuilder24.getChars(charArray27);
        char[] charArray33 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray34 = strBuilder24.getChars(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray34);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer35.reset(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '#', '4');
        char[] charArray56 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        int int67 = strBuilder57.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer49.reset(charArray56);
        char[] charArray70 = strBuilder16.getChars(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterString("1false0\n1.0");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = strTokenizer74.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer74);
    }

    @Test
    public void test11483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11483");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '#', '0');
        boolean boolean18 = strTokenizer17.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11484");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int28 = strBuilder25.lastIndexOf(strMatcher26, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder0.replaceFirst(strMatcher26, "#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder0.deleteFirst(" 0\n1.0java.io.IOExceptionfalse10005");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.insert(12, (float) 34);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteCharAt((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test11485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11485");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str21 = strBuilder20.toString();
        int int23 = strBuilder20.lastIndexOf("100.01210\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str21, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test11486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11486");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.insert(0, (double) (byte) 100);
        java.io.Reader reader29 = strBuilder28.asReader();
        boolean boolean30 = strList12.remove((java.lang.Object) reader29);
        reader29.close();
        boolean boolean32 = reader29.markSupported();
        int int33 = reader29.read();
        long long35 = reader29.skip((long) (-1));
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 49 + "'", int33 == 49);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test11487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11487");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        java.lang.String str8 = strBuilder5.leftString((int) '4');
        java.lang.String str9 = strBuilder5.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((long) '#');
        java.util.stream.IntStream intStream17 = strBuilder14.chars();
        boolean boolean19 = strBuilder14.contains('1');
        java.lang.String str21 = strBuilder14.substring((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.append((java.lang.Object) strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNewLine();
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        char[] charArray43 = strBuilder33.getChars(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.clear();
        java.lang.Throwable throwable51 = null;
        java.io.IOException iOException52 = new java.io.IOException("", throwable51);
        java.io.IOException iOException53 = new java.io.IOException("#4#a4#", throwable51);
        java.io.IOException iOException54 = new java.io.IOException(throwable51);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray58 = new java.lang.Object[] { 1.0f, iOException54, false, 100, strBuilder57 };
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder47.appendWithSeparators(objArray58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int76 = strBuilder74.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder22.append(charArray40);
        java.util.stream.IntStream intStream79 = strBuilder22.codePoints();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "false" + "'", str8, "false");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "false" + "'", str9, "false");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "35\n" + "'", str21, "35\n");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(intStream79);
    }

    @Test
    public void test11488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11488");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        boolean boolean7 = strBuilder2.endsWith("trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendFixedWidthPadLeft((int) ' ', 34, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.ensureCapacity(0);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setDelimiterString("hi!");
        java.lang.String str25 = strTokenizer24.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.reset("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        int int31 = strBuilder13.lastIndexOf(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4#a4#" + "'", str25, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test11489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11489");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        boolean boolean46 = reader13.markSupported();
        long long48 = reader13.skip(0L);
        int int49 = reader13.read();
        boolean boolean50 = reader13.markSupported();
        reader13.reset();
        long long53 = reader13.skip((long) 51);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
    }

    @Test
    public void test11490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11490");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '0', '\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset("100.012true");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test11491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11491");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        java.lang.StringBuffer stringBuffer21 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        java.lang.Throwable throwable30 = null;
        java.io.IOException iOException31 = new java.io.IOException("", throwable30);
        java.io.IOException iOException32 = new java.io.IOException("#4#a4#", throwable30);
        java.io.IOException iOException33 = new java.io.IOException(throwable30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 1.0f, iOException33, false, 100, strBuilder36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.appendWithSeparators(objArray37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        java.lang.String str45 = strBuilder43.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder26.append((java.lang.CharSequence) str45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.insert(4, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder9.append(strBuilder53);
        java.lang.String str56 = strBuilder9.leftString(80);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(stringBuffer21);
        org.junit.Assert.assertEquals(stringBuffer21.toString(), "  \n");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1.0j5ava.io.IOExceptionfalse1000\nfalse32.0\n" + "'", str56, "1.0j5ava.io.IOExceptionfalse1000\nfalse32.0\n");
    }

    @Test
    public void test11492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11492");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.", 'a', 'a');
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        int int26 = strBuilder16.indexOf(strMatcher24);
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher24, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        int int57 = strBuilder43.length();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(" a10\n");
        int int60 = strBuilder43.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer3.setQuoteMatcher(strMatcher59);
        boolean boolean63 = strTokenizer3.hasPrevious();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 6 + "'", int57 == 6);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60 == 3);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test11493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11493");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.replace(strMatcher20, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll(' ');
        boolean boolean36 = strBuilder27.equals((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        java.lang.Throwable throwable44 = null;
        java.io.IOException iOException45 = new java.io.IOException("", throwable44);
        java.io.IOException iOException46 = new java.io.IOException("#4#a4#", throwable44);
        java.io.IOException iOException47 = new java.io.IOException(throwable44);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1.0f, iOException47, false, 100, strBuilder50 };
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder40.appendWithSeparators(objArray51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.deleteFirst("0java.io.IOExceptionfalse100");
        int int61 = strBuilder53.lastIndexOf(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder27.append(strBuilder53);
        int int65 = strBuilder53.indexOf("StrTokenizer[hi!]", 11);
        int int67 = strBuilder53.lastIndexOf(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test11494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11494");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        boolean boolean5 = strBuilder3.equals((java.lang.Object) 100.0d);
        java.lang.String str6 = strBuilder3.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.clear();
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("", throwable14);
        java.io.IOException iOException16 = new java.io.IOException("#4#a4#", throwable14);
        java.io.IOException iOException17 = new java.io.IOException(throwable14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1.0f, iOException17, false, 100, strBuilder20 };
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.appendWithSeparators(objArray21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer31 = strBuilder25.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder3.append(stringBuffer31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        boolean boolean37 = strBuilder36.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        java.lang.String str43 = strBuilder42.getNullText();
        char[] charArray45 = new char[] { 'a' };
        char[] charArray46 = strBuilder42.getChars(charArray45);
        int int48 = strMatcher39.isMatch(charArray46, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.append(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        int int52 = strTokenizer51.nextIndex();
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        java.lang.String str64 = strTokenizer63.nextToken();
        java.util.List<java.lang.String> strList65 = strTokenizer63.getTokenList();
        boolean boolean67 = strList65.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str70 = strTokenizer69.getContent();
        boolean boolean71 = strList65.equals((java.lang.Object) strTokenizer69);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean73 = strList65.equals((java.lang.Object) strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer51.setDelimiterMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder32.replaceAll(strMatcher72, "Except");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(stringBuffer31);
        org.junit.Assert.assertEquals(stringBuffer31.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#4#a4#" + "'", str64, "#4#a4#");
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test11495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11495");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.String[] strArray35 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean49 = strTokenizer46.isIgnoreEmptyTokens();
        java.lang.String str50 = strTokenizer46.next();
        int int51 = strList36.indexOf((java.lang.Object) strTokenizer46);
        java.util.ListIterator<java.lang.String> strItor53 = strList36.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor54 = strList36.iterator();
        java.lang.String[] strArray58 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("hi!");
        boolean boolean72 = strTokenizer69.isIgnoreEmptyTokens();
        java.lang.String str73 = strTokenizer69.next();
        int int74 = strList59.indexOf((java.lang.Object) strTokenizer69);
        boolean boolean75 = strList36.addAll((java.util.Collection<java.lang.String>) strList59);
        strList59.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder31.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln("StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
        int int83 = strBuilder78.indexOf("#a4#-1", (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.deleteCharAt(10);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#4#a4#" + "'", str50, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test11496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11496");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.ensureCapacity((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("4#-1133333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test11497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11497");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream13 = strList12.parallelStream();
        java.lang.String[] strArray17 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("hi!");
        boolean boolean31 = strTokenizer28.isIgnoreEmptyTokens();
        java.lang.String str32 = strTokenizer28.next();
        int int33 = strList18.indexOf((java.lang.Object) strTokenizer28);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        int int56 = strBuilder46.indexOf(strMatcher54);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher54, strMatcher69);
        boolean boolean71 = strList18.equals((java.lang.Object) strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int75 = strBuilder72.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(' ');
        java.util.stream.IntStream intStream78 = strBuilder77.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int81 = strBuilder77.lastIndexOf(strMatcher80);
        boolean boolean82 = strList18.remove((java.lang.Object) strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder85.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder85.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder85.appendln(strBuilder92);
        boolean boolean96 = strList18.remove((java.lang.Object) strBuilder92);
        boolean boolean97 = strList12.addAll((java.util.Collection<java.lang.String>) strList18);
        java.util.stream.Stream<java.lang.String> strStream98 = strList12.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream99 = strList12.parallelStream();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(strStream98);
        org.junit.Assert.assertNotNull(strStream99);
    }

    @Test
    public void test11498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11498");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        reader13.close();
        long long48 = reader13.skip((long) (short) 1);
        int int49 = reader13.read();
        char[] charArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int53 = reader13.read(charArray50, (int) (short) 1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test11499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11499");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setTrimmerMatcher(strMatcher5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setIgnoredMatcher(strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterString("StrTokenizer[eslf48]");
        java.lang.String str14 = strTokenizer13.nextToken();
        int int15 = strTokenizer13.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test11500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest22.test11500");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        java.lang.StringBuffer stringBuffer37 = strBuilder36.toStringBuffer();
        java.lang.String[] strArray41 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        boolean boolean55 = strTokenizer52.isIgnoreEmptyTokens();
        java.lang.String str56 = strTokenizer52.next();
        int int57 = strList42.indexOf((java.lang.Object) strTokenizer52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.clear();
        java.lang.Throwable throwable65 = null;
        java.io.IOException iOException66 = new java.io.IOException("", throwable65);
        java.io.IOException iOException67 = new java.io.IOException("#4#a4#", throwable65);
        java.io.IOException iOException68 = new java.io.IOException(throwable65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray72 = new java.lang.Object[] { 1.0f, iOException68, false, 100, strBuilder71 };
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder61.appendWithSeparators(objArray72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder76.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder76.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder76.setLength((int) ' ');
        int int88 = strList42.lastIndexOf((java.lang.Object) strBuilder76);
        java.util.stream.Stream<java.lang.String> strStream89 = strList42.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder36.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList42, "true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder36.setNullText("aa");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder36.replaceAll('I', '0');
        int int97 = strBuilder96.size();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(stringBuffer37);
        org.junit.Assert.assertEquals(stringBuffer37.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strStream89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 26 + "'", int97 == 26);
    }
}

