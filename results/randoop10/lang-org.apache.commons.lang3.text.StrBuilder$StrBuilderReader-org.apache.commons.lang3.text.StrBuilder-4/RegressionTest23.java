import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest23 {

    public static boolean debug = false;

    @Test
    public void test11501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11501");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(strMatcher10, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        boolean boolean17 = strBuilder5.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.append(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        char[] charArray31 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray32 = strBuilder22.getChars(charArray31);
        java.io.Reader reader33 = strBuilder22.asReader();
        reader33.mark(10);
        reader33.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.clear();
        char[] charArray46 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendln(charArray46);
        int int49 = reader33.read(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder19.appendln(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strBuilder19.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder19.ensureCapacity((int) '0');
        int int59 = strBuilder56.indexOf("1.0java.io.IOExceptionfalse1001.0\n35.0\n", 65);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test11502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11502");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        boolean boolean16 = reader13.markSupported();
        reader13.close();
        int int18 = reader13.read();
        int int19 = reader13.read();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setIgnoreEmptyTokens(false);
        java.lang.String str24 = strTokenizer21.nextToken();
        char[] charArray30 = new char[] { 'a', 'a', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer21.reset(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int34 = reader13.read(charArray30);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "aa## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "aa## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, a, #, #,  ]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test11503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11503");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setTrimmerMatcher(strMatcher5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getTrimmerMatcher();
        char[] charArray10 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = strMatcher9.isMatch(charArray10, (int) ' ', (int) 'I', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
    }

    @Test
    public void test11504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11504");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.setNewLineText("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll(" \n", "java.io.IOException: StrTokenizer[");
        boolean boolean11 = strBuilder10.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append("1false0");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder24.appendAll((java.util.Iterator<java.lang.String>) strTokenizer36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int40 = strBuilder37.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder20.replaceAll(strMatcher39, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder13.deleteFirst(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test11505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11505");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        int int38 = strBuilder28.indexOf(strMatcher36);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher36, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        int int54 = reader13.read(charArray22);
        reader13.close();
        int int56 = reader13.read();
        boolean boolean57 = reader13.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        java.lang.String str61 = strBuilder60.getNullText();
        char[] charArray63 = new char[] { 'a' };
        char[] charArray64 = strBuilder60.getChars(charArray63);
        char[] charArray69 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray70 = strBuilder60.getChars(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray70);
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer71.reset(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, "59.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, '3', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray78);
        int int92 = reader13.read(charArray78);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test11506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11506");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.replace(strMatcher12, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[#4#a4#]", strMatcher12, strMatcher23);
        boolean boolean25 = strTokenizer24.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strMatcher26);
    }

    @Test
    public void test11507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11507");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        java.lang.String str24 = strTokenizer23.nextToken();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        boolean boolean27 = strList25.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str30 = strTokenizer29.getContent();
        boolean boolean31 = strList25.equals((java.lang.Object) strTokenizer29);
        boolean boolean32 = strList12.addAll((java.util.Collection<java.lang.String>) strList25);
        int int33 = strList25.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher38);
        int int41 = strTokenizer40.size();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        java.util.ListIterator<java.lang.String> strItor43 = strList42.listIterator();
        boolean boolean44 = strList25.addAll(0, (java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("1", ' ');
        int int48 = strTokenizer47.previousIndex();
        java.lang.String str49 = strTokenizer47.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer47.getTrimmerMatcher();
        boolean boolean51 = strList25.equals((java.lang.Object) strMatcher50);
        java.util.stream.Stream<java.lang.String> strStream52 = strList25.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = strList25.remove(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strStream52);
    }

    @Test
    public void test11508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11508");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(" a10\n", strMatcher1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setEmptyTokenAsNull(true);
        boolean boolean5 = strTokenizer2.hasPrevious();
        java.lang.String str6 = strTokenizer2.next();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.set("1false0\n1.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " a10\n" + "'", str6, " a10\n");
    }

    @Test
    public void test11509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11509");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder9.setNullText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.ensureCapacity((int) (byte) 10);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int53 = strBuilder50.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.deleteFirst(strMatcher52);
        java.io.Writer writer55 = writer37.append((java.lang.CharSequence) strBuilder54);
        writer37.close();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(writer55);
    }

    @Test
    public void test11510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11510");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        char[] charArray27 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray28 = strBuilder18.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        strBuilder13.getChars((int) (byte) 0, 0, charArray27, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        java.io.IOException iOException42 = new java.io.IOException("#4#a4#", throwable40);
        java.io.IOException iOException43 = new java.io.IOException(throwable40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1.0f, iOException43, false, 100, strBuilder46 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendWithSeparators(objArray47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        java.lang.String str55 = strBuilder53.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.append((java.lang.CharSequence) str55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder13.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int77 = strBuilder74.lastIndexOf(strMatcher75, (int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("10\n100.0", strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder61.deleteFirst(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder61.deleteAll('3');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder61.appendln("#4", 47, (int) '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test11511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11511");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        java.lang.String str32 = strTokenizer31.nextToken();
        java.util.List<java.lang.String> strList33 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer31.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.append((java.lang.Object) strTokenizer35);
        boolean boolean38 = strBuilder37.isEmpty();
        java.io.Reader reader39 = strBuilder37.asReader();
        boolean boolean40 = reader39.markSupported();
        reader39.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str36, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(reader39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test11512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11512");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        int int51 = strBuilder41.indexOf(strMatcher49);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher49, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder2.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder2.appendln((double) 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test11513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11513");
        java.io.IOException iOException1 = new java.io.IOException("StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
    }

    @Test
    public void test11514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11514");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("aa4#4", 38);
        int int16 = strBuilder12.length();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 9 + "'", int16 == 9);
    }

    @Test
    public void test11515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11515");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((long) '#');
        java.util.stream.IntStream intStream34 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.appendFixedWidthPadLeft((java.lang.Object) strBuilder31, 32, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteAll('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNewLine();
        char[] charArray62 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        char[] charArray65 = strBuilder55.getChars(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray65);
        char[] charArray67 = strBuilder42.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray67);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "001slafnoitpcxEOI.oi.avaj0.1111111111111111111111111135\n10\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "001slafnoitpcxEOI.oi.avaj0.1111111111111111111111111135\n10\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[0, 0, 1, s, l, a, f, n, o, i, t, p, c, x, E, O, I, ., o, i, ., a, v, a, j, 0, ., 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 5, \n, 1, 0, \n, \n]");
        org.junit.Assert.assertNotNull(strTokenizer68);
    }

    @Test
    public void test11516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11516");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("100.01210");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test11517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11517");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor45 = strList27.iterator();
        boolean boolean46 = strList4.remove((java.lang.Object) strItor45);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        boolean boolean64 = strTokenizer61.isIgnoreEmptyTokens();
        java.lang.String str65 = strTokenizer61.next();
        int int66 = strList51.indexOf((java.lang.Object) strTokenizer61);
        java.util.ListIterator<java.lang.String> strItor68 = strList51.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList51.iterator();
        boolean boolean70 = strList4.addAll((java.util.Collection<java.lang.String>) strList51);
        java.util.ListIterator<java.lang.String> strItor72 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray76 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        char[] charArray85 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer87.setDelimiterString("hi!");
        boolean boolean90 = strTokenizer87.isIgnoreEmptyTokens();
        java.lang.String str91 = strTokenizer87.next();
        int int92 = strList77.indexOf((java.lang.Object) strTokenizer87);
        java.util.ListIterator<java.lang.String> strItor94 = strList77.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor95 = strList77.iterator();
        java.util.ListIterator<java.lang.String> strItor96 = strList77.listIterator();
        boolean boolean97 = strList4.equals((java.lang.Object) strList77);
        boolean boolean98 = strList4.isEmpty();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#4#a4#" + "'", str65, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "#4#a4#" + "'", str91, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(strItor94);
        org.junit.Assert.assertNotNull(strItor95);
        org.junit.Assert.assertNotNull(strItor96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test11518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11518");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        boolean boolean60 = strList27.retainAll((java.util.Collection<java.lang.String>) strList57);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("hi!");
        java.lang.String str72 = strTokenizer71.nextToken();
        java.util.List<java.lang.String> strList73 = strTokenizer71.getTokenList();
        boolean boolean75 = strList73.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str78 = strTokenizer77.getContent();
        boolean boolean79 = strList73.equals((java.lang.Object) strTokenizer77);
        java.lang.String str81 = strList73.remove((int) (byte) 0);
        boolean boolean82 = strList57.addAll((java.util.Collection<java.lang.String>) strList73);
        int int83 = strList73.size();
        int int84 = strList73.size();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "#4#a4#" + "'", str72, "#4#a4#");
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "#4#a4#" + "'", str81, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test11519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11519");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        char[] charArray32 = strBuilder29.toCharArray((int) ' ', (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.deleteCharAt(0);
        java.lang.Object obj35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.appendFixedWidthPadLeft(obj35, 4, '4');
        char char40 = strBuilder38.charAt(30);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + '.' + "'", char40 == '.');
    }

    @Test
    public void test11520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11520");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.insert(4, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.deleteFirst('I');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = strBuilder30.substring(50, 190);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test11521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11521");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        java.io.Reader reader17 = strBuilder16.asReader();
        int int18 = strBuilder16.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln('I');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        boolean boolean34 = strBuilder33.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        int int45 = strMatcher36.isMatch(charArray43, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.append(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder24.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.clear();
        java.lang.String str58 = strBuilder56.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.appendNull();
        java.lang.StringBuffer stringBuffer63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.append(stringBuffer63, (int) '4', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder56.appendln((java.lang.Object) stringBuffer63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder52.appendln(strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder52.deleteFirst("1.0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder52.appendFixedWidthPadRight(18, 6, '1');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder20.append(strBuilder74, (int) (short) 1, 70);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test11522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11522");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        int int20 = strBuilder10.indexOf(strMatcher18);
        int int22 = strBuilder9.indexOf(strMatcher18, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        java.lang.Throwable throwable30 = null;
        java.io.IOException iOException31 = new java.io.IOException("", throwable30);
        java.io.IOException iOException32 = new java.io.IOException("#4#a4#", throwable30);
        java.io.IOException iOException33 = new java.io.IOException(throwable30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 1.0f, iOException33, false, 100, strBuilder36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.appendWithSeparators(objArray37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder9.appendFixedWidthPadRight((java.lang.Object) strBuilder39, (int) (byte) 100, '1');
        int int44 = strBuilder42.indexOf("StrTokenizer[StrTokenizer[not tokenized yet]]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getIgnoredMatcher();
        int int69 = strBuilder50.indexOf(strMatcher67, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.deleteAll(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.append((float) (byte) 0);
        char[] charArray77 = null;
        char[] charArray78 = strBuilder76.getChars(charArray77);
        int int80 = strMatcher67.isMatch(charArray78, 59);
        int int82 = strBuilder42.indexOf(strMatcher67, 21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("0\nzinekoTrtSeslaf ", '0', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer86.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder42.deleteFirst(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "0.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "0.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[0, ., 0]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test11523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11523");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        int int19 = strTokenizer16.previousIndex();
        boolean boolean20 = strTokenizer16.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        char[] charArray29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(charArray29);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        boolean boolean37 = strBuilder36.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        java.lang.String str43 = strBuilder42.getNullText();
        char[] charArray45 = new char[] { 'a' };
        char[] charArray46 = strBuilder42.getChars(charArray45);
        int int48 = strMatcher39.isMatch(charArray46, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.append(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder28.insert((int) (byte) 1, charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer16.reset(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer58.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer58);
    }

    @Test
    public void test11524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11524");
        char[] charArray7 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        java.lang.String str12 = strTokenizer11.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        int int25 = strBuilder23.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln(stringBuffer26, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("");
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder45.replace(strMatcher50, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder37.replaceFirst(strMatcher50, "hi!");
        boolean boolean58 = strBuilder29.contains(strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher50, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterChar('I');
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer18.setDelimiterMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("10\n\n", strMatcher64);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
    }

    @Test
    public void test11525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11525");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream1 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.replaceAll("java.", "1");
        boolean boolean13 = strBuilder5.equals(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder5.appendSeparator('\000', 132);
        org.junit.Assert.assertNotNull(intStream1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test11526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11526");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln(strBuilder35, (int) (short) 1, (int) ' ');
        java.io.Writer writer39 = writer9.append((java.lang.CharSequence) strBuilder35);
        writer39.close();
        writer39.flush();
        writer39.write(41);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(writer39);
    }

    @Test
    public void test11527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11527");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        java.io.Writer writer92 = writer37.append(' ');
        writer92.write((int) '0');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(writer92);
    }

    @Test
    public void test11528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11528");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendSeparator('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        java.lang.Throwable throwable18 = null;
        java.io.IOException iOException19 = new java.io.IOException("", throwable18);
        java.io.IOException iOException20 = new java.io.IOException("#4#a4#", throwable18);
        java.io.IOException iOException21 = new java.io.IOException(throwable18);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 1.0f, iOException21, false, 100, strBuilder24 };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.appendWithSeparators(objArray25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(' ');
        java.util.stream.IntStream intStream41 = strBuilder40.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int44 = strBuilder40.lastIndexOf(strMatcher43);
        java.lang.StringBuffer stringBuffer45 = strBuilder40.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.append(stringBuffer45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder33.replaceAll(strMatcher47, "##a#");
        int int51 = strBuilder5.indexOf(strMatcher47, 6);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(intStream41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), " ");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test11529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11529");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(stringBuffer5, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.ensureCapacity(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendln(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder34.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.insert(16, (int) (byte) 10);
        boolean boolean59 = strBuilder34.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder34.appendln(strBuilder60, (int) (short) 0, 39);
        boolean boolean65 = strBuilder63.startsWith("#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.insert((int) '4', ".oi.ava0.0j0.1");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test11530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11530");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder9.setNullText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.ensureCapacity((int) (byte) 10);
        boolean boolean38 = strBuilder34.endsWith("java.io.IOException");
        java.io.Writer writer39 = strBuilder34.asWriter();
        writer39.flush();
        writer39.write("java.io.IOException");
        writer39.write("04");
        java.io.Writer writer46 = writer39.append(':');
        writer46.flush();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(writer46);
    }

    @Test
    public void test11531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11531");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteCharAt(0);
        int int17 = strBuilder9.indexOf('.', (int) (byte) 0);
        char[] charArray18 = strBuilder9.toCharArray();
        boolean boolean20 = strBuilder9.endsWith("");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "10\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "10\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[1, 0, \n]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11532");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterString("hi!");
        java.lang.String str73 = strTokenizer72.nextToken();
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        boolean boolean75 = strList60.removeAll((java.util.Collection<java.lang.String>) strList74);
        java.util.Spliterator<java.lang.String> strSpliterator76 = strList60.spliterator();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strSpliterator76);
    }

    @Test
    public void test11533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11533");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        int int16 = reader13.read();
        reader13.reset();
        boolean boolean18 = reader13.markSupported();
        int int19 = reader13.read();
        reader13.close();
        reader13.reset();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test11534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11534");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        int int11 = strBuilder5.lastIndexOf('a');
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        char[] charArray24 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("hi!");
        boolean boolean29 = strTokenizer26.isIgnoreEmptyTokens();
        java.lang.String str30 = strTokenizer26.next();
        int int31 = strList16.indexOf((java.lang.Object) strTokenizer26);
        java.util.ListIterator<java.lang.String> strItor33 = strList16.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor34 = strList16.iterator();
        java.lang.String[] strArray38 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        char[] charArray47 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("hi!");
        boolean boolean52 = strTokenizer49.isIgnoreEmptyTokens();
        java.lang.String str53 = strTokenizer49.next();
        int int54 = strList39.indexOf((java.lang.Object) strTokenizer49);
        boolean boolean55 = strList16.addAll((java.util.Collection<java.lang.String>) strList39);
        java.util.ListIterator<java.lang.String> strItor56 = strList39.listIterator();
        boolean boolean58 = strList39.add("");
        java.util.ListIterator<java.lang.String> strItor59 = strList39.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        boolean boolean62 = strList39.add(" falsezinekoTrtSeslaf \n10.0");
        java.util.stream.Stream<java.lang.String> strStream63 = strList39.stream();
        java.util.ListIterator<java.lang.String> strItor64 = strList39.listIterator();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertNotNull(strItor64);
    }

    @Test
    public void test11535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11535");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write("0java.io.IOExceptionfalse100", 0, 0);
        writer37.flush();
        java.io.Writer writer61 = writer37.append('#');
        java.io.Writer writer63 = writer61.append('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("");
        int int73 = strBuilder69.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder80.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.append(strBuilder83);
        java.io.Writer writer85 = writer63.append((java.lang.CharSequence) strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(writer85);
    }

    @Test
    public void test11536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11536");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append("#4#a4#");
        java.lang.String str21 = strBuilder14.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(false);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        boolean boolean43 = strTokenizer40.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder27.appendFixedWidthPadRight((java.lang.Object) strTokenizer40, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        boolean boolean57 = strBuilder27.equalsIgnoreCase(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.reverse();
        java.lang.StringBuffer stringBuffer59 = strBuilder58.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder14.append(stringBuffer59, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder13.appendln(stringBuffer59);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder13.appendSeparator('4', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.setNewLineText("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll(" false.IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.append(' ');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#4#a4#" + "'", str21, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(stringBuffer59);
        org.junit.Assert.assertEquals(stringBuffer59.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test11537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11537");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', ' ');
        java.lang.String str41 = strBuilder36.substring(37);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.appendSeparator("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse", ".0java.io.IOExceptionfalse1000");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(30, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.replaceAll('\n', 'f');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "0\n1false0\n\n#" + "'", str41, "0\n1false0\n\n#");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test11538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11538");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer92.reset(".0jav");
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer94.getTrimmerMatcher();
        java.lang.String str96 = strTokenizer94.previousToken();
        java.lang.String str97 = strTokenizer94.nextToken();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + ".0jav" + "'", str97, ".0jav");
    }

    @Test
    public void test11539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11539");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.insert((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.replaceFirst("\n", "59.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        int int26 = strBuilder16.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendSeparator("100.01210\n", 32);
        char[] charArray35 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.appendFixedWidthPadRight((java.lang.Object) strBuilder34, 74, '4');
        java.lang.String str39 = strBuilder15.getNullText();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " ###################################5.0\n100.01210\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " ###################################5.0\n100.01210\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, 5, ., 0, \n, 1, 0, 0, ., 0, 1, 2, 1, 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test11540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11540");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        java.lang.Throwable throwable62 = null;
        java.io.IOException iOException63 = new java.io.IOException("", throwable62);
        java.io.IOException iOException64 = new java.io.IOException("#4#a4#", throwable62);
        java.io.IOException iOException65 = new java.io.IOException(throwable62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1.0f, iOException65, false, 100, strBuilder68 };
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.appendWithSeparators(objArray69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.appendln(10L);
        int int87 = strBuilder81.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder81.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder78.appendln(strBuilder90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.ensureCapacity(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strBuilder93.asTokenizer();
        java.io.Writer writer95 = writer37.append((java.lang.CharSequence) strBuilder93);
        writer95.flush();
        writer95.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(writer95);
    }

    @Test
    public void test11541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11541");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.insert(0, charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "\naaava.io.IOExceptionfalse1000#4#a4#\nfalse");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
    }

    @Test
    public void test11542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11542");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.appendNull();
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.append(stringBuffer10, (int) '4', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.appendln((java.lang.Object) stringBuffer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.replaceAll("1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n", ".0jva.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        java.lang.Throwable throwable25 = null;
        java.io.IOException iOException26 = new java.io.IOException("", throwable25);
        java.io.IOException iOException27 = new java.io.IOException("#4#a4#", throwable25);
        java.io.IOException iOException28 = new java.io.IOException(throwable25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1.0f, iOException28, false, 100, strBuilder31 };
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendWithSeparators(objArray32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((double) (short) 1);
        int int37 = strBuilder36.size();
        boolean boolean38 = strBuilder17.equalsIgnoreCase(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 34 + "'", int37 == 34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11543");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int27 = strBuilder5.lastIndexOf('#', 10);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        java.lang.String str39 = strTokenizer38.nextToken();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        boolean boolean42 = strList40.add("hi!");
        java.util.stream.Stream<java.lang.String> strStream43 = strList40.parallelStream();
        java.lang.String str45 = strList40.get(0);
        boolean boolean47 = strList40.add("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList40);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder5.setNewLineText("##########################110\n\ni###############################################################################################");
        boolean boolean52 = strBuilder5.startsWith("-1 #4#a4#-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder5.appendln((double) 112);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.insert(11, 106);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#4#a4#" + "'", str39, "#4#a4#");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#4#a4#" + "'", str45, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test11544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11544");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("100.0false\n");
        boolean boolean10 = strBuilder7.contains(strMatcher9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = strBuilder7.substring(29, 70);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test11545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11545");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        char[] charArray10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendSeparator("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        java.io.Reader reader14 = strBuilder13.asReader();
        java.nio.CharBuffer charBuffer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int16 = reader14.read(charBuffer15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader14);
    }

    @Test
    public void test11546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11546");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setDelimiterChar(' ');
        boolean boolean25 = strTokenizer22.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.appendFixedWidthPadLeft((java.lang.Object) boolean25, (int) (short) 100, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        int int39 = strBuilder29.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendPadding((int) '#', '#');
        int int44 = strBuilder42.indexOf("1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        int int47 = strBuilder42.lastIndexOf("#a4#-1", 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.insert(19, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.delete((int) '\000', 3);
        int int55 = strBuilder50.lastIndexOf(" 10\n0.0aa4#4\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder28.append((java.lang.CharSequence) " 10\n0.0aa4#4\nhi!");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test11547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11547");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int14 = strBuilder11.indexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append(false);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        boolean boolean32 = strTokenizer29.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) strTokenizer29, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendln((int) (short) 10);
        boolean boolean46 = strBuilder16.equalsIgnoreCase(strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(false);
        char[] charArray58 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterString("hi!");
        java.lang.String str63 = strTokenizer62.nextToken();
        java.util.List<java.lang.String> strList64 = strTokenizer62.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        java.lang.String str68 = strBuilder67.getNullText();
        char[] charArray70 = new char[] { 'a' };
        char[] charArray71 = strBuilder67.getChars(charArray70);
        char[] charArray76 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray77 = strBuilder67.getChars(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray77);
        int int79 = strList64.indexOf((java.lang.Object) charArray77);
        char[] charArray80 = strBuilder51.getChars(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder10.replaceFirst(strMatcher83, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder10.appendln("tionfalse100\n100.01");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#4#a4#" + "'", str63, "#4#a4#");
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test11548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11548");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        java.lang.String str10 = strTokenizer9.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer9.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        java.io.Reader reader25 = strBuilder14.asReader();
        char[] charArray26 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer9.reset(charArray26);
        int int28 = strTokenizer9.previousIndex();
        int int29 = strTokenizer9.previousIndex();
        java.lang.String str30 = strTokenizer9.previousToken();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#4#a4#" + "'", str10, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test11549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11549");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        java.io.Writer writer39 = writer37.append('1');
        java.io.Writer writer41 = writer37.append('0');
        writer41.close();
        writer41.write(28);
        java.io.Writer writer46 = writer41.append(':');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(writer41);
        org.junit.Assert.assertNotNull(writer46);
    }

    @Test
    public void test11550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11550");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]", '4');
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test11551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11551");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        java.io.Reader reader17 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        char[] charArray26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln(charArray26);
        boolean boolean28 = strBuilder25.isEmpty();
        java.lang.String str30 = strBuilder25.rightString((int) 'a');
        char[] charArray37 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder25.replaceAll(strMatcher43, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder16.replaceFirst(strMatcher43, "\nzinekoTrtSeslaf \n");
        boolean boolean49 = strBuilder47.endsWith("a10");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "10\n\n" + "'", str30, "10\n\n");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test11552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11552");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(strBuilder9, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.insert(2, (java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.appendln((int) (short) 100);
        java.lang.String str23 = strBuilder14.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.replaceFirst('1', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        java.lang.String str31 = strBuilder30.getNullText();
        char[] charArray33 = new char[] { 'a' };
        char[] charArray34 = strBuilder30.getChars(charArray33);
        int int38 = strMatcher27.isMatch(charArray34, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder14.appendln(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("100.0false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        char[] charArray53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(charArray53);
        boolean boolean55 = strBuilder52.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        boolean boolean61 = strBuilder60.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        java.lang.String str67 = strBuilder66.getNullText();
        char[] charArray69 = new char[] { 'a' };
        char[] charArray70 = strBuilder66.getChars(charArray69);
        int int72 = strMatcher63.isMatch(charArray70, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.append(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder52.insert((int) (byte) 1, charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "StrTokenizer[#4#a4#]");
        int int80 = strMatcher43.isMatch(charArray70, 24, 53, (int) '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test11553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11553");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int8 = strBuilder5.indexOf(strMatcher7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("a", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.trim();
        java.lang.Object[] objArray27 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendAll(objArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder14.appendWithSeparators(objArray27, "java.io.IOException: StrTokenizer[#4#a4#]");
        boolean boolean31 = strBuilder2.equals(strBuilder14);
        boolean boolean33 = strBuilder14.contains('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.replaceFirst("1false0\nfalse", "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test11554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11554");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.clear();
        java.lang.Throwable throwable8 = null;
        java.io.IOException iOException9 = new java.io.IOException("", throwable8);
        java.io.IOException iOException10 = new java.io.IOException("#4#a4#", throwable8);
        java.io.IOException iOException11 = new java.io.IOException(throwable8);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray15 = new java.lang.Object[] { 1.0f, iOException11, false, 100, strBuilder14 };
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.appendWithSeparators(objArray15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int33 = strBuilder31.indexOf(strMatcher32);
        char[] charArray40 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        int int51 = strBuilder41.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]", strMatcher32, strMatcher53);
        int int55 = strTokenizer54.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test11555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11555");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray12);
        java.lang.String str15 = strTokenizer14.next();
        boolean boolean16 = strTokenizer14.isEmptyTokenAsNull();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer14.add("TrtSeslaf ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "a4 4" + "'", str15, "a4 4");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11556");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        writer9.write((int) (short) 1);
        writer9.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str18 = strBuilder16.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.append((java.lang.Object) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.append(100L);
        int int31 = strBuilder28.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        java.lang.Throwable throwable39 = null;
        java.io.IOException iOException40 = new java.io.IOException("", throwable39);
        java.io.IOException iOException41 = new java.io.IOException("#4#a4#", throwable39);
        java.io.IOException iOException42 = new java.io.IOException(throwable39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 1.0f, iOException42, false, 100, strBuilder45 };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendWithSeparators(objArray46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.deleteAll('a');
        boolean boolean60 = strBuilder59.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        java.lang.String str76 = strBuilder75.getNullText();
        char[] charArray78 = new char[] { 'a' };
        char[] charArray79 = strBuilder75.getChars(charArray78);
        char[] charArray84 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray85 = strBuilder75.getChars(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder66.appendln(charArray84, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder59.appendln(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder28.appendln(charArray84);
        char[] charArray93 = strBuilder28.toCharArray();
        writer9.write(charArray93);
        java.io.Writer writer96 = writer9.append(' ');
        java.lang.Class<?> wildcardClass97 = writer96.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "100a4 4\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "100a4 4\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[1, 0, 0, a, 4,  , 4, \n]");
        org.junit.Assert.assertNotNull(writer96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test11557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11557");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        java.util.stream.IntStream intStream39 = strBuilder30.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((long) '#');
        java.util.stream.IntStream intStream47 = strBuilder44.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.appendFixedWidthPadRight((java.lang.Object) strMatcher55, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder30.appendln((java.lang.Object) strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((java.lang.Object) "ue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.appendFixedWidthPadLeft((int) (short) 1, (int) '\000', '1');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test11558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11558");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (byte) 10, (double) 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append("#4#a4#");
        java.lang.String str32 = strBuilder25.leftString((int) (short) 100);
        int int34 = strBuilder25.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder25.appendSeparator(' ');
        boolean boolean40 = strBuilder24.equals(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.minimizeCapacity();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test11559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11559");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = strTokenizer10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test11560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11560");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        int int25 = strBuilder18.indexOf("\n");
        boolean boolean27 = strBuilder18.endsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder18.appendFixedWidthPadRight(10, (int) (short) 1, 'I');
        int int33 = strBuilder18.indexOf('\000');
        int int34 = strBuilder18.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 33 + "'", int25 == 33);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 40 + "'", int34 == 40);
    }

    @Test
    public void test11561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11561");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("10\n100\n a10\nfalse\n", ' ');
    }

    @Test
    public void test11562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11562");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.append(false);
        char[] charArray75 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setDelimiterString("hi!");
        boolean boolean80 = strTokenizer77.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder64.appendFixedWidthPadRight((java.lang.Object) strTokenizer77, 10, ' ');
        int int84 = strTokenizer77.previousIndex();
        boolean boolean85 = strTokenizer77.isIgnoreEmptyTokens();
        java.lang.String[] strArray86 = strTokenizer77.getTokenArray();
        java.lang.String str87 = strTokenizer77.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder57.appendAll((java.util.Iterator<java.lang.String>) strTokenizer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.append('I');
        boolean boolean91 = strBuilder88.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder88.append("100.0\n48.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test11563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11563");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.reset("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.deleteFirst(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int50 = strBuilder47.lastIndexOf(strMatcher48, (int) (short) -1);
        int int51 = strBuilder35.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer18.setTrimmerMatcher(strMatcher48);
        java.lang.String[] strArray53 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str56 = strTokenizer55.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        char[] charArray70 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray71 = strBuilder61.getChars(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder61.appendln("java.io.IOException: ");
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder73.replaceFirst(strMatcher84, "#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer58.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer18.setIgnoredMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer18.getDelimiterMatcher();
        java.util.List<java.lang.String> strList91 = strTokenizer18.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer18.setTrimmerMatcher(strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer94.setIgnoredChar('a');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer96);
    }

    @Test
    public void test11564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11564");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        java.lang.String str16 = strBuilder0.substring(0, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.append(false);
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        int int38 = strList23.indexOf((java.lang.Object) strTokenizer33);
        java.util.ListIterator<java.lang.String> strItor40 = strList23.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor41 = strList23.iterator();
        java.lang.String[] strArray45 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.isIgnoreEmptyTokens();
        java.lang.String str60 = strTokenizer56.next();
        int int61 = strList46.indexOf((java.lang.Object) strTokenizer56);
        boolean boolean62 = strList23.addAll((java.util.Collection<java.lang.String>) strList46);
        java.util.ListIterator<java.lang.String> strItor63 = strList46.listIterator();
        boolean boolean65 = strList46.add("");
        java.util.ListIterator<java.lang.String> strItor66 = strList46.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder69.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.appendPadding((int) (short) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.ensureCapacity(2);
        int int78 = strList46.lastIndexOf((java.lang.Object) strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.setNewLineText("ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        java.lang.StringBuffer stringBuffer81 = strBuilder77.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder0.appendln(stringBuffer81);
        java.io.Reader reader83 = strBuilder82.asReader();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + " ###################################" + "'", str16, " ###################################");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "#4#a4#" + "'", str60, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(stringBuffer81);
        org.junit.Assert.assertEquals(stringBuffer81.toString(), "10\n4444444444");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(reader83);
    }

    @Test
    public void test11565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11565");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("\naa");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream40 = strBuilder39.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.appendNewLine();
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.append((java.lang.Object) charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder38.append(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder5.append(charArray52, (int) 'e', 51);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test11566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11566");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int23 = strBuilder18.indexOf(strMatcher21, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.replace(strMatcher21, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        java.lang.String str45 = strBuilder29.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        int int54 = strBuilder48.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.append((java.lang.Object) strBuilder60);
        boolean boolean62 = strBuilder10.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder10.ensureCapacity(48);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert(1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendPadding((int) (short) 10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder70.ensureCapacity(2);
        java.lang.StringBuffer stringBuffer79 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder64.appendln(stringBuffer79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append(65);
        int int84 = strBuilder82.indexOf('4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(stringBuffer79);
        org.junit.Assert.assertEquals(stringBuffer79.toString(), "10\n4444444444");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 11 + "'", int84 == 11);
    }

    @Test
    public void test11567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11567");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException");
        java.lang.String str2 = strTokenizer1.nextToken();
        int int3 = strTokenizer1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.io.IOException" + "'", str2, "java.io.IOException");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test11568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11568");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.append("#4#a4#java.io.IOException: zinekoTrtSeslaf \n", (int) ' ', 5);
        int int19 = strBuilder18.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 12 + "'", int19 == 12);
    }

    @Test
    public void test11569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11569");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(strBuilder26, (int) 'a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str31 = strBuilder30.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str36 = strBuilder34.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder23.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteCharAt(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.clear();
        java.lang.Throwable throwable61 = null;
        java.io.IOException iOException62 = new java.io.IOException("", throwable61);
        java.io.IOException iOException63 = new java.io.IOException("#4#a4#", throwable61);
        java.io.IOException iOException64 = new java.io.IOException(throwable61);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray68 = new java.lang.Object[] { 1.0f, iOException64, false, 100, strBuilder67 };
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder57.appendWithSeparators(objArray68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.deleteAll('a');
        boolean boolean83 = strBuilder81.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder51.append(strBuilder81, (int) '\000', 48);
        java.io.Writer writer87 = strBuilder86.asWriter();
        java.io.Writer writer89 = writer87.append('.');
        writer87.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(writer87);
        org.junit.Assert.assertNotNull(writer89);
    }

    @Test
    public void test11570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11570");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln((int) (short) 10);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        int int58 = strBuilder39.indexOf(strMatcher56, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher33, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'e');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
    }

    @Test
    public void test11571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11571");
        java.io.IOException iOException1 = new java.io.IOException("");
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException("", throwable4);
        java.io.IOException iOException6 = new java.io.IOException("hi!", throwable4);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        iOException1.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException11 = new java.io.IOException("");
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("", throwable14);
        java.io.IOException iOException16 = new java.io.IOException("hi!", throwable14);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        iOException11.addSuppressed((java.lang.Throwable) iOException16);
        iOException1.addSuppressed((java.lang.Throwable) iOException11);
        java.lang.String[] strArray23 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("hi!");
        boolean boolean37 = strTokenizer34.isIgnoreEmptyTokens();
        java.lang.String str38 = strTokenizer34.next();
        int int39 = strList24.indexOf((java.lang.Object) strTokenizer34);
        java.util.ListIterator<java.lang.String> strItor41 = strList24.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor42 = strList24.iterator();
        java.lang.String[] strArray46 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("hi!");
        boolean boolean60 = strTokenizer57.isIgnoreEmptyTokens();
        java.lang.String str61 = strTokenizer57.next();
        int int62 = strList47.indexOf((java.lang.Object) strTokenizer57);
        boolean boolean63 = strList24.addAll((java.util.Collection<java.lang.String>) strList47);
        java.util.ListIterator<java.lang.String> strItor64 = strList47.listIterator();
        boolean boolean66 = strList47.add("");
        int int67 = strList47.size();
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setDelimiterString("hi!");
        boolean boolean79 = strTokenizer76.hasNext();
        java.util.List<java.lang.String> strList80 = strTokenizer76.getTokenList();
        boolean boolean81 = strList47.removeAll((java.util.Collection<java.lang.String>) strList80);
        java.lang.Throwable throwable83 = null;
        java.io.IOException iOException84 = new java.io.IOException("", throwable83);
        java.io.IOException iOException86 = new java.io.IOException("0.012true104444444444444444444444444444444444444444444444  \n");
        iOException84.addSuppressed((java.lang.Throwable) iOException86);
        boolean boolean88 = strList47.contains((java.lang.Object) iOException84);
        java.io.IOException iOException90 = new java.io.IOException("StrTokenizer[not tokenized yet]");
        java.io.IOException iOException91 = new java.io.IOException((java.lang.Throwable) iOException90);
        iOException84.addSuppressed((java.lang.Throwable) iOException90);
        java.io.IOException iOException93 = new java.io.IOException((java.lang.Throwable) iOException90);
        iOException1.addSuppressed((java.lang.Throwable) iOException93);
        java.lang.String str95 = iOException93.toString();
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "#4#a4#" + "'", str38, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertNotNull(strItor42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#4#a4#" + "'", str61, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "java.io.IOException: java.io.IOException: StrTokenizer[not tokenized yet]" + "'", str95, "java.io.IOException: java.io.IOException: StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11572");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.setQuoteChar(' ');
        java.lang.String str29 = strTokenizer28.previousToken();
        boolean boolean30 = strTokenizer28.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer28.setQuoteChar('3');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset("##########################110\n\ni###############################################################################################");
        java.lang.String str35 = strTokenizer34.next();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "##########################110\n\ni###############################################################################################" + "'", str35, "##########################110\n\ni###############################################################################################");
    }

    @Test
    public void test11573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11573");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.setNewLineText(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        boolean boolean16 = strBuilder10.endsWith("StrTokenizer[1.0java.io.IOExceptionfalse1001.0, 35.0]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11574");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        java.util.ListIterator<java.lang.String> strItor8 = strList7.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int32 = strBuilder27.indexOf(strMatcher30, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder19.replace(strMatcher30, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        boolean boolean38 = strList7.contains((java.lang.Object) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = strList7.remove(55);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 55, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strItor8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11575");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.clear();
        java.lang.Throwable throwable13 = null;
        java.io.IOException iOException14 = new java.io.IOException("", throwable13);
        java.io.IOException iOException15 = new java.io.IOException("#4#a4#", throwable13);
        java.io.IOException iOException16 = new java.io.IOException(throwable13);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1.0f, iOException16, false, 100, strBuilder19 };
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.appendWithSeparators(objArray20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(4, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.setLength((int) '0');
        boolean boolean36 = strBuilder5.equalsIgnoreCase(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder5.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.append(0L);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test11576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11576");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoreEmptyTokens(false);
        int int14 = strTokenizer11.previousIndex();
        java.lang.Object obj15 = strTokenizer11.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append((java.lang.Object) strTokenizer11);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.deleteFirst('a');
        int int25 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder(66);
        java.lang.Throwable throwable31 = null;
        java.io.IOException iOException32 = new java.io.IOException("", throwable31);
        java.lang.Throwable[] throwableArray33 = iOException32.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendAll((java.lang.Object[]) throwableArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder20.appendAll((java.lang.Object[]) throwableArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder3.appendWithSeparators((java.lang.Object[]) throwableArray33, "10\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher41);
        int int44 = strTokenizer43.size();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        java.util.ListIterator<java.lang.String> strItor46 = strList45.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int70 = strBuilder65.indexOf(strMatcher68, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder57.replace(strMatcher68, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        boolean boolean76 = strList45.contains((java.lang.Object) (byte) 1);
        java.lang.Object[] objArray77 = strList45.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder37.appendln((java.lang.Object) objArray77);
        java.lang.String str79 = strBuilder78.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test11577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11577");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        int int21 = strBuilder16.lastIndexOf("java.io.IOException: ", (int) (byte) 10);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("hi!");
        boolean boolean62 = strTokenizer59.isIgnoreEmptyTokens();
        java.lang.String str63 = strTokenizer59.next();
        int int64 = strList49.indexOf((java.lang.Object) strTokenizer59);
        java.util.ListIterator<java.lang.String> strItor66 = strList49.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor67 = strList49.iterator();
        boolean boolean68 = strList26.remove((java.lang.Object) strItor67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder16.appendFixedWidthPadLeft((java.lang.Object) strItor67, (int) '1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.insert(59, 'a');
        char[] charArray75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.append(charArray75, 61, 70);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.appendSeparator('f', 5);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#4#a4#" + "'", str63, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test11578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11578");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        char[] charArray18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln(charArray18);
        boolean boolean20 = strBuilder17.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        boolean boolean26 = strBuilder25.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        java.lang.String str32 = strBuilder31.getNullText();
        char[] charArray34 = new char[] { 'a' };
        char[] charArray35 = strBuilder31.getChars(charArray34);
        int int37 = strMatcher28.isMatch(charArray35, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.append(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder17.insert((int) (byte) 1, charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray35);
        int int46 = strMatcher9.isMatch(charArray35, 39, 48, (int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("hi!");
        java.lang.String str60 = strTokenizer59.nextToken();
        java.util.List<java.lang.String> strList61 = strTokenizer59.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer59.setTrimmerMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("aa", strMatcher48, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("0.012true104444444444444444444444444444444444444444444444", strMatcher9, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer4.setQuoteMatcher(strMatcher62);
        boolean boolean67 = strTokenizer66.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "#4#a4#" + "'", str60, "#4#a4#");
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test11579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11579");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream1 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        boolean boolean7 = strBuilder0.startsWith(" ");
        char[] charArray14 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        int int25 = strBuilder15.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher30, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setEmptyTokenAsNull(false);
        java.lang.Object obj38 = strTokenizer37.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray41 = strTokenizer40.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.appendAll((java.lang.Object[]) strArray41);
        java.io.Reader reader43 = strBuilder0.asReader();
        reader43.mark(15);
        org.junit.Assert.assertNotNull(intStream1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader43);
    }

    @Test
    public void test11580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11580");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setTrimmerMatcher(strMatcher5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setIgnoredMatcher(strMatcher10);
        int int12 = strTokenizer11.previousIndex();
        java.lang.Object obj13 = strTokenizer11.clone();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11581");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("java.io.IOException: 10\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        java.lang.String str9 = strBuilder8.getNullText();
        char[] charArray11 = new char[] { 'a' };
        char[] charArray12 = strBuilder8.getChars(charArray11);
        int int16 = strMatcher5.isMatch(charArray12, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ".0j");
        boolean boolean19 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder30.appendln(strBuilder38);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int44 = strBuilder30.lastIndexOf(strMatcher42, (int) 'a');
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher58, strMatcher62);
        int int64 = strBuilder30.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("aa##", strMatcher20, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer3.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer1.setQuoteMatcher(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer67);
    }

    @Test
    public void test11582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11582");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        java.util.List<java.lang.String> strList29 = strTokenizer28.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder37.replace(strMatcher42, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int49 = strBuilder31.lastIndexOf(strMatcher42, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer28.setIgnoredMatcher(strMatcher42);
        boolean boolean51 = strTokenizer28.hasNext();
        int int52 = strTokenizer28.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer28.reset("1.0java.io.IOExceptionfalse1001.0\n35.0\ntrueaaaaaaaaaa");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
    }

    @Test
    public void test11583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11583");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.ensureCapacity((int) (short) -1);
        boolean boolean36 = strBuilder32.endsWith("");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test11584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11584");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.appendNewLine();
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        char[] charArray59 = strBuilder49.getChars(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.append(charArray59);
        int int64 = strBuilder61.indexOf('4', 104);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test11585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11585");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        int int20 = strBuilder14.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append("#4#a4#");
        java.lang.String str31 = strBuilder24.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        boolean boolean53 = strTokenizer50.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.appendFixedWidthPadRight((java.lang.Object) strTokenizer50, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        boolean boolean67 = strBuilder37.equalsIgnoreCase(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder37.reverse();
        java.lang.StringBuffer stringBuffer69 = strBuilder68.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder24.append(stringBuffer69, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder23.append(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder9.appendln(stringBuffer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append((float) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteAll("");
        int int80 = strBuilder78.lastIndexOf(" a10\n");
        boolean boolean82 = strBuilder78.contains('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder78.appendln((double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.setNewLineText("StrTokenizer[#4#a4#]\na#4#a4#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.append((float) (byte) -1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#4#a4#" + "'", str31, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test11586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11586");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.append('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendSeparator('\000', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.append(stringBuffer27);
        java.io.Writer writer29 = strBuilder28.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        writer29.write(charArray41);
        writer29.write("0java.io.IOExceptionfalse100", 4, 4);
        writer29.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((long) '#');
        java.util.stream.IntStream intStream57 = strBuilder54.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendSeparator("10\n\n");
        java.io.Writer writer60 = writer29.append((java.lang.CharSequence) strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendSeparator("StrTokenizer[100.0\n]", (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder18.append(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder18.appendSeparator("se1001.0\n35.0\ntrue");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = strBuilder66.substring(72, 88);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(intStream57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(writer60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test11587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11587");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray15 = strTokenizer12.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.appendWithSeparators((java.lang.Object[]) strArray15, "ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.setCharAt(158, 'f');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 158");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test11588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11588");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.write("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.deleteFirst(strMatcher42);
        char[] charArray45 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.replaceAll('I', '4');
        java.io.Writer writer51 = writer9.append((java.lang.CharSequence) strBuilder50);
        java.io.Writer writer53 = writer9.append('4');
        writer9.write(2);
        writer9.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 10\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 10\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 1, 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(writer51);
        org.junit.Assert.assertNotNull(writer53);
    }

    @Test
    public void test11589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11589");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(stringBuffer5, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.ensureCapacity(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendln(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder34.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.insert(16, (int) (byte) 10);
        boolean boolean59 = strBuilder34.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder34.appendln(strBuilder60, (int) (short) 0, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("StrTokenizer[#4#a4#]");
        int int66 = strBuilder65.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 71 + "'", int66 == 71);
    }

    @Test
    public void test11590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11590");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int6 = strBuilder3.indexOf(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.append("#4#a4#");
        java.lang.String str10 = strBuilder3.leftString((int) (short) 100);
        int int12 = strBuilder3.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int31 = strBuilder28.lastIndexOf(strMatcher29, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder3.replaceFirst(strMatcher29, "#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        java.lang.String str38 = strBuilder37.getNullText();
        char[] charArray40 = new char[] { 'a' };
        char[] charArray41 = strBuilder37.getChars(charArray40);
        char[] charArray46 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray47 = strBuilder37.getChars(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int61 = strBuilder58.lastIndexOf(strMatcher59, (int) (short) 10);
        boolean boolean62 = strBuilder37.contains(strMatcher59);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setDelimiterString("hi!");
        java.lang.String str74 = strTokenizer73.nextToken();
        java.util.List<java.lang.String> strList75 = strTokenizer73.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer73.setTrimmerMatcher(strMatcher76);
        char[] charArray84 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray84);
        int int89 = strMatcher76.isMatch(charArray84, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher59, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("100.01210\n", strMatcher29, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer1.setQuoteMatcher(strMatcher29);
        java.lang.String str93 = strTokenizer1.next();
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#4#a4#" + "'", str10, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "#4#a4#" + "'", str74, "#4#a4#");
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
    }

    @Test
    public void test11591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11591");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        java.util.stream.IntStream intStream6 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int9 = strBuilder5.lastIndexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int24 = strBuilder21.lastIndexOf(strMatcher22, (int) (short) -1);
        boolean boolean25 = strBuilder5.contains(strMatcher22);
        java.io.Writer writer26 = strBuilder5.asWriter();
        java.lang.CharSequence charSequence27 = null;
        java.io.Writer writer28 = writer26.append(charSequence27);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertNotNull(writer28);
    }

    @Test
    public void test11592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11592");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int28 = strBuilder23.indexOf(strMatcher26, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.replaceFirst(strMatcher26, "100.0false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder0.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder0.appendln((long) 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("StrTokenizer[100.0\n]", "StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("a10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("1false0\n");
        int int44 = strBuilder42.lastIndexOf("35.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((long) 30);
        char[] charArray47 = strBuilder42.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder40.append(charArray47, 74, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "1false0\n30");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "1false0\n30");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[1, f, a, l, s, e, 0, \n, 3, 0]");
    }

    @Test
    public void test11593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11593");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        java.lang.String str18 = strBuilder3.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.deleteFirst("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        java.util.stream.IntStream intStream26 = strBuilder23.codePoints();
        java.lang.String str28 = strBuilder23.rightString(13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        char[] charArray37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(charArray37);
        boolean boolean39 = strBuilder36.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.clear();
        boolean boolean45 = strBuilder44.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        java.lang.String str51 = strBuilder50.getNullText();
        char[] charArray53 = new char[] { 'a' };
        char[] charArray54 = strBuilder50.getChars(charArray53);
        int int56 = strMatcher47.isMatch(charArray54, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder44.append(charArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder36.insert((int) (byte) 1, charArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.append('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendSeparator('e', 0);
        boolean boolean66 = strBuilder23.equals((java.lang.Object) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int73 = strBuilder70.indexOf(strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.append(' ');
        boolean boolean77 = strBuilder75.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder67.append((java.lang.CharSequence) strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder67.appendln(61);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder67.ensureCapacity((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder62.appendFixedWidthPadLeft((java.lang.Object) strBuilder67, (int) ' ', 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str18, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ptionfalse100" + "'", str28, "ptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test11594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11594");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getTrimmerMatcher();
        boolean boolean14 = strTokenizer11.isIgnoreEmptyTokens();
        boolean boolean15 = strTokenizer11.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        int int27 = strMatcher16.isMatch(charArray23, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer11.reset(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer29);
    }

    @Test
    public void test11595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11595");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream8 = strList7.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.stream();
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        boolean boolean23 = strList7.removeAll((java.util.Collection<java.lang.String>) strList22);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList7.replaceAll(strUnaryOperator24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test11596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11596");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterChar('0');
        java.util.List<java.lang.String> strList48 = strTokenizer47.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream49 = strList48.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            strList48.add(93, "-1.0#4#a4# #4#a4#0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 93, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strStream49);
    }

    @Test
    public void test11597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11597");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        int int13 = strTokenizer11.size();
        java.lang.String str14 = strTokenizer11.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer11.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.setNewLineText("0\nfalse32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((long) '#');
        java.util.stream.IntStream intStream40 = strBuilder37.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int56 = strBuilder53.lastIndexOf(strMatcher54, (int) (short) 10);
        int int58 = strBuilder37.indexOf(strMatcher54, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer32.setTrimmerMatcher(strMatcher54);
        boolean boolean60 = strBuilder25.equals((java.lang.Object) strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer16.setIgnoredMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setQuoteMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer61.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer61.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#" + "'", str14, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 5 + "'", int58 == 5);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher65);
    }

    @Test
    public void test11598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11598");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert((int) (byte) 0, false);
        java.util.Iterator<java.lang.String> strItor16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendWithSeparators(strItor16, " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02", 8, 44);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test11599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11599");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        java.lang.Object[] objArray12 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendAll(objArray12);
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        int int43 = strBuilder33.indexOf(strMatcher41);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher41, strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder20.deleteAll(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        char[] charArray67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln(charArray67);
        boolean boolean69 = strBuilder66.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.clear();
        boolean boolean75 = strBuilder74.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("hi!");
        java.lang.String str81 = strBuilder80.getNullText();
        char[] charArray83 = new char[] { 'a' };
        char[] charArray84 = strBuilder80.getChars(charArray83);
        int int86 = strMatcher77.isMatch(charArray84, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder74.append(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder66.insert((int) (byte) 1, charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, "StrTokenizer[#4#a4#]");
        char[] charArray91 = strBuilder58.getChars(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray91, '\000', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer15.reset(charArray91);
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strTokenizer95.getDelimiterMatcher();
        java.lang.String str97 = strTokenizer95.next();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[a]");
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strMatcher96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "a" + "'", str97, "a");
    }

    @Test
    public void test11600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11600");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getTrimmerMatcher();
        int int14 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer11.setDelimiterString("#4#a4#zi[#4#a4#]\n                                  0");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test11601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11601");
        char[] charArray7 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        boolean boolean12 = strTokenizer9.isIgnoreEmptyTokens();
        int int13 = strTokenizer9.nextIndex();
        int int14 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer9.setIgnoreEmptyTokens(false);
        int int17 = strTokenizer9.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer9.reset("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int21 = strTokenizer20.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setTrimmerMatcher(strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer19.setQuoteMatcher(strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(" falsezinekoTrtSeslaf \n10.0", strMatcher23);
        java.lang.String str27 = strTokenizer26.next();
        java.lang.String str28 = strTokenizer26.getContent();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + " falsezinekoTrtSeslaf \n10.0" + "'", str27, " falsezinekoTrtSeslaf \n10.0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + " falsezinekoTrtSeslaf \n10.0" + "'", str28, " falsezinekoTrtSeslaf \n10.0");
    }

    @Test
    public void test11602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11602");
        char[] charArray7 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        int int18 = strBuilder8.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("1", ' ');
        int int24 = strTokenizer23.previousIndex();
        java.lang.String str25 = strTokenizer23.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer20.setTrimmerMatcher(strMatcher26);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test11603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11603");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", 3, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        int int40 = strTokenizer33.previousIndex();
        boolean boolean41 = strTokenizer33.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer33.reset("#4#a4#");
        java.util.List<java.lang.String> strList44 = strTokenizer43.getTokenList();
        boolean boolean45 = strList44.isEmpty();
        boolean boolean46 = strList44.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder8.appendAll((java.lang.Iterable<java.lang.String>) strList44);
        int int50 = strBuilder8.lastIndexOf(" falseStrTokeniz", 0);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("hi!");
        java.lang.String str62 = strTokenizer61.nextToken();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream64 = strList63.stream();
        boolean boolean66 = strList63.add(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder8.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList63, "");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder8.setCharAt(80, '\n');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 80");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#4#a4#" + "'", str62, "#4#a4#");
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test11604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11604");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        strList27.add((int) (byte) 1, "0.012true104444444444444444444444444444444444444444444444  \n");
        boolean boolean65 = strList27.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream66 = strList27.parallelStream();
        java.lang.Object obj67 = null;
        boolean boolean68 = strList27.equals(obj67);
        java.util.Spliterator<java.lang.String> strSpliterator69 = strList27.spliterator();
        java.util.stream.Stream<java.lang.String> strStream70 = strList27.stream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strStream66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSpliterator69);
        org.junit.Assert.assertNotNull(strStream70);
    }

    @Test
    public void test11605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11605");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append(false);
        java.io.Writer writer23 = strBuilder22.asWriter();
        java.io.Writer writer25 = writer23.append('3');
        // The following exception was thrown during execution in test generation
        try {
            writer23.write("1001.0.0", 54, 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(writer25);
    }

    @Test
    public void test11606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11606");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setEmptyTokenAsNull(false);
        java.lang.String[] strArray27 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.appendWithSeparators((java.lang.Object[]) strArray27, "1.0java.");
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        java.lang.String str41 = strTokenizer40.nextToken();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        java.lang.String str46 = strBuilder45.getNullText();
        char[] charArray48 = new char[] { 'a' };
        char[] charArray49 = strBuilder45.getChars(charArray48);
        char[] charArray54 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray55 = strBuilder45.getChars(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        int int57 = strList42.indexOf((java.lang.Object) charArray55);
        strList42.clear();
        java.lang.Object[] objArray59 = strList42.toArray();
        boolean boolean60 = strList42.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream61 = strList42.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder29.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList42, "0\n 10\n");
        java.util.stream.Stream<java.lang.String> strStream64 = strList42.stream();
        int int65 = strList42.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test11607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11607");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNullText("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.insert(0, (double) 32);
        boolean boolean48 = strBuilder43.endsWith("10\n4\n\000I");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test11608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11608");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln("StrTokenizer[#4#a4#]", 0, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.insert(4, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendln(10L);
        int int51 = strBuilder45.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder45.appendSeparator("", 1);
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder54.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer64, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((float) 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getDelimiterMatcher();
        int int74 = strBuilder68.lastIndexOf(strMatcher72, 27);
        int int76 = strBuilder42.indexOf(strMatcher72, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder42.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test11609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11609");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("1", "java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test11610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11610");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        int int19 = strTokenizer16.previousIndex();
        java.lang.String str20 = strTokenizer16.toString();
        int int21 = strTokenizer16.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer16.setIgnoreEmptyTokens(false);
        boolean boolean24 = strTokenizer16.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test11611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11611");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoreEmptyTokens(false);
        boolean boolean43 = strTokenizer42.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder15.appendAll((java.lang.Object[]) strArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.append('4');
        char[] charArray60 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder15.append(charArray60);
        int int64 = strBuilder61.lastIndexOf(" #4\n0\n", 16);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test11612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11612");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.deleteFirst('a');
        java.io.Reader reader9 = strBuilder8.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        java.lang.String str14 = strBuilder13.getNullText();
        char[] charArray16 = new char[] { 'a' };
        char[] charArray17 = strBuilder13.getChars(charArray16);
        char[] charArray22 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray23 = strBuilder13.getChars(charArray22);
        java.io.Reader reader24 = strBuilder13.asReader();
        reader24.mark(10);
        reader24.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        char[] charArray37 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.appendln(charArray37);
        int int40 = reader24.read(charArray37);
        int int41 = reader24.read();
        boolean boolean42 = reader24.markSupported();
        int int43 = reader24.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        java.lang.String str47 = strBuilder46.getNullText();
        char[] charArray49 = new char[] { 'a' };
        char[] charArray50 = strBuilder46.getChars(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray49);
        int int54 = reader24.read(charArray49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder8.append(charArray49, 206, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 7");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test11613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11613");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder9.setNullText("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.ensureCapacity((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append("#4#a4#");
        java.lang.String str45 = strBuilder38.leftString((int) (short) 100);
        int int47 = strBuilder38.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder38.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.appendSeparator(' ');
        boolean boolean54 = strBuilder38.startsWith("100.0false\n");
        java.lang.StringBuffer stringBuffer55 = strBuilder38.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder37.appendln(stringBuffer55, 72, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#4#a4#" + "'", str45, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "-1.0#4#a4# ");
    }

    @Test
    public void test11614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11614");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append((double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.append((double) '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.setCharAt(33, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("0\nfalse32.0", "aaaaaaaaaaaaaaaaaaaaaaaa100");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.insert(22, (double) 'e');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test11615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11615");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        java.lang.String str17 = strTokenizer8.getContent();
        boolean boolean18 = strTokenizer8.isEmptyTokenAsNull();
        java.lang.String str19 = strTokenizer8.next();
        int int20 = strTokenizer8.previousIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test11616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11616");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.appendln((float) 1L);
        java.io.Writer writer22 = strBuilder0.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("se#4#a4#", "aa4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setEmptyTokenAsNull(false);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        int int56 = strBuilder46.indexOf(strMatcher54);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher54, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer31.setDelimiterMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.stringMatcher(".0j");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("ionfalse1001.0\n\n4\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(" \n", strMatcher74, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer31.setDelimiterMatcher(strMatcher76);
        int int79 = strBuilder23.lastIndexOf(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(writer22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test11617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11617");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.clear();
        java.lang.Throwable throwable52 = null;
        java.io.IOException iOException53 = new java.io.IOException("", throwable52);
        java.io.IOException iOException54 = new java.io.IOException("#4#a4#", throwable52);
        java.io.IOException iOException55 = new java.io.IOException(throwable52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray59 = new java.lang.Object[] { 1.0f, iOException55, false, 100, strBuilder58 };
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder48.appendWithSeparators(objArray59, "");
        java.lang.String str63 = strBuilder48.substring(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder48.deleteFirst("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder48.append('#');
        java.lang.StringBuffer stringBuffer68 = strBuilder48.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder16.appendln(stringBuffer68, (int) (short) 0, (int) (byte) 0);
        java.util.stream.IntStream intStream72 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder16.appendSeparator("1false0\n", "java.io.IOException:  10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.insert(0, (long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.replaceFirst('.', ':');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "0java.io.IOExceptionfalse100" + "'", str63, "0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(stringBuffer68);
        org.junit.Assert.assertEquals(stringBuffer68.toString(), "1.0jva.io.IOExceptionfalse100#");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(intStream72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test11618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11618");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("tionfalse100\n100.01");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test11619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11619");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        java.io.IOException iOException16 = new java.io.IOException("#4#a4#");
        java.lang.Throwable[] throwableArray17 = iOException16.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.appendAll((java.lang.Object[]) throwableArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.ensureCapacity((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.clear();
        java.lang.Throwable throwable32 = null;
        java.io.IOException iOException33 = new java.io.IOException("", throwable32);
        java.io.IOException iOException34 = new java.io.IOException("#4#a4#", throwable32);
        java.io.IOException iOException35 = new java.io.IOException(throwable32);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1.0f, iOException35, false, 100, strBuilder38 };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder28.appendWithSeparators(objArray39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.insert(4, (double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.setLength((int) '0');
        boolean boolean55 = strBuilder24.equalsIgnoreCase(strBuilder54);
        char[] charArray56 = strBuilder54.toCharArray();
        char[] charArray57 = strBuilder18.getChars(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strBuilder18.asTokenizer();
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "10053\n0.1001eslafnoitpecxEOI.oi.ava0.0j0.1\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "10053\n0.1001eslafnoitpecxEOI.oi.ava0.0j0.1\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[1, 0, 0, 5, 3, \n, 0, ., 1, 0, 0, 1, e, s, l, a, f, n, o, i, t, p, e, c, x, E, O, I, ., o, i, ., a, v, a, 0, ., 0, j, 0, ., 1, \000, \000, \000, \000, \000, \000]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "10053\n0.1001eslafnoitpecxEOI.oi.ava0.0j0.1\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "10053\n0.1001eslafnoitpecxEOI.oi.ava0.0j0.1\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[1, 0, 0, 5, 3, \n, 0, ., 1, 0, 0, 1, e, s, l, a, f, n, o, i, t, p, e, c, x, E, O, I, ., o, i, ., a, v, a, 0, ., 0, j, 0, ., 1, \000, \000, \000, \000, \000, \000]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strArray59);
    }

    @Test
    public void test11620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11620");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream1 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        boolean boolean8 = strBuilder5.equals(strBuilder7);
        int int9 = strBuilder7.length();
        org.junit.Assert.assertNotNull(intStream1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 39 + "'", int9 == 39);
    }

    @Test
    public void test11621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11621");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("hi!");
        boolean boolean31 = strTokenizer28.isIgnoreEmptyTokens();
        java.lang.String str32 = strTokenizer28.next();
        int int33 = strList18.indexOf((java.lang.Object) strTokenizer28);
        java.util.stream.Stream<java.lang.String> strStream34 = strList18.stream();
        strList18.add((int) (short) 0, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder11.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList18, "\n");
        boolean boolean40 = strList18.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test11622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11622");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.replaceAll("java.io.IOException: StrTokenizer[#4#a4#]", "#4#a4#");
        int int20 = strBuilder0.lastIndexOf('3', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.appendln((long) 17);
        int int23 = strBuilder22.length();
        char[] charArray24 = strBuilder22.toCharArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 14 + "'", int23 == 14);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "-1.0#4#a4# 17\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "-1.0#4#a4# 17\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[-, 1, ., 0, #, 4, #, a, 4, #,  , 1, 7, \n]");
    }

    @Test
    public void test11623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11623");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor45 = strList27.iterator();
        boolean boolean46 = strList4.remove((java.lang.Object) strItor45);
        java.lang.String str49 = strList4.set(1, "4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("100.01210\n", '#');
        int int53 = strList4.indexOf((java.lang.Object) "100.01210\n");
        java.util.stream.Stream<java.lang.String> strStream54 = strList4.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream55 = strList4.stream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strStream54);
        org.junit.Assert.assertNotNull(strStream55);
    }

    @Test
    public void test11624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11624");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        int int19 = strTokenizer16.previousIndex();
        boolean boolean20 = strTokenizer16.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        char[] charArray29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(charArray29);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        boolean boolean37 = strBuilder36.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        java.lang.String str43 = strBuilder42.getNullText();
        char[] charArray45 = new char[] { 'a' };
        char[] charArray46 = strBuilder42.getChars(charArray45);
        int int48 = strMatcher39.isMatch(charArray46, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.append(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder28.insert((int) (byte) 1, charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer16.reset(charArray46);
        int int54 = strTokenizer53.size();
        java.lang.String str55 = strTokenizer53.nextToken();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "a" + "'", str55, "a");
    }

    @Test
    public void test11625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11625");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.append(strBuilder24, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.clear();
        int int39 = strBuilder37.capacity();
        boolean boolean40 = strBuilder34.equals(strBuilder37);
        boolean boolean41 = strBuilder9.equals(strBuilder37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = strBuilder9.substring(132);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test11626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11626");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.append(' ');
        java.util.stream.IntStream intStream64 = strBuilder63.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int67 = strBuilder63.lastIndexOf(strMatcher66);
        boolean boolean68 = strList4.remove((java.lang.Object) strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder71.appendln(strBuilder78);
        boolean boolean82 = strList4.remove((java.lang.Object) strBuilder78);
        java.util.stream.Stream<java.lang.String> strStream83 = strList4.stream();
        int int84 = strList4.size();
        boolean boolean85 = strList4.isEmpty();
        boolean boolean86 = strList4.isEmpty();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strStream83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 3 + "'", int84 == 3);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test11627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11627");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        char[] charArray12 = strBuilder9.toCharArray((int) (short) 0, 48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray12);
        boolean boolean14 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "10\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "10\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[1, 0, \n, \n]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test11628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11628");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        char[] charArray20 = strBuilder10.getChars(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException("", throwable28);
        java.io.IOException iOException30 = new java.io.IOException("#4#a4#", throwable28);
        java.io.IOException iOException31 = new java.io.IOException(throwable28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1.0f, iOException31, false, 100, strBuilder34 };
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder24.appendWithSeparators(objArray35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int53 = strBuilder51.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "100.0false\n");
        boolean boolean57 = strTokenizer56.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test11629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11629");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceFirst("java.io.IOException: StrTokenizer[", "#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.clear();
        java.lang.Throwable throwable30 = null;
        java.io.IOException iOException31 = new java.io.IOException("", throwable30);
        java.io.IOException iOException32 = new java.io.IOException("#4#a4#", throwable30);
        java.io.IOException iOException33 = new java.io.IOException(throwable30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 1.0f, iOException33, false, 100, strBuilder36 };
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.appendWithSeparators(objArray37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendPadding(4, 'a');
        char[] charArray55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.append(charArray55, (int) (byte) 0, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendSeparator("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.deleteFirst("100.0false");
        java.lang.String str65 = strBuilder58.midString(61, (int) 'e');
        char[] charArray68 = strBuilder58.toCharArray(63, (int) 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder22.append(charArray68, 0, 27);
        java.lang.Object obj72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder22.appendFixedWidthPadLeft(obj72, 15, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln("aa4#4\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "n: StrTokenizer[not tokenized yet]" + "'", str65, "n: StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ]]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test11630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11630");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterChar('a');
        boolean boolean34 = strTokenizer33.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        int int38 = strTokenizer36.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test11631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11631");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("java.io.IOException: StrTokenizer[#4#a4#]");
        int int8 = strBuilder5.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.replaceFirst("java.io.IOException: ", "a10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendFixedWidthPadLeft(0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder14.appendln('#');
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("hi!");
        java.lang.String[] strArray37 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder14.appendWithSeparators((java.lang.Object[]) strArray37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder11.appendAll((java.lang.Object[]) strArray37);
        boolean boolean42 = strBuilder11.startsWith("StrTokenizer[]");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test11632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11632");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        int int24 = strBuilder18.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendSeparator('\000', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int47 = strBuilder44.indexOf(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder53.appendln(strBuilder61);
        java.lang.StringBuffer stringBuffer65 = strBuilder53.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder18.appendln(stringBuffer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.minimizeCapacity();
        boolean boolean69 = strBuilder67.endsWith("java.io.IOException: a4aa# ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(stringBuffer65);
        org.junit.Assert.assertEquals(stringBuffer65.toString(), "  \n");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test11633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11633");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(15);
        java.io.Writer writer2 = strBuilder1.asWriter();
        writer2.write(4);
        writer2.flush();
        writer2.close();
        org.junit.Assert.assertNotNull(writer2);
    }

    @Test
    public void test11634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11634");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(strBuilder9, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.insert(2, (java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.appendln((int) (short) 100);
        java.lang.String str23 = strBuilder14.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.replaceFirst('1', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        java.lang.String str31 = strBuilder30.getNullText();
        char[] charArray33 = new char[] { 'a' };
        char[] charArray34 = strBuilder30.getChars(charArray33);
        int int38 = strMatcher27.isMatch(charArray34, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder14.appendln(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("100.0false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher43);
        int int45 = strTokenizer44.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test11635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11635");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32", "false");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strMatcher4);
    }

    @Test
    public void test11636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11636");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        boolean boolean20 = strList18.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str23 = strTokenizer22.getContent();
        boolean boolean24 = strList18.equals((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean26 = strList18.equals((java.lang.Object) strMatcher25);
        boolean boolean27 = strList4.addAll((java.util.Collection<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "");
        int int47 = strBuilder28.size();
        boolean boolean48 = strList18.remove((java.lang.Object) strBuilder28);
        java.util.stream.Stream<java.lang.String> strStream49 = strList18.parallelStream();
        java.lang.Object[] objArray50 = strList18.toArray();
        strList18.clear();
        // The following exception was thrown during execution in test generation
        try {
            strList18.add(45, "0\n 10\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 45, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[#4#a4#, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[#4#a4#, hi!]");
    }

    @Test
    public void test11637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11637");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        int int19 = strTokenizer16.previousIndex();
        java.lang.String str20 = strTokenizer16.nextToken();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test11638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11638");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.insert(1, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        java.lang.String str47 = strBuilder31.midString((int) (byte) 1, (-1));
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder31.replaceFirst(strMatcher60, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder31.deleteAll('#');
        char[] charArray71 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int75 = strBuilder72.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int81 = strBuilder78.indexOf(strMatcher80);
        int int82 = strBuilder72.indexOf(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int88 = strBuilder85.indexOf(strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher87, strMatcher91);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder31.deleteFirst(strMatcher91);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer("100.0\na", strMatcher91, strMatcher94);
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strTokenizer95.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = strTokenizer95.getDelimiterMatcher();
        int int99 = strBuilder29.lastIndexOf(strMatcher97, (int) 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strMatcher96);
        org.junit.Assert.assertNotNull(strMatcher97);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test11639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11639");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray89);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(strTokenizer93);
    }

    @Test
    public void test11640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11640");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.close();
        writer37.write(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.append(false);
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("hi!");
        boolean boolean78 = strTokenizer75.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder62.appendFixedWidthPadRight((java.lang.Object) strTokenizer75, 10, ' ');
        java.io.Writer writer82 = writer37.append((java.lang.CharSequence) strBuilder62);
        java.lang.CharSequence charSequence83 = null;
        java.io.Writer writer84 = writer37.append(charSequence83);
        java.io.Writer writer86 = writer37.append('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(writer82);
        org.junit.Assert.assertNotNull(writer84);
        org.junit.Assert.assertNotNull(writer86);
    }

    @Test
    public void test11641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11641");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("", throwable3);
        java.io.IOException iOException5 = new java.io.IOException("hi!", throwable3);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.String[] strArray10 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        boolean boolean24 = strTokenizer21.isIgnoreEmptyTokens();
        java.lang.String str25 = strTokenizer21.next();
        int int26 = strList11.indexOf((java.lang.Object) strTokenizer21);
        java.util.ListIterator<java.lang.String> strItor28 = strList11.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor29 = strList11.iterator();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("hi!");
        boolean boolean47 = strTokenizer44.isIgnoreEmptyTokens();
        java.lang.String str48 = strTokenizer44.next();
        int int49 = strList34.indexOf((java.lang.Object) strTokenizer44);
        boolean boolean50 = strList11.addAll((java.util.Collection<java.lang.String>) strList34);
        java.util.ListIterator<java.lang.String> strItor51 = strList34.listIterator();
        boolean boolean53 = strList34.add("");
        int int54 = strList34.size();
        char[] charArray61 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterString("hi!");
        boolean boolean66 = strTokenizer63.hasNext();
        java.util.List<java.lang.String> strList67 = strTokenizer63.getTokenList();
        boolean boolean68 = strList34.removeAll((java.util.Collection<java.lang.String>) strList67);
        java.lang.Throwable throwable70 = null;
        java.io.IOException iOException71 = new java.io.IOException("", throwable70);
        java.io.IOException iOException73 = new java.io.IOException("0.012true104444444444444444444444444444444444444444444444  \n");
        iOException71.addSuppressed((java.lang.Throwable) iOException73);
        boolean boolean75 = strList34.contains((java.lang.Object) iOException71);
        java.io.IOException iOException77 = new java.io.IOException("StrTokenizer[not tokenized yet]");
        java.io.IOException iOException78 = new java.io.IOException((java.lang.Throwable) iOException77);
        iOException71.addSuppressed((java.lang.Throwable) iOException77);
        iOException5.addSuppressed((java.lang.Throwable) iOException71);
        java.lang.Throwable throwable82 = null;
        java.io.IOException iOException83 = new java.io.IOException("", throwable82);
        java.io.IOException iOException85 = new java.io.IOException("0.012true104444444444444444444444444444444444444444444444  \n");
        iOException83.addSuppressed((java.lang.Throwable) iOException85);
        iOException5.addSuppressed((java.lang.Throwable) iOException83);
        java.io.IOException iOException88 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException89 = new java.io.IOException("1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n 10", (java.lang.Throwable) iOException5);
        java.lang.String str90 = iOException5.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4#a4#" + "'", str25, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#4#a4#" + "'", str48, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "java.io.IOException: hi!" + "'", str90, "java.io.IOException: hi!");
    }

    @Test
    public void test11642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11642");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) 4);
        java.lang.String str15 = strBuilder14.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.replaceAll(" false.IOExceptionfalse1001.0\n35.0\n1false0\n\n32", "0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("35.0\n19", "java.io.IOException: StrTokenizer[");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test11643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11643");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        int int21 = strBuilder16.lastIndexOf("java.io.IOException: ", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        java.lang.String str25 = strBuilder24.getNullText();
        char[] charArray27 = new char[] { 'a' };
        char[] charArray28 = strBuilder24.getChars(charArray27);
        char[] charArray33 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray34 = strBuilder24.getChars(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray34);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer35.reset(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '#', '4');
        char[] charArray56 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        int int67 = strBuilder57.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer49.reset(charArray56);
        char[] charArray70 = strBuilder16.getChars(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, " false.IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test11644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11644");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream1 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.deleteFirst(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        char[] charArray26 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        int int37 = strBuilder27.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.replace(strMatcher35, "", 2, (int) (short) 100, 10);
        char[] charArray46 = strBuilder18.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        java.lang.String str51 = strBuilder50.getNullText();
        char[] charArray53 = new char[] { 'a' };
        char[] charArray54 = strBuilder50.getChars(charArray53);
        int int58 = strMatcher47.isMatch(charArray54, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher47);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        int int62 = strBuilder0.indexOf(strMatcher60, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder0.appendSeparator("100.01210\n", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteFirst("hi!");
        java.lang.String str71 = strBuilder70.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendFixedWidthPadLeft((java.lang.Object) 100, (int) (short) 0, ' ');
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.setDelimiterString("hi!");
        java.lang.String str87 = strTokenizer86.nextToken();
        java.util.List<java.lang.String> strList88 = strTokenizer86.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer86.setTrimmerMatcher(strMatcher89);
        boolean boolean91 = strTokenizer90.hasPrevious();
        java.lang.String[] strArray92 = strTokenizer90.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer90.getTrimmerMatcher();
        int int95 = strBuilder70.lastIndexOf(strMatcher93, (int) (byte) 1);
        int int96 = strBuilder65.indexOf(strMatcher93);
        org.junit.Assert.assertNotNull(intStream1);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#4#a4#" + "'", str87, "#4#a4#");
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 9 + "'", int96 == 9);
    }

    @Test
    public void test11645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11645");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.String str7 = strTokenizer6.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("java.io.IOException: java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int27 = strBuilder24.indexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int43 = strBuilder40.lastIndexOf(strMatcher41, (int) (short) -1);
        int int44 = strBuilder28.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer11.setQuoteMatcher(strMatcher41);
        boolean boolean46 = strTokenizer45.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test11646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11646");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln(strBuilder56, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        char[] charArray73 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray74 = strBuilder64.getChars(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, 'a');
        boolean boolean77 = strTokenizer76.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer76.getIgnoredMatcher();
        boolean boolean79 = strBuilder61.contains(strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer44.setIgnoredMatcher(strMatcher78);
        boolean boolean81 = strBuilder30.contains(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test11647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11647");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int2 = strTokenizer1.nextIndex();
        boolean boolean3 = strTokenizer1.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(" a4a4", strMatcher4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setQuoteChar('\n');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test11648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11648");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.replaceAll('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator("", "java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setLength(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.setLength(31);
        int int29 = strBuilder25.lastIndexOf("a.io.IOExceptionfalse100#4#a4#hi!");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test11649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11649");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoreEmptyTokens(false);
        boolean boolean43 = strTokenizer42.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer42.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder15.appendAll((java.lang.Object[]) strArray46);
        int int50 = strBuilder47.lastIndexOf('3', 132);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 73 + "'", int50 == 73);
    }

    @Test
    public void test11650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11650");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        int int45 = strBuilder36.indexOf('4', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.appendln((float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.deleteAll("n: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("-1 #4#a4#-1", "slaf \n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test11651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11651");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append("java.io.IOException: StrTokenizer[#4#a4#]", (int) (byte) 10, 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteAll(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.append((float) (byte) 0);
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int67 = strBuilder62.indexOf(strMatcher65, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder39.replaceFirst(strMatcher65, "100.0false\n");
        int int72 = strBuilder38.lastIndexOf(strMatcher65, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder32.replaceAll(strMatcher65, "1.1");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteAll('c');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test11652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11652");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteCharAt((int) '\000');
        char[] charArray12 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, '3');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getIgnoredMatcher();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "rue");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "rue");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[r, u, e]");
        org.junit.Assert.assertNotNull(strMatcher16);
    }

    @Test
    public void test11653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11653");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(strBuilder26, (int) 'a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.appendln((double) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.trim();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test11654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11654");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("100.0false\n");
        boolean boolean10 = strBuilder7.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int14 = strBuilder11.indexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.deleteFirst(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        char[] charArray35 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int39 = strBuilder36.indexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        int int46 = strBuilder36.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder27.replace(strMatcher44, "", 2, (int) (short) 100, 10);
        char[] charArray55 = strBuilder27.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strBuilder27.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterChar('0');
        java.util.List<java.lang.String> strList59 = strTokenizer58.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder7.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList59, "10\n ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = strList59.set(35, "10.0\n97");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test11655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11655");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        boolean boolean34 = strTokenizer33.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer33.set("1");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test11656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11656");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        java.lang.String str7 = strBuilder3.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        int int20 = strBuilder10.indexOf(strMatcher18);
        int int22 = strBuilder9.indexOf(strMatcher18, (int) (short) 10);
        java.lang.String str25 = strBuilder9.midString(3, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendln((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendSeparator('\n', (int) ':');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test11657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11657");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.deleteAll(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.append((float) (byte) 0);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int57 = strBuilder52.indexOf(strMatcher55, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.replaceFirst(strMatcher55, "100.0false\n");
        int int62 = strBuilder28.lastIndexOf(strMatcher55, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder18.replaceAll(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterChar(' ');
        boolean boolean69 = strTokenizer68.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer68.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder18.deleteAll(strMatcher70);
        java.lang.String str72 = strBuilder71.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.deleteAll(" falseStrTokeniz");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteAll('I');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strBuilder74.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strTokenizer77);
    }

    @Test
    public void test11658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11658");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("java.io.IOException: StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test11659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11659");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((int) (byte) 0);
        java.lang.String str22 = strBuilder21.getNullText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1false0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("java.io.IOException: StrTokenizer[");
        boolean boolean27 = strBuilder21.equals((java.lang.Object) strTokenizer26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.insert(22, (long) 23);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        java.lang.String str46 = strBuilder45.getNullText();
        char[] charArray48 = new char[] { 'a' };
        char[] charArray49 = strBuilder45.getChars(charArray48);
        char[] charArray54 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray55 = strBuilder45.getChars(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder36.appendln(charArray54, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '#', '\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder21.appendln(charArray54, 38, 60);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 60");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test11660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11660");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher35);
        int int38 = strBuilder16.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.deleteFirst(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.appendln('I');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder0.append("1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n1", 59, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test11661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11661");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.reverse();
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder7.append(stringBuffer52, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append(stringBuffer52);
        int int59 = strBuilder0.indexOf("StrTokenizer[not tokenized yet]", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder0.insert((int) (byte) 10, (float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder0.appendSeparator('a', 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder0.append((long) 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendPadding(0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.trim();
        boolean boolean74 = strBuilder69.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.setLength(59);
        java.io.Writer writer77 = strBuilder76.asWriter();
        writer77.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(writer77);
    }

    @Test
    public void test11662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11662");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str18 = strBuilder17.getNullText();
        char[] charArray20 = new char[] { 'a' };
        char[] charArray21 = strBuilder17.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.deleteFirst(strMatcher36);
        int int39 = strBuilder17.indexOf(strMatcher36);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        java.lang.String str51 = strTokenizer50.nextToken();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        boolean boolean54 = strList52.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str57 = strTokenizer56.getContent();
        boolean boolean58 = strList52.equals((java.lang.Object) strTokenizer56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean60 = strList52.equals((java.lang.Object) strMatcher59);
        java.util.stream.Stream<java.lang.String> strStream61 = strList52.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.insert(0, (double) (byte) 100);
        java.io.Reader reader69 = strBuilder68.asReader();
        boolean boolean70 = strList52.remove((java.lang.Object) reader69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder17.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder17.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder2.append((java.lang.CharSequence) strBuilder73, 6, 4);
        int int79 = strBuilder2.lastIndexOf('a', (int) (short) -1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "#4#a4#" + "'", str51, "#4#a4#");
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test11663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11663");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test11664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11664");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendFixedWidthPadLeft((java.lang.Object) 100, (int) (short) 0, ' ');
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendln(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        java.lang.String str24 = strBuilder23.getNullText();
        char[] charArray26 = new char[] { 'a' };
        char[] charArray27 = strBuilder23.getChars(charArray26);
        char[] charArray32 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray33 = strBuilder23.getChars(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendln("4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getQuoteMatcher();
        int int51 = strBuilder45.lastIndexOf(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj54 = strTokenizer53.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer53.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("aa4#4\n", strMatcher50, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("eptionfalse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher50, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder7.append(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder7.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test11665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11665");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        java.lang.String str5 = strBuilder4.getNullText();
        char[] charArray7 = new char[] { 'a' };
        char[] charArray8 = strBuilder4.getChars(charArray7);
        int int12 = strMatcher1.isMatch(charArray8, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, ".0j");
        boolean boolean15 = strTokenizer14.hasNext();
        boolean boolean16 = strTokenizer14.hasPrevious();
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        java.lang.String str28 = strTokenizer27.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setIgnoredChar('4');
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer30.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer14.setIgnoredMatcher(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((long) '#');
        java.util.stream.IntStream intStream43 = strBuilder40.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.appendFixedWidthPadRight((java.lang.Object) strMatcher51, 2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("z", strMatcher34, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.reset("0\nzinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#4#a4#" + "'", str28, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str31, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test11666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11666");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder2.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder2.appendFixedWidthPadLeft((int) (byte) 0, (-1), ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder2.appendln("#4#a4#", 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.clear();
        java.lang.Throwable throwable60 = null;
        java.io.IOException iOException61 = new java.io.IOException("", throwable60);
        java.io.IOException iOException62 = new java.io.IOException("#4#a4#", throwable60);
        java.io.IOException iOException63 = new java.io.IOException(throwable60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 1.0f, iOException63, false, 100, strBuilder66 };
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder56.appendWithSeparators(objArray67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder79.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendln(10L);
        int int85 = strBuilder79.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder79.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder76.appendln(strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder76.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder76.insert(0, ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder52.append((java.lang.CharSequence) strBuilder94, 104, 190);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test11667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11667");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        char[] charArray26 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendln(charArray26);
        int int29 = reader13.read(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        char[] charArray41 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray42 = strBuilder32.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        int int45 = reader13.read(charArray41);
        reader13.close();
        java.nio.CharBuffer charBuffer47 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int48 = reader13.read(charBuffer47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test11668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11668");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        int int45 = strBuilder36.indexOf('4', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.insert(5, (float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.insert(1, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.trim();
        java.lang.String str56 = strBuilder54.rightString(48);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ".IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE" + "'", str56, ".IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE");
    }

    @Test
    public void test11669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11669");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("1false0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test11670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11670");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        int int13 = strBuilder0.indexOf("java.io.IOException: StrTokenizer[not tokenized yet]", (int) (byte) -1);
        java.lang.String str14 = strBuilder0.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln((long) 1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test11671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11671");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(true);
        int int11 = strBuilder5.lastIndexOf("", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendSeparator("0java.io.IOExceptionfalse100", 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test11672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11672");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test11673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11673");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        boolean boolean38 = strBuilder23.endsWith("StrTokenizer[not tokenized yet]");
        java.lang.String str40 = strBuilder23.rightString(24);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.appendSeparator("0\n 10\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder23.deleteFirst(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        int int47 = strTokenizer46.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer46.setQuoteChar('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer46, "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n 10");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "lse1001.0\n35.0\n1false0\n\n" + "'", str40, "lse1001.0\n35.0\n1false0\n\n");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test11674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11674");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        java.lang.String str14 = strBuilder13.getNullText();
        char[] charArray16 = new char[] { 'a' };
        char[] charArray17 = strBuilder13.getChars(charArray16);
        char[] charArray22 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray23 = strBuilder13.getChars(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int37 = strBuilder34.lastIndexOf(strMatcher35, (int) (short) 10);
        boolean boolean38 = strBuilder13.contains(strMatcher35);
        int int39 = strBuilder9.lastIndexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.append((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.insert((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.insert(3, "#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder9.appendFixedWidthPadRight((java.lang.Object) strBuilder55, (int) '1', '3');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strBuilder58.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer59);
    }

    @Test
    public void test11675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11675");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        java.lang.String str32 = strBuilder5.midString((int) ' ', 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int56 = strBuilder51.indexOf(strMatcher54, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.replace(strMatcher54, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        boolean boolean62 = strBuilder5.equals(strBuilder61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setEmptyTokenAsNull(false);
        java.lang.String str70 = strTokenizer69.getContent();
        java.util.List<java.lang.String> strList71 = strTokenizer69.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.append((java.lang.Object) strTokenizer69);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder61.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder61.appendSeparator("1.0java.io.IOEx");
        int int80 = strBuilder61.lastIndexOf("eslaf", (int) (byte) 1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test11676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11676");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("0\n4444444444#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder4.clear();
        java.lang.Throwable throwable9 = null;
        java.io.IOException iOException10 = new java.io.IOException("", throwable9);
        java.io.IOException iOException11 = new java.io.IOException("#4#a4#", throwable9);
        java.io.IOException iOException12 = new java.io.IOException(throwable9);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1.0f, iOException12, false, 100, strBuilder15 };
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder5.appendWithSeparators(objArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.clear();
        java.lang.String str24 = strBuilder22.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder5.append((java.lang.CharSequence) str24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "a4");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.deleteFirst('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        java.lang.String str36 = strBuilder35.getNullText();
        char[] charArray38 = new char[] { 'a' };
        char[] charArray39 = strBuilder35.getChars(charArray38);
        char[] charArray44 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray45 = strBuilder35.getChars(charArray44);
        java.io.Reader reader46 = strBuilder35.asReader();
        reader46.mark((int) (byte) 0);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int70 = strBuilder67.indexOf(strMatcher69);
        int int71 = strBuilder61.indexOf(strMatcher69);
        char[] charArray78 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher69, strMatcher84);
        int int86 = reader46.read(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '0');
        char[] charArray89 = strBuilder27.getChars(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer1.reset(charArray89);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "1.0java.io.IOExceptionfalse1000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "1.0java.io.IOExceptionfalse1000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 0]");
        org.junit.Assert.assertNotNull(strTokenizer90);
    }

    @Test
    public void test11677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11677");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln('a');
        java.util.stream.IntStream intStream19 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln("false");
        int int23 = strBuilder21.indexOf('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test11678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11678");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.util.stream.IntStream intStream1 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendFixedWidthPadRight((int) (short) 0, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("hi!");
        java.lang.String str11 = strBuilder10.getNullText();
        char[] charArray13 = new char[] { 'a' };
        char[] charArray14 = strBuilder10.getChars(charArray13);
        char[] charArray19 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray20 = strBuilder10.getChars(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        int int25 = strBuilder7.indexOf(strMatcher23, 15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder7.insert(46, 48);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 46");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intStream1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test11679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11679");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        java.lang.Throwable throwable27 = null;
        java.io.IOException iOException28 = new java.io.IOException("", throwable27);
        java.io.IOException iOException29 = new java.io.IOException("#4#a4#", throwable27);
        java.io.IOException iOException30 = new java.io.IOException(throwable27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1.0f, iOException30, false, 100, strBuilder33 };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendWithSeparators(objArray34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.setLength((int) ' ');
        int int50 = strList4.lastIndexOf((java.lang.Object) strBuilder38);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("hi!");
        java.lang.String str62 = strTokenizer61.nextToken();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        boolean boolean65 = strList63.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str68 = strTokenizer67.getContent();
        boolean boolean69 = strList63.equals((java.lang.Object) strTokenizer67);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean71 = strList63.equals((java.lang.Object) strMatcher70);
        java.util.stream.Stream<java.lang.String> strStream72 = strList63.parallelStream();
        boolean boolean73 = strList4.removeAll((java.util.Collection<java.lang.String>) strList63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean77 = strTokenizer76.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList78 = strTokenizer76.getTokenList();
        int int79 = strList78.size();
        boolean boolean80 = strList4.containsAll((java.util.Collection<java.lang.String>) strList78);
        boolean boolean81 = strList78.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream82 = strList78.parallelStream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#4#a4#" + "'", str62, "#4#a4#");
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strStream82);
    }

    @Test
    public void test11680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11680");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        java.util.ListIterator<java.lang.String> strItor58 = strList4.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.clear();
        java.lang.Throwable throwable66 = null;
        java.io.IOException iOException67 = new java.io.IOException("", throwable66);
        java.io.IOException iOException68 = new java.io.IOException("#4#a4#", throwable66);
        java.io.IOException iOException69 = new java.io.IOException(throwable66);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 1.0f, iOException69, false, 100, strBuilder72 };
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder62.appendWithSeparators(objArray73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.reverse();
        int int86 = strList4.lastIndexOf((java.lang.Object) strBuilder85);
        int int87 = strList4.size();
        // The following exception was thrown during execution in test generation
        try {
            strList4.add(105, "#1");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 105, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 3 + "'", int87 == 3);
    }

    @Test
    public void test11681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11681");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[0.012true104444444444444444444444444444444444444444444444]");
    }

    @Test
    public void test11682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11682");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst('#');
        java.lang.String str22 = strBuilder21.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.append(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder2.appendFixedWidthPadLeft((int) '\n', 11, '3');
        int int32 = strBuilder2.indexOf('0', (int) (short) 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + " " + "'", str22, " ");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test11683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11683");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.insert(0, charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder18.setLength(44);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.replace(strMatcher53, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder41.append((java.lang.Object) strTokenizer59);
        boolean boolean61 = strTokenizer59.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer59.setQuoteChar('3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strTokenizer63);
    }

    @Test
    public void test11684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11684");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.insert(1, (double) 49);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.clear();
        java.lang.Throwable throwable41 = null;
        java.io.IOException iOException42 = new java.io.IOException("", throwable41);
        java.io.IOException iOException43 = new java.io.IOException("#4#a4#", throwable41);
        java.io.IOException iOException44 = new java.io.IOException(throwable41);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 1.0f, iOException44, false, 100, strBuilder47 };
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder37.appendWithSeparators(objArray48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.clear();
        java.lang.String str56 = strBuilder54.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder37.append((java.lang.CharSequence) str56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.append("java.io.IOException: StrTokenizer[#4#a4#]", (int) (byte) 10, 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.append(0);
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder67.appendln(charArray74);
        char[] charArray86 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder67.append(charArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder67.deleteFirst("1false0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder33.append(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test11685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11685");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("1.0jav", '\000', '4');
    }

    @Test
    public void test11686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11686");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        char[] charArray48 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.appendln(charArray48);
        int int53 = strBuilder50.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder38.append(strBuilder50);
        java.lang.String str60 = strBuilder38.substring(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder38.appendSeparator("", "");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1" + "'", str60, ".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test11687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11687");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendSeparator(" a10\n", (int) ' ');
        java.lang.String str26 = strBuilder25.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.append(false);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterString("hi!");
        boolean boolean48 = strTokenizer45.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder32.appendFixedWidthPadRight((java.lang.Object) strTokenizer45, 10, ' ');
        int int52 = strTokenizer45.previousIndex();
        boolean boolean53 = strTokenizer45.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer45.reset("#4#a4#");
        java.util.List<java.lang.String> strList56 = strTokenizer55.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder64.replace(strMatcher69, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int76 = strBuilder58.lastIndexOf(strMatcher69, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer55.setIgnoredMatcher(strMatcher69);
        int int79 = strBuilder25.indexOf(strMatcher69, 31);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder25.appendln("java.io.IOException: a10\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test11688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11688");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException(throwable2);
        java.io.IOException iOException5 = new java.io.IOException("StrTokenizer[#4#a4#]");
        iOException3.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException(" ", (java.lang.Throwable) iOException5);
        java.lang.Throwable throwable11 = null;
        java.io.IOException iOException12 = new java.io.IOException("", throwable11);
        java.io.IOException iOException13 = new java.io.IOException("hi!", throwable11);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        iOException8.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("100.01", (java.lang.Throwable) iOException8);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test11689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11689");
        org.apache.commons.lang3.text.StrMatcher strMatcher0 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        java.lang.String str5 = strBuilder3.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("hi!");
        java.lang.String str9 = strBuilder8.getNullText();
        char[] charArray11 = new char[] { 'a' };
        char[] charArray12 = strBuilder8.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.append((java.lang.Object) strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.replaceAll('#', ' ');
        java.util.stream.IntStream intStream17 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.appendSeparator('#');
        boolean boolean20 = strBuilder19.isEmpty();
        char[] charArray21 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(charArray21);
        int int28 = strMatcher0.isMatch(charArray21, (int) '#', (int) ' ', (int) '\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "Seslaf1.0java.io.IOExceptionfalse");
        java.lang.String str31 = strTokenizer30.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer30.setIgnoredChar('e');
        org.junit.Assert.assertNotNull(strMatcher0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strTokenizer33);
    }

    @Test
    public void test11690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11690");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        boolean boolean16 = strTokenizer15.hasPrevious();
        java.lang.String str17 = strTokenizer15.next();
        boolean boolean18 = strTokenizer15.hasNext();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11691");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendPadding((int) (byte) 1, 'a');
        int int12 = strBuilder10.indexOf("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(38);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('I', 35);
        boolean boolean20 = strBuilder15.startsWith("flsetrue\n190.0\n1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.append("-java.io.IOException: StrTokenizer[#4#a4#]1.0java.io.IOExceptionfalse1001.0\n35.0\n", 35, 65);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11692");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        boolean boolean20 = strList18.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str23 = strTokenizer22.getContent();
        boolean boolean24 = strList18.equals((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean26 = strList18.equals((java.lang.Object) strMatcher25);
        boolean boolean27 = strList4.addAll((java.util.Collection<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "");
        int int47 = strBuilder28.size();
        boolean boolean48 = strList18.remove((java.lang.Object) strBuilder28);
        boolean boolean50 = strList18.add("aa4#4");
        java.util.ListIterator<java.lang.String> strItor51 = strList18.listIterator();
        java.util.Spliterator<java.lang.String> strSpliterator52 = strList18.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strSpliterator52);
    }

    @Test
    public void test11693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11693");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln("StrTokenizer[not tokenized yet]");
        int int14 = strBuilder10.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        java.lang.String str18 = strBuilder17.getNullText();
        char[] charArray20 = new char[] { 'a' };
        char[] charArray21 = strBuilder17.getChars(charArray20);
        char[] charArray26 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray27 = strBuilder17.getChars(charArray26);
        java.io.Reader reader28 = strBuilder17.asReader();
        reader28.mark(10);
        reader28.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        char[] charArray41 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.appendln(charArray41);
        int int44 = reader28.read(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        java.lang.String str48 = strBuilder47.getNullText();
        char[] charArray50 = new char[] { 'a' };
        char[] charArray51 = strBuilder47.getChars(charArray50);
        char[] charArray56 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray57 = strBuilder47.getChars(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        int int60 = reader28.read(charArray56);
        reader28.reset();
        int int62 = reader28.read();
        boolean boolean63 = reader28.ready();
        boolean boolean64 = reader28.ready();
        reader28.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder10.append((java.lang.Object) reader28);
        reader28.close();
        long long69 = reader28.skip(4L);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
    }

    @Test
    public void test11694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11694");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        java.lang.String str13 = strBuilder12.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "35\n10\n\n" + "'", str13, "35\n10\n\n");
    }

    @Test
    public void test11695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11695");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.append((java.lang.CharSequence) strBuilder22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setEmptyTokenAsNull(false);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        int int56 = strBuilder46.indexOf(strMatcher54);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher54, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer31.setDelimiterMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.stringMatcher(".0j");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("ionfalse1001.0\n\n4\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(" \n", strMatcher74, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer31.setDelimiterMatcher(strMatcher76);
        int int79 = strBuilder0.lastIndexOf(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test11696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11696");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        java.lang.Throwable throwable46 = null;
        java.io.IOException iOException47 = new java.io.IOException("", throwable46);
        java.io.IOException iOException48 = new java.io.IOException("#4#a4#", throwable46);
        java.io.IOException iOException49 = new java.io.IOException(throwable46);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1.0f, iOException49, false, 100, strBuilder52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.appendWithSeparators(objArray53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((double) (short) 1);
        int int60 = strBuilder55.lastIndexOf("java.io.IOException: ", (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        int int72 = strMatcher61.isMatch(charArray68, 0, 0, (int) (byte) 10);
        char[] charArray73 = strBuilder55.getChars(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder37.insert(0, charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("100.0false\n");
        int int78 = strTokenizer75.nextIndex();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test11697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11697");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((long) '#');
        java.util.stream.IntStream intStream34 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.appendFixedWidthPadLeft((java.lang.Object) strBuilder31, 32, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder31.appendln((float) 97);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n1001.0.0", 206, ':');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test11698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11698");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strBuilder9.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer11);
    }

    @Test
    public void test11699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11699");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        boolean boolean2 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int6 = strBuilder3.indexOf(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln((int) (short) 10);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getIgnoredMatcher();
        int int27 = strBuilder8.indexOf(strMatcher25, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder8.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.trim();
        java.lang.Object[] objArray42 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendAll(objArray42);
        char[] charArray44 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder29.append(charArray44);
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        java.lang.String str63 = strBuilder62.getNullText();
        char[] charArray65 = new char[] { 'a' };
        char[] charArray66 = strBuilder62.getChars(charArray65);
        char[] charArray71 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray72 = strBuilder62.getChars(charArray71);
        int int76 = strMatcher59.isMatch(charArray71, (int) (short) 100, (int) (short) 1, (int) (byte) 10);
        int int78 = strBuilder29.indexOf(strMatcher59, 74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer1.setIgnoredMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer1.getIgnoredMatcher();
        java.lang.String str81 = strTokenizer1.toString();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "StrTokenizer[]" + "'", str81, "StrTokenizer[]");
    }

    @Test
    public void test11700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11700");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str49 = strBuilder48.getNullText();
        char[] charArray51 = new char[] { 'a' };
        char[] charArray52 = strBuilder48.getChars(charArray51);
        int int56 = strMatcher45.isMatch(charArray52, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer58.getDelimiterMatcher();
        java.lang.String str62 = strTokenizer58.next();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str62, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11701");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        java.lang.String str24 = strBuilder20.leftString(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.trim();
        java.lang.Object[] objArray37 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendAll(objArray37);
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder20.append(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        java.lang.String str50 = strBuilder48.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        java.lang.String str54 = strBuilder53.getNullText();
        char[] charArray56 = new char[] { 'a' };
        char[] charArray57 = strBuilder53.getChars(charArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.append((java.lang.Object) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder48.replaceAll('#', ' ');
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder48.deleteAll(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher72);
        boolean boolean76 = strTokenizer75.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str24, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test11702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11702");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        boolean boolean46 = strList27.add("");
        int int47 = strList27.size();
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("hi!");
        boolean boolean59 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList60 = strTokenizer56.getTokenList();
        boolean boolean61 = strList27.removeAll((java.util.Collection<java.lang.String>) strList60);
        char[] charArray68 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterString("hi!");
        java.lang.String str73 = strTokenizer72.nextToken();
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        boolean boolean75 = strList60.removeAll((java.util.Collection<java.lang.String>) strList74);
        boolean boolean76 = strList74.isEmpty();
        boolean boolean78 = strList74.add("100.0false\n");
        boolean boolean80 = strList74.add("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        java.util.ListIterator<java.lang.String> strItor81 = strList74.listIterator();
        int int82 = strList74.size();
        int int83 = strList74.size();
        boolean boolean85 = strList74.add("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = strList74.remove(23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 23, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strItor81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 3 + "'", int82 == 3);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test11703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11703");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replace(strMatcher10, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int27 = strBuilder22.indexOf(strMatcher25, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.replaceFirst(strMatcher25, "va.io.IOExceptionfalse1001.");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendln((long) 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder5.deleteCharAt(16);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        int int43 = strBuilder39.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append("#4#a4#");
        java.lang.String str58 = strBuilder51.leftString((int) (short) 100);
        int int60 = strBuilder51.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder51.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder51.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int79 = strBuilder76.lastIndexOf(strMatcher77, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder51.replaceFirst(strMatcher77, "#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder50.replaceFirst(strMatcher77, "#4#");
        boolean boolean84 = strBuilder5.equals((java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder5.replaceFirst('\n', '\n');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "#4#a4#" + "'", str58, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test11704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11704");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar(' ');
        int int4 = strTokenizer1.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset("java.io.IOException: true\n0java.io.IOExceptionfalse100true\n1");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.deleteFirst(strMatcher28);
        int int31 = strBuilder9.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer1.setIgnoredMatcher(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test11705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11705");
        java.lang.Throwable throwable0 = null;
        java.io.IOException iOException1 = new java.io.IOException(throwable0);
        java.io.IOException iOException3 = new java.io.IOException("StrTokenizer[#4#a4#]");
        iOException1.addSuppressed((java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException3.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Throwable throwable11 = null;
        java.io.IOException iOException12 = new java.io.IOException("", throwable11);
        java.lang.Throwable[] throwableArray13 = iOException12.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException12);
        iOException8.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException("a", (java.lang.Throwable) iOException8);
        iOException3.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.String str18 = iOException8.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "java.io.IOException" + "'", str18, "java.io.IOException");
    }

    @Test
    public void test11706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11706");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str28 = strTokenizer27.getContent();
        char[] charArray34 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer27.reset(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, '4', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoredChar('a');
        boolean boolean44 = strTokenizer41.isIgnoreEmptyTokens();
        java.lang.String str45 = strTokenizer41.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer41, "java.io.IOException: StrTokenizer[");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer41.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4" + "'", str45, "4");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
    }

    @Test
    public void test11707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11707");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.replaceAll("1false0\n", " ");
        java.lang.String str17 = strBuilder16.toString();
        java.lang.StringBuffer stringBuffer18 = strBuilder16.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strBuilder20.asTokenizer();
        boolean boolean22 = strTokenizer21.hasNext();
        java.lang.String str23 = strTokenizer21.nextToken();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.hasNext();
        java.util.List<java.lang.String> strList37 = strTokenizer33.getTokenList();
        java.util.List<java.lang.String> strList38 = strTokenizer33.getTokenList();
        java.lang.Object[] objArray39 = strList38.toArray();
        java.lang.String[] strArray42 = new java.lang.String[] { "0\nzinekoTrtSeslaf ", "a" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        boolean boolean45 = strList43.isEmpty();
        java.util.Iterator<java.lang.String> strItor46 = strList43.iterator();
        boolean boolean47 = strList38.containsAll((java.util.Collection<java.lang.String>) strList43);
        boolean boolean48 = strList24.containsAll((java.util.Collection<java.lang.String>) strList38);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(stringBuffer18);
        org.junit.Assert.assertEquals(stringBuffer18.toString(), "1");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1true" + "'", str23, "1true");
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[#4#a4#]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test11708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11708");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.setLength((int) (byte) 10);
        java.io.Reader reader14 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.ensureCapacity(39);
        boolean boolean26 = strBuilder24.endsWith(".0jav");
        char[] charArray31 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray31);
        char[] charArray33 = strBuilder24.getChars(charArray31);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("hi!");
        java.lang.String str45 = strTokenizer44.nextToken();
        java.util.List<java.lang.String> strList46 = strTokenizer44.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        char[] charArray58 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray59 = strBuilder49.getChars(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray59);
        int int61 = strList46.indexOf((java.lang.Object) charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int67 = strTokenizer66.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer66.setTrimmerMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher65, strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder13.replaceFirst(strMatcher69, " a10\n");
        boolean boolean74 = strBuilder73.isEmpty();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        java.lang.String str78 = strTokenizer77.nextToken();
        boolean boolean79 = strTokenizer77.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setTrimmerMatcher(strMatcher80);
        int int82 = strTokenizer77.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder73.appendFixedWidthPadLeft((java.lang.Object) strTokenizer77, 2, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#4#a4#" + "'", str45, "#4#a4#");
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test11709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11709");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('4');
        char[] charArray12 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray12);
        java.lang.Object obj14 = strTokenizer13.clone();
        boolean boolean15 = strTokenizer13.hasNext();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), " 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), " 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[ , 4]");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test11710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11710");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadLeft(61, 34, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test11711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11711");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        boolean boolean6 = strTokenizer3.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = strTokenizer3.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test11712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11712");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        char[] charArray19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(19L);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test11713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11713");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendFixedWidthPadLeft((int) (short) 100, 27, 'a');
        java.lang.String str10 = strBuilder2.rightString(27);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.appendln((double) 19);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int16 = strBuilder13.indexOf(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("a", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.appendWithSeparators(objArray35, "java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendAll(objArray35);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "aaaaaaaaaaaaaaaaaaaaaaaa100" + "'", str10, "aaaaaaaaaaaaaaaaaaaaaaaa100");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test11714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11714");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteFirst(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        char[] charArray31 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder23.replace(strMatcher40, "", 2, (int) (short) 100, 10);
        char[] charArray51 = strBuilder23.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        java.lang.String str56 = strBuilder55.getNullText();
        char[] charArray58 = new char[] { 'a' };
        char[] charArray59 = strBuilder55.getChars(charArray58);
        int int63 = strMatcher52.isMatch(charArray59, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder5.append(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder5.append(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder5.appendln((double) 32);
        int int73 = strBuilder70.lastIndexOf("#4#a4#100.0\n", 55);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test11715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11715");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.clear();
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("", throwable14);
        java.io.IOException iOException16 = new java.io.IOException("#4#a4#", throwable14);
        java.io.IOException iOException17 = new java.io.IOException(throwable14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1.0f, iOException17, false, 100, strBuilder20 };
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.appendWithSeparators(objArray21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln(10L);
        int int39 = strBuilder33.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendln(strBuilder42);
        boolean boolean45 = strBuilder30.endsWith("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder30.replaceAll(strMatcher49, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder3.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder3.replaceAll(' ', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.appendSeparator("1.0java.");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder3.appendln(true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test11716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11716");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder32.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.deleteFirst("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendln(10L);
        int int56 = strBuilder50.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder50.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.insert((int) (byte) 0, false);
        java.util.Iterator<java.lang.String> strItor64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder50.appendWithSeparators(strItor64, " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int70 = strBuilder67.indexOf(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.append(' ');
        char[] charArray79 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("hi!");
        java.lang.String str84 = strTokenizer83.nextToken();
        java.util.List<java.lang.String> strList85 = strTokenizer83.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder67.appendAll((java.lang.Iterable<java.lang.String>) strList85);
        java.lang.Object[] objArray87 = strList85.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder50.appendAll(objArray87);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder47.append((java.lang.CharSequence) strBuilder50, 0, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.appendSeparator(" a10\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder18.appendln(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "#4#a4#" + "'", str84, "#4#a4#");
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test11717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11717");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        java.io.Reader reader7 = strBuilder6.asReader();
        int int9 = strBuilder6.indexOf('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.append((double) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.append(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test11718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11718");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        int int24 = strBuilder18.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNewLineText(" falseStrTokeniz");
        java.util.stream.IntStream intStream44 = strBuilder43.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.deleteFirst("100.0\na");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.delete(206, 46);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test11719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11719");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.appendNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) strMatcher15, 2, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder4.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test11720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11720");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer34);
    }

    @Test
    public void test11721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11721");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(strBuilder26, (int) 'a', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str31 = strBuilder30.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str36 = strBuilder34.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder34.append((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder23.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("hi!");
        java.lang.String str55 = strBuilder54.getNullText();
        char[] charArray57 = new char[] { 'a' };
        char[] charArray58 = strBuilder54.getChars(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNewLine();
        char[] charArray82 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, ' ');
        char[] charArray85 = strBuilder75.getChars(charArray82);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '#');
        boolean boolean89 = strBuilder60.equals((java.lang.Object) strTokenizer88);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder47.appendFixedWidthPadLeft((java.lang.Object) strBuilder60, 65, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder92.appendSeparator("##########################110\n\ni###############################################################################################", "");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test11722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11722");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.deleteAll(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.append((float) (byte) 0);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int57 = strBuilder52.indexOf(strMatcher55, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.replaceFirst(strMatcher55, "100.0false\n");
        int int62 = strBuilder28.lastIndexOf(strMatcher55, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder18.replaceAll(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterChar(' ');
        boolean boolean69 = strTokenizer68.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer68.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder18.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder18.append("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteAll('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.setNewLineText("a4a4");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test11723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11723");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.ensureCapacity(39);
        boolean boolean11 = strBuilder9.endsWith(".0jav");
        char[] charArray16 = new char[] { 'a', 'a', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray18 = strBuilder9.getChars(charArray16);
        char[] charArray25 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("hi!");
        java.lang.String str30 = strTokenizer29.nextToken();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        char[] charArray43 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray44 = strBuilder34.getChars(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        int int46 = strList31.indexOf((java.lang.Object) charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int52 = strTokenizer51.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer51.setTrimmerMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher50, strMatcher54);
        java.util.List<java.lang.String> strList57 = strTokenizer56.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterChar(' ');
        java.lang.String str61 = strTokenizer58.next();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "10\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[1, 0, \n,  ]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "10\n" + "'", str61, "10\n");
    }

    @Test
    public void test11724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11724");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.appendln("java.io.IOException: ");
        boolean boolean15 = strBuilder14.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append("va.io.IOExceptionfalse1001.", (int) (short) 10, 2);
        java.util.stream.IntStream intStream20 = strBuilder19.chars();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
    }

    @Test
    public void test11725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11725");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        char[] charArray25 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray26 = strBuilder16.getChars(charArray25);
        int int30 = strMatcher13.isMatch(charArray25, (int) (short) 100, (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray25);
        int int32 = strTokenizer31.previousIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test11726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11726");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.append(15);
        boolean boolean13 = strBuilder4.contains('3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test11727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11727");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNullText("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendSeparator("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendFixedWidthPadLeft((int) 'a', (int) (byte) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.appendln(strBuilder67, (int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.appendln("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        java.lang.String str76 = strBuilder75.getNullText();
        char[] charArray78 = new char[] { 'a' };
        char[] charArray79 = strBuilder75.getChars(charArray78);
        char[] charArray84 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray85 = strBuilder75.getChars(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, 'a');
        boolean boolean88 = strTokenizer87.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer87.getIgnoredMatcher();
        boolean boolean90 = strBuilder72.contains(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer55.setIgnoredMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder45.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer91, "java.io.IOExceptionfalse1001.0\n35.0\nhi!100hi!ahi!");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test11728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11728");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendSeparator('4', '\000');
        char[] charArray21 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray21);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[\000]");
        org.junit.Assert.assertNotNull(strTokenizer22);
    }

    @Test
    public void test11729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11729");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoreEmptyTokens(false);
        java.lang.String[] strArray4 = strTokenizer1.getTokenArray();
        java.lang.String str5 = strTokenizer1.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = strTokenizer1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[]" + "'", str5, "StrTokenizer[]");
    }

    @Test
    public void test11730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11730");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("aaaaaaaaaaaaaaaaaaaaaaaa100", '0', '1');
        java.lang.String str4 = strTokenizer3.nextToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "aaaaaaaaaaaaaaaaaaaaaaaa1" + "'", str4, "aaaaaaaaaaaaaaaaaaaaaaaa1");
    }

    @Test
    public void test11731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11731");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        int int41 = strBuilder31.indexOf(strMatcher39);
        int int44 = strBuilder31.indexOf("java.io.IOException: StrTokenizer[not tokenized yet]", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.appendln(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("10\n\n", "100.0false\n");
        java.lang.String str49 = strBuilder48.getNullText();
        java.util.stream.IntStream intStream50 = strBuilder48.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNull();
        boolean boolean56 = strBuilder54.equals((java.lang.Object) 100.0d);
        java.lang.String str57 = strBuilder54.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.clear();
        java.lang.Throwable throwable65 = null;
        java.io.IOException iOException66 = new java.io.IOException("", throwable65);
        java.io.IOException iOException67 = new java.io.IOException("#4#a4#", throwable65);
        java.io.IOException iOException68 = new java.io.IOException(throwable65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray72 = new java.lang.Object[] { 1.0f, iOException68, false, 100, strBuilder71 };
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder61.appendWithSeparators(objArray72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer82 = strBuilder76.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder54.append(stringBuffer82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder48.append(stringBuffer82, 8, 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln(true);
        java.lang.String str91 = strBuilder88.midString(91, 53);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(stringBuffer82);
        org.junit.Assert.assertEquals(stringBuffer82.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
    }

    @Test
    public void test11732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11732");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("1false0\n\n#", 'c', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoredChar('a');
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test11733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11733");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("io.IOExceptionfalse1001.0\n35.0\n466.0", '\n', '.');
    }

    @Test
    public void test11734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11734");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.deleteAll("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.appendln(true);
        java.io.Writer writer45 = strBuilder30.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder30.appendln((int) (byte) 100);
        int int50 = strBuilder30.lastIndexOf("1.0java.io.IOExcept", (int) '\000');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test11735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11735");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("hi!", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("true\n", strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.replace(strMatcher16, "java.io.IOException: StrTokenizer[not tokenized yet]", 0, 27, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer25.setDelimiterString("#4#a4#");
        java.lang.String str29 = strTokenizer25.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append("#4#a4#");
        java.lang.String str37 = strBuilder30.leftString((int) (short) 100);
        int int39 = strBuilder30.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int58 = strBuilder55.lastIndexOf(strMatcher56, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder30.replaceFirst(strMatcher56, "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer25.setIgnoredMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder22.replaceAll(strMatcher56, "1false0");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder22.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll('#', 'I');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test11736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11736");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        java.lang.String[] strArray8 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        java.lang.String str23 = strTokenizer19.next();
        int int24 = strList9.indexOf((java.lang.Object) strTokenizer19);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        int int47 = strBuilder37.indexOf(strMatcher45);
        char[] charArray54 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher45, strMatcher60);
        boolean boolean62 = strList9.equals((java.lang.Object) strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        java.util.stream.IntStream intStream69 = strBuilder68.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int72 = strBuilder68.lastIndexOf(strMatcher71);
        boolean boolean73 = strList9.remove((java.lang.Object) strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer1.setTrimmerMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setQuoteMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getQuoteMatcher();
        java.lang.String str79 = strTokenizer77.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("1false0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        int int84 = strBuilder81.lastIndexOf(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer77.setTrimmerMatcher(strMatcher83);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#4#a4#" + "'", str23, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(intStream69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer85);
    }

    @Test
    public void test11737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11737");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        java.util.stream.IntStream intStream12 = strBuilder5.codePoints();
        java.io.Writer writer13 = strBuilder5.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln(10L);
        int int22 = strBuilder16.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append("#4#a4#");
        java.lang.String str33 = strBuilder26.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int37 = strBuilder34.indexOf(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.append(false);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        boolean boolean55 = strTokenizer52.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder39.appendFixedWidthPadRight((java.lang.Object) strTokenizer52, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int62 = strBuilder59.indexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln((int) (short) 10);
        boolean boolean69 = strBuilder39.equalsIgnoreCase(strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder39.reverse();
        java.lang.StringBuffer stringBuffer71 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder26.append(stringBuffer71, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder25.append(stringBuffer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int79 = strBuilder76.indexOf(strMatcher78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder81.append((int) (short) -1);
        boolean boolean86 = strBuilder25.equalsIgnoreCase(strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendln((float) 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.replaceFirst("java.io.IOException: StrTokenizer[#4#a4#]", "aa##");
        java.io.Writer writer93 = writer13.append((java.lang.CharSequence) "java.io.IOException: StrTokenizer[#4#a4#]");
        writer13.flush();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(intStream12);
        org.junit.Assert.assertNotNull(writer13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(writer93);
    }

    @Test
    public void test11738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11738");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        long long15 = reader13.skip((long) 59);
        reader13.reset();
        reader13.reset();
        int int18 = reader13.read();
        reader13.close();
        reader13.close();
        boolean boolean21 = reader13.markSupported();
        int int22 = reader13.read();
        long long24 = reader13.skip((long) 77);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test11739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11739");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(true);
        boolean boolean9 = strBuilder8.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.append("java.io.IOException:");
        java.io.Writer writer12 = strBuilder8.asWriter();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(writer12);
    }

    @Test
    public void test11740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11740");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int23 = strBuilder20.lastIndexOf(strMatcher21, (int) (short) 10);
        int int25 = strBuilder4.indexOf(strMatcher21, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendln(10L);
        int int59 = strBuilder53.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.appendln(strBuilder62);
        java.io.Writer writer64 = strBuilder63.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        java.lang.String str68 = strBuilder67.getNullText();
        char[] charArray70 = new char[] { 'a' };
        char[] charArray71 = strBuilder67.getChars(charArray70);
        char[] charArray76 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray77 = strBuilder67.getChars(charArray76);
        writer64.write(charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder4.insert(0, charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder4.appendln((float) 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln((double) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder81.appendln("1.0java.io.IOExc\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.insert((int) '\000', (long) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(writer64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test11741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11741");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        boolean boolean14 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer13.getDelimiterMatcher();
        java.lang.String[] strArray16 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        boolean boolean19 = strTokenizer13.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test11742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11742");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        java.lang.String str26 = strBuilder5.leftString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder5.append("aa", (int) (short) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.appendNewLine();
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        char[] charArray51 = strBuilder41.getChars(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder30.deleteAll(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder30.setLength(44);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test11743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11743");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        java.util.stream.IntStream intStream6 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int9 = strBuilder5.lastIndexOf(strMatcher8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int24 = strBuilder21.lastIndexOf(strMatcher22, (int) (short) -1);
        boolean boolean25 = strBuilder5.contains(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        java.lang.String str31 = strBuilder30.getNullText();
        char[] charArray33 = new char[] { 'a' };
        char[] charArray34 = strBuilder30.getChars(charArray33);
        char[] charArray39 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray40 = strBuilder30.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer41.reset(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer41.setQuoteMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder5.replaceAll(strMatcher54, "35.0\n4aaaaaaaaaaaaaaaaaaaaaStrTokenizer[not1false0\ntokenized1false0\nyet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) 0.0f);
        char[] charArray66 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder57.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer73, "100.012true");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test11744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11744");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendPadding((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int26 = strBuilder23.lastIndexOf(strMatcher24, (int) (short) -1);
        java.io.Reader reader27 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.append(false);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setDelimiterString("hi!");
        boolean boolean50 = strTokenizer47.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder34.appendFixedWidthPadRight((java.lang.Object) strTokenizer47, 10, ' ');
        int int54 = strTokenizer47.previousIndex();
        int int55 = strTokenizer47.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder23.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder2.appendln(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        java.lang.String str61 = strBuilder60.getNullText();
        char[] charArray63 = new char[] { 'a' };
        char[] charArray64 = strBuilder60.getChars(charArray63);
        char[] charArray69 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray70 = strBuilder60.getChars(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder56.appendln(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder56.deleteAll("100.0-1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder56.append("java.io.IOException: #4#a4#");
        int int81 = strBuilder56.lastIndexOf('1', 47);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test11745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11745");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.trim();
        java.lang.Object[] objArray39 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendAll(objArray39);
        char[] charArray41 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder26.setCharAt(33, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendPadding((int) (byte) 0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.setNewLineText("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.replace(22, 74, "false");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("\n0.53\n0.1001eslafnoitpecxEOI.oi.avaj0.1");
        int int58 = strBuilder50.lastIndexOf(strMatcher56, (-1));
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test11746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11746");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.reset("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        int int20 = strTokenizer19.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer19.setTrimmerMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer18.setQuoteMatcher(strMatcher22);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer24.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
    }

    @Test
    public void test11747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11747");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        char[] charArray25 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray26 = strBuilder16.getChars(charArray25);
        int int30 = strMatcher13.isMatch(charArray25, (int) (short) 100, (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoredChar('\n');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer36);
    }

    @Test
    public void test11748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11748");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        int int26 = strTokenizer24.size();
        java.lang.String str27 = strTokenizer24.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer24.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList30 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        boolean boolean35 = strBuilder34.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        int int46 = strMatcher37.isMatch(charArray44, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.append(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setIgnoreEmptyTokens(true);
        boolean boolean53 = strTokenizer50.hasNext();
        boolean boolean54 = strList30.contains((java.lang.Object) strTokenizer50);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer50);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer50.getIgnoredMatcher();
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int72 = strBuilder69.indexOf(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int78 = strBuilder75.indexOf(strMatcher77);
        int int79 = strBuilder69.indexOf(strMatcher77);
        char[] charArray86 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, strMatcher90);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer91.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher77, strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray63);
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strTokenizer95.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer50.setTrimmerMatcher(strMatcher96);
        org.apache.commons.lang3.text.StrMatcher strMatcher98 = strTokenizer97.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#" + "'", str27, "#4#");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strMatcher96);
        org.junit.Assert.assertNotNull(strTokenizer97);
        org.junit.Assert.assertNotNull(strMatcher98);
    }

    @Test
    public void test11749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11749");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteFirst(strMatcher35);
        int int38 = strBuilder16.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder0.deleteFirst(strMatcher35);
        boolean boolean41 = strBuilder0.contains("true\n");
        java.lang.String str44 = strBuilder0.substring(0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder0.appendSeparator("59.052.0");
        boolean boolean48 = strBuilder0.endsWith("a4");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#4#a4#" + "'", str44, "#4#a4#");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test11750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11750");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("a", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln("4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getQuoteMatcher();
        int int24 = strBuilder18.lastIndexOf(strMatcher23);
        boolean boolean25 = strBuilder9.contains(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        java.lang.String str30 = strBuilder29.getNullText();
        char[] charArray32 = new char[] { 'a' };
        char[] charArray33 = strBuilder29.getChars(charArray32);
        char[] charArray38 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray39 = strBuilder29.getChars(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        boolean boolean42 = strTokenizer41.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("zinekoTrtSeslaf ", strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder9.replaceFirst(strMatcher43, "4#");
        int int48 = strBuilder9.lastIndexOf('I');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.clear();
        java.lang.Throwable throwable56 = null;
        java.io.IOException iOException57 = new java.io.IOException("", throwable56);
        java.io.IOException iOException58 = new java.io.IOException("#4#a4#", throwable56);
        java.io.IOException iOException59 = new java.io.IOException(throwable56);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray63 = new java.lang.Object[] { 1.0f, iOException59, false, 100, strBuilder62 };
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder52.appendWithSeparators(objArray63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.clear();
        java.lang.String str71 = strBuilder69.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder52.append((java.lang.CharSequence) str71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append((float) 100L);
        char[] charArray83 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray83);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder74.replaceAll(strMatcher88, "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder9.replaceAll(strMatcher88, "100.0zinekoTrtSeslaf1");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder9.trim();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test11751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11751");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.deleteFirst("1.0java.io");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        java.lang.String str25 = strBuilder24.getNullText();
        char[] charArray27 = new char[] { 'a' };
        char[] charArray28 = strBuilder24.getChars(charArray27);
        char[] charArray33 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray34 = strBuilder24.getChars(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder15.appendln(charArray33, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, "0\nzinekoTrtSeslaf ");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder9.append(charArray33, 50, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test11752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11752");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.replaceAll("1false0\n", " ");
        java.lang.String str17 = strBuilder16.toString();
        java.lang.StringBuffer stringBuffer18 = strBuilder16.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.delete((int) (byte) 1, 55);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("\n01 false", "StrTokenizer[#4#a4#]\na#4#a4#\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertNotNull(stringBuffer18);
        org.junit.Assert.assertEquals(stringBuffer18.toString(), "1");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test11753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11753");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
    }

    @Test
    public void test11754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11754");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean28 = strBuilder27.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        java.lang.String str44 = strBuilder43.getNullText();
        char[] charArray46 = new char[] { 'a' };
        char[] charArray47 = strBuilder43.getChars(charArray46);
        char[] charArray52 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray53 = strBuilder43.getChars(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.appendln(charArray52, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder27.appendln(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setQuoteChar('4');
        java.util.List<java.lang.String> strList65 = strTokenizer64.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.appendAll((java.lang.Iterable<java.lang.String>) strList65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln("java.io.IOException: StrTokenizer[#4#a4#]");
        int int70 = strBuilder68.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.appendln((long) 'c');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendSeparator("1.0java.io.IOExceptionfalse1001.0\n35.0\njava.io.IOException: 10.0\nStrTokenizer[#4#a4#]\n", 0);
        java.lang.String str78 = strBuilder73.rightString(74);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 55 + "'", int70 == 55);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "99\n" + "'", str78, "99\n");
    }

    @Test
    public void test11755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11755");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        int int12 = strTokenizer8.nextIndex();
        int int13 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.setIgnoreEmptyTokens(false);
        int int16 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.reset("a");
        java.lang.String str19 = strTokenizer8.toString();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11756");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.deleteAll(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.append((float) (byte) 0);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int57 = strBuilder52.indexOf(strMatcher55, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.replaceFirst(strMatcher55, "100.0false\n");
        int int62 = strBuilder28.lastIndexOf(strMatcher55, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder18.replaceAll(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        java.lang.String str69 = strBuilder68.getNullText();
        char[] charArray71 = new char[] { 'a' };
        char[] charArray72 = strBuilder68.getChars(charArray71);
        int int76 = strMatcher65.isMatch(charArray72, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray72);
        boolean boolean78 = strBuilder18.equals((java.lang.Object) charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, "1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test11757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11757");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.deleteAll("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.appendln(true);
        java.io.Writer writer45 = strBuilder30.asWriter();
        java.io.Writer writer47 = writer45.append('0');
        writer45.flush();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(writer47);
    }

    @Test
    public void test11758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11758");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        int int17 = strBuilder14.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln((double) 49);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.append((double) 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceAll('0', 'I');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test11759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11759");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) (byte) 0);
        boolean boolean16 = reader13.markSupported();
        reader13.close();
        int int18 = reader13.read();
        reader13.mark(49);
        reader13.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        boolean boolean26 = strBuilder25.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        java.lang.String str32 = strBuilder31.getNullText();
        char[] charArray34 = new char[] { 'a' };
        char[] charArray35 = strBuilder31.getChars(charArray34);
        int int37 = strMatcher28.isMatch(charArray35, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.append(charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray35);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = reader13.read(charArray35, 0, 47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
    }

    @Test
    public void test11760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11760");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.reverse();
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("0java.io.IOExceptionfalse100", strMatcher51, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder37.deleteFirst(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendSeparator("aaaaaaaaaaaaaaaaaaaaaaaa100", 3);
        char[] charArray61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append(charArray61);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray65 = strBuilder62.toCharArray(33, 24);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test11761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11761");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        boolean boolean7 = strBuilder2.endsWith("trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendFixedWidthPadLeft((int) ' ', 34, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        java.lang.Throwable throwable21 = null;
        java.io.IOException iOException22 = new java.io.IOException("", throwable21);
        java.io.IOException iOException23 = new java.io.IOException("#4#a4#", throwable21);
        java.io.IOException iOException24 = new java.io.IOException(throwable21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1.0f, iOException24, false, 100, strBuilder27 };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.appendWithSeparators(objArray28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.clear();
        java.lang.String str36 = strBuilder34.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder17.append((java.lang.CharSequence) str36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.ensureCapacity((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((long) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder13.append(strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder13.setNullText("100.012");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test11762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11762");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.setNewLineText(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test11763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11763");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int28 = strBuilder23.indexOf(strMatcher26, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.replaceFirst(strMatcher26, "100.0false\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        char[] charArray40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int45 = strBuilder42.indexOf(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.replace(strMatcher52, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.replaceFirst(strMatcher52, "hi!");
        boolean boolean60 = strBuilder31.contains(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder31.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.setNullText("1.0java.io.I");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test11764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11764");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        java.lang.String str6 = strBuilder4.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.append((java.lang.Object) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.append((java.lang.CharSequence) strBuilder17);
        boolean boolean19 = strBuilder0.isEmpty();
        int int22 = strBuilder0.lastIndexOf("35\n", 37);
        boolean boolean24 = strBuilder0.startsWith("0.012true104444444444444444444444444444444444444444444444");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("##a#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder0.replaceAll(strMatcher26, "a.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n 10");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test11765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11765");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.write("#4#a4#", 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        writer9.write(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray57 = strBuilder49.getChars(charArray55);
        writer9.write(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
    }

    @Test
    public void test11766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11766");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        java.lang.Throwable throwable46 = null;
        java.io.IOException iOException47 = new java.io.IOException("", throwable46);
        java.io.IOException iOException48 = new java.io.IOException("#4#a4#", throwable46);
        java.io.IOException iOException49 = new java.io.IOException(throwable46);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1.0f, iOException49, false, 100, strBuilder52 };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.appendWithSeparators(objArray53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln((double) (short) 1);
        int int60 = strBuilder55.lastIndexOf("java.io.IOException: ", (int) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        int int72 = strMatcher61.isMatch(charArray68, 0, 0, (int) (byte) 10);
        char[] charArray73 = strBuilder55.getChars(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder37.insert(0, charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("1.0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer78.setQuoteMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer78.setQuoteChar('f');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "1.0java.io.IOExceptionfalse1001.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer83);
    }

    @Test
    public void test11767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11767");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        java.lang.String str25 = strTokenizer18.next();
        boolean boolean26 = strTokenizer18.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.setIgnoreEmptyTokens(true);
        java.lang.Object obj29 = strTokenizer28.clone();
        boolean boolean30 = strTokenizer28.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4#a4#" + "'", str25, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test11768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11768");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        int int23 = strBuilder9.indexOf('a', 22);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test11769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11769");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.insert(0, false);
        boolean boolean15 = strBuilder13.contains(".0jva.io.IOExceptionfalse1001.0jav\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        java.lang.String str21 = strBuilder20.getNullText();
        char[] charArray23 = new char[] { 'a' };
        char[] charArray24 = strBuilder20.getChars(charArray23);
        char[] charArray29 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray30 = strBuilder20.getChars(charArray29);
        java.io.Reader reader31 = strBuilder20.asReader();
        reader31.mark(10);
        reader31.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.clear();
        char[] charArray44 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.appendln(charArray44);
        int int47 = reader31.read(charArray44);
        int int48 = reader31.read();
        reader31.close();
        char[] charArray56 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '0');
        int int62 = reader31.read(charArray56);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder13.getChars(91, 60, charArray56, 40);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 60");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test11770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11770");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        char[] charArray17 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.replaceAll('I', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.insert(5, (java.lang.Object) "a");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.deleteCharAt(200);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 200");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), " 10\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), " 10\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[ , 1, 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test11771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11771");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        java.lang.StringBuffer stringBuffer21 = strBuilder9.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        java.lang.String str25 = strBuilder24.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendln((long) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder9.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str35 = strTokenizer34.getContent();
        char[] charArray41 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer34.reset(charArray41);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder27.insert(105, charArray41, 13, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 105");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(stringBuffer21);
        org.junit.Assert.assertEquals(stringBuffer21.toString(), "  \n");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test11772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11772");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor19 = strList12.listIterator();
        int int20 = strList12.size();
        int int21 = strList12.size();
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        java.lang.String str33 = strTokenizer32.nextToken();
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        boolean boolean36 = strList34.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str39 = strTokenizer38.getContent();
        boolean boolean40 = strList34.equals((java.lang.Object) strTokenizer38);
        java.util.ListIterator<java.lang.String> strItor41 = strList34.listIterator();
        int int42 = strList34.size();
        int int43 = strList34.size();
        int int44 = strList34.size();
        int int45 = strList34.size();
        char[] charArray52 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setDelimiterString("hi!");
        java.lang.String str57 = strTokenizer56.nextToken();
        java.util.List<java.lang.String> strList58 = strTokenizer56.getTokenList();
        boolean boolean60 = strList58.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str63 = strTokenizer62.getContent();
        boolean boolean64 = strList58.equals((java.lang.Object) strTokenizer62);
        java.util.ListIterator<java.lang.String> strItor65 = strList58.listIterator();
        int int66 = strList58.size();
        int int67 = strList58.size();
        int int68 = strList58.size();
        int int69 = strList58.size();
        boolean boolean70 = strList34.retainAll((java.util.Collection<java.lang.String>) strList58);
        boolean boolean71 = strList12.equals((java.lang.Object) strList34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = strList12.set((int) 'f', "1.0java.io.IOExceptionfalse1001.");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 102, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#4#a4#" + "'", str57, "#4#a4#");
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test11773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11773");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setQuoteChar('1');
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test11774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11774");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.write((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendln(10L);
        int int59 = strBuilder53.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.appendln(strBuilder62);
        java.io.Writer writer64 = strBuilder63.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        java.lang.String str68 = strBuilder67.getNullText();
        char[] charArray70 = new char[] { 'a' };
        char[] charArray71 = strBuilder67.getChars(charArray70);
        char[] charArray76 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray77 = strBuilder67.getChars(charArray76);
        writer64.write(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, '1', 'I');
        writer9.write(charArray76);
        writer9.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(writer64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a, 4,  , 4]");
    }

    @Test
    public void test11775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11775");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.deleteFirst("0java.io.IOExceptionfalse100");
        boolean boolean50 = strBuilder18.equals(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder18.appendFixedWidthPadLeft(53, (int) (short) 100, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder18.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.trim();
        boolean boolean59 = strBuilder57.startsWith("java.io.IOException: 10\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test11776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11776");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder16.appendln(38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence50 = strBuilder47.subSequence(52, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test11777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11777");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.write("0java.io.IOExceptionfalse100", 4, 4);
        writer9.flush();
        char[] charArray30 = null;
        writer9.write(charArray30);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
    }

    @Test
    public void test11778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11778");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.String[] strArray35 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean49 = strTokenizer46.isIgnoreEmptyTokens();
        java.lang.String str50 = strTokenizer46.next();
        int int51 = strList36.indexOf((java.lang.Object) strTokenizer46);
        java.util.ListIterator<java.lang.String> strItor53 = strList36.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor54 = strList36.iterator();
        java.lang.String[] strArray58 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("hi!");
        boolean boolean72 = strTokenizer69.isIgnoreEmptyTokens();
        java.lang.String str73 = strTokenizer69.next();
        int int74 = strList59.indexOf((java.lang.Object) strTokenizer69);
        boolean boolean75 = strList36.addAll((java.util.Collection<java.lang.String>) strList59);
        strList59.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder31.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList59, "");
        int int79 = strBuilder78.capacity();
        boolean boolean80 = strBuilder78.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#4#a4#" + "'", str50, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 39 + "'", int79 == 39);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test11779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11779");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        char[] charArray11 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        int int27 = strBuilder17.indexOf(strMatcher25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher25, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder4.deleteAll(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        char[] charArray51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(charArray51);
        boolean boolean53 = strBuilder50.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        boolean boolean59 = strBuilder58.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        java.lang.String str65 = strBuilder64.getNullText();
        char[] charArray67 = new char[] { 'a' };
        char[] charArray68 = strBuilder64.getChars(charArray67);
        int int70 = strMatcher61.isMatch(charArray68, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.append(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder50.insert((int) (byte) 1, charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "StrTokenizer[#4#a4#]");
        char[] charArray75 = strBuilder42.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray75);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer79.setQuoteChar(':');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer82);
    }

    @Test
    public void test11780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11780");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.trim();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder5.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "");
        boolean boolean42 = strTokenizer39.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test11781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11781");
        java.io.IOException iOException2 = new java.io.IOException("10\n\n");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("\n", (java.lang.Throwable) iOException3);
        java.lang.Throwable throwable8 = null;
        java.io.IOException iOException9 = new java.io.IOException("", throwable8);
        java.io.IOException iOException10 = new java.io.IOException("#4#a4#", throwable8);
        java.io.IOException iOException11 = new java.io.IOException(".0j", (java.lang.Throwable) iOException10);
        iOException4.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray13 = iOException4.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException17 = new java.io.IOException("10\n ");
        java.io.IOException iOException18 = new java.io.IOException("\nzinekoTrtSeslaf \n", (java.lang.Throwable) iOException17);
        java.lang.Throwable[] throwableArray19 = iOException18.getSuppressed();
        iOException14.addSuppressed((java.lang.Throwable) iOException18);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test11782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11782");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln(strBuilder6, 1, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.append(strBuilder24, 5, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(0.0f);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test11783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11783");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.deleteAll(strMatcher30);
        boolean boolean32 = strBuilder5.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder5.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceAll(strMatcher35, "59.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.setLength(11);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        java.lang.Throwable throwable47 = null;
        java.io.IOException iOException48 = new java.io.IOException("", throwable47);
        java.io.IOException iOException49 = new java.io.IOException("#4#a4#", throwable47);
        java.io.IOException iOException50 = new java.io.IOException(throwable47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 1.0f, iOException50, false, 100, strBuilder53 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendWithSeparators(objArray54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln((double) (short) 1);
        int int61 = strBuilder56.lastIndexOf("java.io.IOException: ", (int) (byte) 10);
        java.lang.StringBuffer stringBuffer62 = strBuilder56.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder37.appendln(stringBuffer62, 61, 60);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer62);
        org.junit.Assert.assertEquals(stringBuffer62.toString(), "1.0java.io.IOExceptionfalse1001.0\n");
    }

    @Test
    public void test11784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11784");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendln(10L);
        int int13 = strBuilder7.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append("#4#a4#");
        java.lang.String str24 = strBuilder17.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(false);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) strTokenizer43, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int53 = strBuilder50.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln((int) (short) 10);
        boolean boolean60 = strBuilder30.equalsIgnoreCase(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder30.reverse();
        java.lang.StringBuffer stringBuffer62 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder17.append(stringBuffer62, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder16.append(stringBuffer62);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder3.appendln(stringBuffer62);
        java.lang.String str69 = strBuilder67.rightString(0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(stringBuffer62);
        org.junit.Assert.assertEquals(stringBuffer62.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test11785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11785");
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException("", throwable4);
        java.io.IOException iOException6 = new java.io.IOException("hi!", throwable4);
        java.io.IOException iOException7 = new java.io.IOException("hi!", throwable4);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable throwable13 = null;
        java.io.IOException iOException14 = new java.io.IOException("", throwable13);
        java.lang.Throwable[] throwableArray15 = iOException14.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException("1false0\nfalse", (java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.lang.Throwable[] throwableArray18 = iOException16.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException(".IOExceptionfalse1001.0\n3.0a", (java.lang.Throwable) iOException16);
        iOException7.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("StrTokenizer[true\n]", (java.lang.Throwable) iOException7);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test11786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11786");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(".0jav");
        boolean boolean2 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterString("false32.0");
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test11787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11787");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int23 = strBuilder9.lastIndexOf(strMatcher21, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.appendSeparator("StrTokenizer[#4#a4#]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendln(10L);
        int int49 = strBuilder43.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder43.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder43.replaceAll("1false0\n", " ");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.deleteAll(strMatcher61);
        boolean boolean63 = strBuilder38.equals((java.lang.Object) strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder26.deleteAll(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder26.setNewLineText("##a#");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.reverse();
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setDelimiterString("hi!");
        boolean boolean79 = strTokenizer76.isIgnoreEmptyTokens();
        int int80 = strTokenizer76.nextIndex();
        int int81 = strTokenizer76.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer76.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer76.getTrimmerMatcher();
        boolean boolean85 = strBuilder67.contains(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test11788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11788");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt((int) '\000');
        java.lang.String str43 = strBuilder42.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.deleteAll('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.deleteAll("4444444444444444444444444444\n#####################################################################################zinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln('.');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test11789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11789");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        int int17 = strBuilder16.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.replaceAll("10\n100.0", "o.IOExcept");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        java.lang.String str24 = strTokenizer23.nextToken();
        boolean boolean25 = strTokenizer23.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer23.setTrimmerMatcher(strMatcher26);
        boolean boolean28 = strTokenizer27.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setDelimiterChar('.');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getIgnoredMatcher();
        int int32 = strBuilder16.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder42.appendln(strBuilder50);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int56 = strBuilder42.lastIndexOf(strMatcher54, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder42.appendSeparator("StrTokenizer[#4#a4#]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        java.lang.Throwable throwable67 = null;
        java.io.IOException iOException68 = new java.io.IOException("", throwable67);
        java.io.IOException iOException69 = new java.io.IOException("#4#a4#", throwable67);
        java.io.IOException iOException70 = new java.io.IOException(throwable67);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray74 = new java.lang.Object[] { 1.0f, iOException70, false, 100, strBuilder73 };
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder63.appendWithSeparators(objArray74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder59.appendln(strBuilder78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder84.deleteFirst(strMatcher89);
        int int92 = strBuilder16.lastIndexOf(strMatcher89, 55);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test11790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11790");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int23 = strBuilder20.lastIndexOf(strMatcher21, (int) (short) 10);
        int int25 = strBuilder4.indexOf(strMatcher21, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendln(10L);
        int int59 = strBuilder53.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.appendln(strBuilder62);
        java.io.Writer writer64 = strBuilder63.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("hi!");
        java.lang.String str68 = strBuilder67.getNullText();
        char[] charArray70 = new char[] { 'a' };
        char[] charArray71 = strBuilder67.getChars(charArray70);
        char[] charArray76 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray77 = strBuilder67.getChars(charArray76);
        writer64.write(charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder4.insert(0, charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder4.appendln((float) 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln((double) '#');
        java.lang.String str85 = strBuilder83.rightString(72);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(writer64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "a4 435\n10\n\n48.0\n35.0\n" + "'", str85, "a4 435\n10\n\n48.0\n35.0\n");
    }

    @Test
    public void test11791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11791");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        java.lang.String str3 = strBuilder1.rightString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.deleteFirst("1false0\n1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator('3');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray10 = strBuilder5.toCharArray(64, 88);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\n" + "'", str3, "\n");
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test11792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11792");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(100);
        java.io.Writer writer2 = strBuilder1.asWriter();
        int int5 = strBuilder1.indexOf('#', 42);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendln((float) 44);
        boolean boolean9 = strBuilder1.contains("aa#4\n                                                                                                 ");
        org.junit.Assert.assertNotNull(writer2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11793");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("0\nzinekoTrtSeslaf ", '0', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        java.lang.String str52 = strBuilder51.getNullText();
        char[] charArray54 = new char[] { 'a' };
        char[] charArray55 = strBuilder51.getChars(charArray54);
        char[] charArray60 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray61 = strBuilder51.getChars(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder51.appendln("java.io.IOException: ");
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder63.replaceFirst(strMatcher74, "#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.deleteAll(strMatcher81);
        boolean boolean83 = strBuilder63.contains(strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer48.setQuoteMatcher(strMatcher81);
        boolean boolean85 = strBuilder44.equals((java.lang.Object) strTokenizer84);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test11794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11794");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterChar('a');
        java.lang.String str32 = strTokenizer31.previousToken();
        java.util.List<java.lang.String> strList33 = strTokenizer31.getTokenList();
        boolean boolean34 = strList18.addAll((java.util.Collection<java.lang.String>) strList33);
        java.lang.Object[] objArray35 = strList33.toArray();
        int int36 = strList33.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList39 = strList33.subList((int) 'I', 18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 18");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[#4#, 4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[#4#, 4#]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
    }

    @Test
    public void test11795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11795");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int23 = strBuilder20.lastIndexOf(strMatcher21, (int) (short) 10);
        int int25 = strBuilder4.indexOf(strMatcher21, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder4.appendSeparator("a", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder4.append((long) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder4.appendPadding(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder4.appendSeparator("StrTokenizer[4#4]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test11796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11796");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(stringBuffer5, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.ensureCapacity(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendln(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder34.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.insert(16, (int) (byte) 10);
        boolean boolean59 = strBuilder34.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder34.appendln(strBuilder60, (int) (short) 0, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.insert(53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendSeparator("");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test11797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11797");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt((int) '#');
        java.lang.Object obj31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendFixedWidthPadRight(obj31, 72, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        char[] charArray43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(charArray43);
        boolean boolean45 = strBuilder42.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        boolean boolean51 = strBuilder50.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        java.lang.String str57 = strBuilder56.getNullText();
        char[] charArray59 = new char[] { 'a' };
        char[] charArray60 = strBuilder56.getChars(charArray59);
        int int62 = strMatcher53.isMatch(charArray60, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.append(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder42.insert((int) (byte) 1, charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.appendln((int) (byte) 0);
        java.io.Reader reader69 = strBuilder64.asReader();
        long long71 = reader69.skip((long) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder34.appendln((java.lang.Object) reader69);
        java.nio.CharBuffer charBuffer73 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int74 = reader69.read(charBuffer73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 4L + "'", long71 == 4L);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test11798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11798");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        java.lang.String str24 = strBuilder23.getNullText();
        char[] charArray26 = new char[] { 'a' };
        char[] charArray27 = strBuilder23.getChars(charArray26);
        int int29 = strMatcher20.isMatch(charArray27, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer16.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterChar('0');
        int int33 = strTokenizer32.nextIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test11799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11799");
        char[] charArray7 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        java.lang.String str12 = strTokenizer11.nextToken();
        java.util.List<java.lang.String> strList13 = strTokenizer11.getTokenList();
        boolean boolean15 = strList13.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str18 = strTokenizer17.getContent();
        boolean boolean19 = strList13.equals((java.lang.Object) strTokenizer17);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean21 = strList13.equals((java.lang.Object) strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("0\nzinekoTrtSeslaf ", strMatcher20, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer23.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test11800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11800");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        int int27 = strBuilder25.lastIndexOf("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.deleteAll("ptionfalse100");
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("hi!");
        boolean boolean47 = strTokenizer44.isIgnoreEmptyTokens();
        java.lang.String str48 = strTokenizer44.next();
        int int49 = strList34.indexOf((java.lang.Object) strTokenizer44);
        java.util.ListIterator<java.lang.String> strItor51 = strList34.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor52 = strList34.iterator();
        java.util.ListIterator<java.lang.String> strItor53 = strList34.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder29.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList34, "");
        boolean boolean56 = strList34.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 39 + "'", int27 == 39);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#4#a4#" + "'", str48, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test11801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11801");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int53 = strBuilder50.indexOf(strMatcher52);
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.appendAll((java.util.Iterator<java.lang.String>) strTokenizer62);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder46.replaceAll(strMatcher65, "StrTokenizer[#4#a4#]");
        java.lang.CharSequence charSequence69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.append(charSequence69, 15, 48);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder2.append(strBuilder68, (int) 'I', 20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test11802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11802");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendFixedWidthPadRight(10, 48, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendNewLine();
        int int22 = strBuilder19.indexOf("java.io.IOException: StrTokenizer[not tokenized yet]", 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test11803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11803");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.setNewLineText("a#4#a4#hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(50, 71);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 50");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test11804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11804");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        java.lang.String str24 = strTokenizer20.next();
        int int25 = strList10.indexOf((java.lang.Object) strTokenizer20);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int47 = strBuilder44.indexOf(strMatcher46);
        int int48 = strBuilder38.indexOf(strMatcher46);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher46, strMatcher61);
        boolean boolean63 = strList10.equals((java.lang.Object) strMatcher61);
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterString("hi!");
        boolean boolean75 = strTokenizer72.hasNext();
        java.util.List<java.lang.String> strList76 = strTokenizer72.getTokenList();
        java.lang.String[] strArray77 = strTokenizer72.getTokenArray();
        java.lang.CharSequence[] charSequenceArray78 = strList10.toArray((java.lang.CharSequence[]) strArray77);
        boolean boolean79 = strList4.retainAll((java.util.Collection<java.lang.String>) strList10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = strList4.remove((int) ':');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 58, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test11805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11805");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.appendln((long) 100);
        java.util.stream.IntStream intStream11 = strBuilder2.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.append(false);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        boolean boolean33 = strTokenizer30.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder17.appendFixedWidthPadRight((java.lang.Object) strTokenizer30, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln((int) (short) 10);
        boolean boolean47 = strBuilder17.equalsIgnoreCase(strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(false);
        char[] charArray59 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        java.lang.String str64 = strTokenizer63.nextToken();
        java.util.List<java.lang.String> strList65 = strTokenizer63.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        java.lang.String str69 = strBuilder68.getNullText();
        char[] charArray71 = new char[] { 'a' };
        char[] charArray72 = strBuilder68.getChars(charArray71);
        char[] charArray77 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray78 = strBuilder68.getChars(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray78);
        int int80 = strList65.indexOf((java.lang.Object) charArray78);
        char[] charArray81 = strBuilder52.getChars(charArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder2.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder52.deleteFirst(" 10\n0java.io.IOExceptionfalse100\n100.010\nfalse32.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#4#a4#" + "'", str64, "#4#a4#");
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test11806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11806");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append("#4#a4#");
        java.lang.String str24 = strBuilder17.leftString((int) (short) 100);
        int int26 = strBuilder17.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder17.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder17.appendSeparator(' ');
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        java.lang.String str43 = strTokenizer42.nextToken();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setTrimmerMatcher(strMatcher45);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        int int58 = strMatcher45.isMatch(charArray53, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.append(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder16.replaceAll(strMatcher60, " ");
        java.io.Writer writer63 = strBuilder16.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder16.replaceAll("java.io.IOException: a10\n", "  \n a10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((double) 24);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#4#a4#" + "'", str43, "#4#a4#");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test11807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11807");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.setCharAt(0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst('1');
        boolean boolean46 = strBuilder42.contains("1.0jv.io.IOExceptionflse1001.0\n35.0\njv.io.IOExce");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendln((double) 16);
        java.io.IOException iOException51 = new java.io.IOException("59.052.0");
        java.lang.Throwable throwable52 = null;
        java.io.IOException iOException53 = new java.io.IOException(throwable52);
        java.io.IOException iOException55 = new java.io.IOException("StrTokenizer[#4#a4#]");
        iOException53.addSuppressed((java.lang.Throwable) iOException55);
        java.lang.Throwable[] throwableArray57 = iOException55.getSuppressed();
        java.io.IOException iOException60 = new java.io.IOException();
        java.io.IOException iOException61 = new java.io.IOException("hi!", (java.lang.Throwable) iOException60);
        java.lang.Throwable throwable63 = null;
        java.io.IOException iOException64 = new java.io.IOException("", throwable63);
        java.lang.Throwable[] throwableArray65 = iOException64.getSuppressed();
        java.io.IOException iOException66 = new java.io.IOException((java.lang.Throwable) iOException64);
        iOException60.addSuppressed((java.lang.Throwable) iOException64);
        java.io.IOException iOException68 = new java.io.IOException("a", (java.lang.Throwable) iOException60);
        iOException55.addSuppressed((java.lang.Throwable) iOException60);
        java.io.IOException iOException70 = new java.io.IOException((java.lang.Throwable) iOException60);
        iOException51.addSuppressed((java.lang.Throwable) iOException60);
        java.io.IOException iOException72 = new java.io.IOException("4a4java.io.IOException: ", (java.lang.Throwable) iOException51);
        java.lang.Throwable[] throwableArray73 = iOException72.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder48.appendWithSeparators((java.lang.Object[]) throwableArray73, "java.io.IOException: java.io.IOException: java.io.IOException: hi!");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test11808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11808");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int9 = strBuilder6.indexOf(strMatcher8);
        int int10 = strBuilder0.indexOf(strMatcher8);
        int int13 = strBuilder0.indexOf("java.io.IOException: StrTokenizer[not tokenized yet]", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.clear();
        java.lang.Throwable throwable21 = null;
        java.io.IOException iOException22 = new java.io.IOException("", throwable21);
        java.io.IOException iOException23 = new java.io.IOException("#4#a4#", throwable21);
        java.io.IOException iOException24 = new java.io.IOException(throwable21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1.0f, iOException24, false, 100, strBuilder27 };
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.appendWithSeparators(objArray28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendln(10L);
        int int46 = strBuilder40.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder37.appendln(strBuilder49);
        boolean boolean52 = strBuilder37.endsWith("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder37.replaceAll(strMatcher56, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder0.replaceFirst(strMatcher56, "1false0\nfalse");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        int int62 = strBuilder0.lastIndexOf(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test11809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11809");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str13 = strTokenizer12.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer12.setQuoteChar(' ');
        java.lang.String[] strArray19 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        boolean boolean33 = strTokenizer30.isIgnoreEmptyTokens();
        java.lang.String str34 = strTokenizer30.next();
        int int35 = strList20.indexOf((java.lang.Object) strTokenizer30);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int51 = strBuilder48.indexOf(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int57 = strBuilder54.indexOf(strMatcher56);
        int int58 = strBuilder48.indexOf(strMatcher56);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher56, strMatcher71);
        boolean boolean73 = strList20.equals((java.lang.Object) strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int77 = strBuilder74.indexOf(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.append(' ');
        java.util.stream.IntStream intStream80 = strBuilder79.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int83 = strBuilder79.lastIndexOf(strMatcher82);
        boolean boolean84 = strList20.remove((java.lang.Object) strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer12.setTrimmerMatcher(strMatcher82);
        boolean boolean86 = strTokenizer85.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer85.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) strMatcher87, 16, '#');
        java.io.Writer writer91 = strBuilder90.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(intStream80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(writer91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test11810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11810");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#a4#-1", "\naa");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11811");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', '#');
        boolean boolean16 = strTokenizer15.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        java.lang.String str19 = strTokenizer15.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "aa" + "'", str19, "aa");
    }

    @Test
    public void test11812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11812");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("a", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.trim();
        java.lang.Object[] objArray22 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendAll(objArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder9.appendWithSeparators(objArray22, "java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator("1false0\nfalse", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.replaceFirst(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32", "1true");
        char[] charArray32 = strBuilder31.toCharArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
    }

    @Test
    public void test11813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11813");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.insert((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.insert(3, "#4#a4#");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert(97, (float) 34);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test11814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11814");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteFirst('#');
        char[] charArray17 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteAll('4');
        int int25 = strBuilder21.indexOf('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test11815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11815");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int29 = strBuilder26.indexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append("#4#a4#");
        boolean boolean32 = strBuilder25.equals(strBuilder31);
        int int34 = strBuilder31.indexOf(" 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        java.lang.String str39 = strBuilder38.getNullText();
        char[] charArray41 = new char[] { 'a' };
        char[] charArray42 = strBuilder38.getChars(charArray41);
        char[] charArray47 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray48 = strBuilder38.getChars(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int62 = strBuilder59.lastIndexOf(strMatcher60, (int) (short) 10);
        boolean boolean63 = strBuilder38.contains(strMatcher60);
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterString("hi!");
        java.lang.String str75 = strTokenizer74.nextToken();
        java.util.List<java.lang.String> strList76 = strTokenizer74.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer74.setTrimmerMatcher(strMatcher77);
        char[] charArray85 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray85);
        int int90 = strMatcher77.isMatch(charArray85, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher60, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setIgnoredChar('a');
        int int94 = strTokenizer91.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder31.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer91, "aa4#4\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = strTokenizer91.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "#4#a4#" + "'", str75, "#4#a4#");
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strMatcher97);
    }

    @Test
    public void test11816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11816");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((long) '#');
        java.util.stream.IntStream intStream34 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.setLength(0);
        java.util.stream.IntStream intStream42 = strBuilder39.chars();
        boolean boolean44 = strBuilder39.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder39, (int) 'e', 'I');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test11817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11817");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int23 = strBuilder18.indexOf(strMatcher21, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.replace(strMatcher21, "java.io.IOException: ", (int) (byte) 1, (int) (byte) 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        char[] charArray39 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        java.lang.String str45 = strBuilder29.midString((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln(10L);
        int int54 = strBuilder48.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder29.append((java.lang.Object) strBuilder60);
        boolean boolean62 = strBuilder10.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder10.ensureCapacity(48);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert(1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append((long) 21);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder64.replaceFirst('1', '3');
        java.lang.String str76 = strBuilder64.midString(3, 74);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "0.01221" + "'", str76, "0.01221");
    }

    @Test
    public void test11818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11818");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.deleteAll('4');
        int int16 = strBuilder11.size();
        int int18 = strBuilder11.lastIndexOf('a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = strBuilder11.substring(59, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test11819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11819");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setTrimmerMatcher(strMatcher13);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.add("se#4#a4#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
    }

    @Test
    public void test11820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11820");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("1false01", "1.0java.io.IOExceptionfalse1001.0\n35.0\ntrueaaaaaaaaaa  1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\njava97#");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11821");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder14.asTokenizer();
        java.lang.StringBuffer stringBuffer16 = strBuilder14.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(true);
        char[] charArray32 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer37.getTrimmerMatcher();
        int int42 = strBuilder22.indexOf(strMatcher40, 4);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int64 = strBuilder59.indexOf(strMatcher62, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher62);
        int int67 = strBuilder22.indexOf(strMatcher62, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder22.appendln(false);
        boolean boolean70 = strBuilder14.equals(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder22.appendln((long) 21);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(stringBuffer16);
        org.junit.Assert.assertEquals(stringBuffer16.toString(), "100.012true");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test11822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11822");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        char[] charArray8 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.reset(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', '#');
        boolean boolean16 = strTokenizer15.hasPrevious();
        int int17 = strTokenizer15.size();
        boolean boolean18 = strTokenizer15.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11823");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(stringBuffer5, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.ensureCapacity(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("#4#a4#", throwable23);
        java.io.IOException iOException26 = new java.io.IOException(throwable23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1.0f, iOException26, false, 100, strBuilder29 };
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendWithSeparators(objArray30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendln(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder34.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.insert(16, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder34.replaceFirst("4#", "zer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str64 = strTokenizer63.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer63.setQuoteChar(' ');
        java.lang.Object obj67 = strTokenizer66.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer66.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setQuoteChar('1');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("aaaaaaaaaaaaaaaaaaaaaaaa100");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setDelimiterMatcher(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder61.deleteFirst(strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strBuilder61.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test11824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11824");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        int int32 = strBuilder5.indexOf("", (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        int int37 = strBuilder35.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append("#4#a4#");
        java.lang.String str48 = strBuilder41.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.append(false);
        char[] charArray65 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("hi!");
        boolean boolean70 = strTokenizer67.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder54.appendFixedWidthPadRight((java.lang.Object) strTokenizer67, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int77 = strBuilder74.indexOf(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.appendln((int) (short) 10);
        boolean boolean84 = strBuilder54.equalsIgnoreCase(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder54.reverse();
        java.lang.StringBuffer stringBuffer86 = strBuilder85.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder41.append(stringBuffer86, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder39.append(stringBuffer86);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder5.append(stringBuffer86);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder5.appendSeparator("StrTokenizer[true\n]", ".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        java.util.stream.IntStream intStream95 = strBuilder5.codePoints();
        char[] charArray96 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder5.append(charArray96);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#4#a4#" + "'", str48, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(stringBuffer86);
        org.junit.Assert.assertEquals(stringBuffer86.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(intStream95);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test11825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11825");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append(false);
        boolean boolean31 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder9.appendln((java.lang.Object) boolean31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        int int37 = strBuilder35.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.append(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator('1', '1');
        boolean boolean43 = strBuilder41.startsWith(" e");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test11826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11826");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("zinekoTrtSeslaf ");
    }

    @Test
    public void test11827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11827");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        java.lang.String str12 = strTokenizer8.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setQuoteChar('4');
        java.lang.String str17 = strTokenizer16.getContent();
        int int18 = strTokenizer16.previousIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test11828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11828");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendln((int) (byte) 0);
        java.io.Reader reader34 = strBuilder29.asReader();
        long long36 = reader34.skip((long) 4);
        reader34.close();
        boolean boolean38 = reader34.markSupported();
        boolean boolean39 = reader34.ready();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 4L + "'", long36 == 4L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test11829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11829");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.clear();
        java.lang.String[] strArray35 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean49 = strTokenizer46.isIgnoreEmptyTokens();
        java.lang.String str50 = strTokenizer46.next();
        int int51 = strList36.indexOf((java.lang.Object) strTokenizer46);
        java.util.ListIterator<java.lang.String> strItor53 = strList36.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor54 = strList36.iterator();
        java.lang.String[] strArray58 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        char[] charArray67 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("hi!");
        boolean boolean72 = strTokenizer69.isIgnoreEmptyTokens();
        java.lang.String str73 = strTokenizer69.next();
        int int74 = strList59.indexOf((java.lang.Object) strTokenizer69);
        boolean boolean75 = strList36.addAll((java.util.Collection<java.lang.String>) strList59);
        strList59.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder31.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln("StrTokenizer[1.0java.io.IOExceptionfalse1001.0]");
        int int83 = strBuilder78.indexOf("#############", 1);
        char[] charArray90 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray90);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder78.appendln(charArray90, 3, 77);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 77");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#4#a4#" + "'", str50, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#4#a4#" + "'", str73, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#, 4, #, a, 4, #]");
    }

    @Test
    public void test11830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11830");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.appendPadding((int) '#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator('4', 11);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test11831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11831");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendln(10L);
        int int46 = strBuilder40.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder35.appendln((java.lang.Object) strBuilder51);
        int int54 = strBuilder35.lastIndexOf("StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strBuilder35.asTokenizer();
        boolean boolean56 = strTokenizer55.isEmptyTokenAsNull();
        int int57 = strTokenizer55.size();
        java.util.List<java.lang.String> strList58 = strTokenizer55.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        char[] charArray70 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray71 = strBuilder61.getChars(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder61.appendln("java.io.IOException: ");
        char[] charArray80 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder73.replaceFirst(strMatcher84, "#4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer55.setQuoteMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer55.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer55.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
    }

    @Test
    public void test11832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11832");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        int int29 = strBuilder26.indexOf('a', 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendPadding((int) (byte) 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator(' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.clear();
        java.lang.Throwable throwable43 = null;
        java.io.IOException iOException44 = new java.io.IOException("", throwable43);
        java.io.IOException iOException45 = new java.io.IOException("#4#a4#", throwable43);
        java.io.IOException iOException46 = new java.io.IOException(throwable43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1.0f, iOException46, false, 100, strBuilder49 };
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.appendWithSeparators(objArray50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendln(10L);
        int int68 = strBuilder62.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder59.appendln(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder59.deleteAll("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder59.insert(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder32.append(strBuilder59);
        java.io.IOException iOException80 = new java.io.IOException("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendFixedWidthPadRight((java.lang.Object) iOException80, 4, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.append((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder78.deleteFirst("in1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test11833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11833");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.util.Spliterator<java.lang.String> strSpliterator46 = strList4.spliterator();
        int int47 = strList4.size();
        strList4.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        int int60 = strMatcher49.isMatch(charArray56, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ".0j");
        boolean boolean63 = strTokenizer62.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer62.getIgnoredMatcher();
        java.util.List<java.lang.String> strList65 = strTokenizer62.getTokenList();
        boolean boolean66 = strList4.containsAll((java.util.Collection<java.lang.String>) strList65);
        java.util.Spliterator<java.lang.String> strSpliterator67 = strList65.spliterator();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strSpliterator67);
    }

    @Test
    public void test11834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11834");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.insert(0, 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (byte) 10, (double) 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.deleteAll(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.append((double) 59);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        boolean boolean43 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList44 = strTokenizer40.getTokenList();
        java.util.List<java.lang.String> strList45 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strTokenizer40, 100, '1');
        boolean boolean50 = strTokenizer40.hasPrevious();
        java.lang.Object obj51 = strTokenizer40.clone();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11835");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "1111111111");
        java.lang.String str3 = strTokenizer2.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = strTokenizer2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test11836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11836");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("0\nfalse32.0", " a112\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test11837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11837");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.lang.String str20 = strTokenizer14.toString();
        java.lang.String str21 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer14.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset("eptionfalse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer23.setEmptyTokenAsNull(true);
        java.lang.String str28 = strTokenizer23.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer23.reset("59.052.0");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str20, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str21, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "eptionfalse1001.0\n35.0\n1false0\n\n" + "'", str28, "eptionfalse1001.0\n35.0\n1false0\n\n");
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test11838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11838");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        int int9 = strBuilder3.lastIndexOf("1false0\n", 59);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        int int22 = strTokenizer18.nextIndex();
        int int23 = strTokenizer18.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer18.setIgnoreEmptyTokens(false);
        int int26 = strTokenizer18.previousIndex();
        java.lang.String str27 = strTokenizer18.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder46.replace(strMatcher51, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int58 = strBuilder40.lastIndexOf(strMatcher51, (int) (short) 100);
        int int60 = strBuilder35.lastIndexOf(strMatcher51, 6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer28.setDelimiterMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder3.deleteFirst(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceAll('1', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.setNewLineText("0.012true104444444444444444444444444444444444444444444444");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst("1false0\n\n#", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.appendNewLine();
        java.util.stream.IntStream intStream72 = strBuilder71.codePoints();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#4#a4#" + "'", str27, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(intStream72);
    }

    @Test
    public void test11839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11839");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.setNewLineText("0\nfalse32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder8.appendFixedWidthPadRight(6, 17, '0');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strBuilder8.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer20.add("0.012true104444444444444444444444444444444444444444444444  \n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test11840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11840");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        int int14 = strBuilder12.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendSeparator('.', 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        java.lang.String str23 = strBuilder22.getNullText();
        char[] charArray25 = new char[] { 'a' };
        char[] charArray26 = strBuilder22.getChars(charArray25);
        char[] charArray31 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray32 = strBuilder22.getChars(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray32);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer33.reset(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, '#', '4');
        char[] charArray54 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        int int65 = strBuilder55.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer47.reset(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "java.io.IOException: 10\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "StrTokenizer[1.0j");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray54);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder19.append(charArray54, (int) (short) 1, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 14");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher72);
    }

    @Test
    public void test11841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11841");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean42 = strBuilder36.startsWith("java.io.IOException: ");
        int int45 = strBuilder36.indexOf('4', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.insert(5, (float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder36.insert(1, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.replace(0, 10, "false");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence58 = strBuilder55.subSequence(48, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -38");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test11842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11842");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.deleteAll(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.append((float) (byte) 0);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int57 = strBuilder52.indexOf(strMatcher55, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder29.replaceFirst(strMatcher55, "100.0false\n");
        int int62 = strBuilder28.lastIndexOf(strMatcher55, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder18.replaceAll(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterChar(' ');
        boolean boolean69 = strTokenizer68.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer68.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder18.deleteAll(strMatcher70);
        java.lang.String str72 = strBuilder71.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.deleteAll(" falseStrTokeniz");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteAll('I');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.deleteFirst('c');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test11843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11843");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.clear();
        java.lang.String str51 = strBuilder49.rightString((int) (short) -1);
        java.lang.String str53 = strBuilder49.rightString((int) (short) 100);
        int int55 = strBuilder49.indexOf('#');
        boolean boolean56 = strList26.contains((java.lang.Object) int55);
        strList26.clear();
        strList26.clear();
        int int59 = strList26.size();
        boolean boolean61 = strList26.add("");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test11844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11844");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasPrevious();
        boolean boolean12 = strTokenizer8.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test11845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11845");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        char[] charArray27 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray28 = strBuilder18.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        strBuilder13.getChars((int) (byte) 0, 0, charArray27, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        java.io.IOException iOException42 = new java.io.IOException("#4#a4#", throwable40);
        java.io.IOException iOException43 = new java.io.IOException(throwable40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1.0f, iOException43, false, 100, strBuilder46 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendWithSeparators(objArray47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        java.lang.String str55 = strBuilder53.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.append((java.lang.CharSequence) str55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder13.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        java.lang.String str68 = strBuilder65.substring((int) (short) 0, (int) (short) 100);
        int int71 = strBuilder65.lastIndexOf("1false0\n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.append(strBuilder65);
        boolean boolean74 = strBuilder61.contains(" falsezinekoTrtSeslaf \n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test11846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11846");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", '\n');
    }

    @Test
    public void test11847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11847");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: ", '4');
        boolean boolean3 = strTokenizer2.hasNext();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test11848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11848");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.write("#4#a4#", 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        writer9.write(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray57 = strBuilder49.getChars(charArray55);
        writer9.write(charArray55);
        writer9.write("java.");
        writer9.close();
        java.io.Writer writer63 = writer9.append('I');
        java.io.Writer writer65 = writer63.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder69.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln((long) '#');
        java.util.stream.IntStream intStream73 = strBuilder70.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder70.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln((double) (byte) -1);
        java.io.Writer writer80 = writer65.append((java.lang.CharSequence) strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder83.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.reverse();
        boolean boolean90 = strBuilder84.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder84.appendln(48);
        char[] charArray93 = strBuilder92.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray93);
        java.util.List<java.lang.String> strList95 = strTokenizer94.getTokenList();
        java.lang.Object[] objArray96 = strList95.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder77.appendWithSeparators(objArray96, "1false0\nzinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertNotNull(writer65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(intStream73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(writer80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "eslf48\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "eslf48\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[e, s, l, f, 4, 8, \n]");
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[eslf48]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[eslf48]");
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test11849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11849");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNullText("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        java.lang.Object obj8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(obj8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str11 = strBuilder10.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.deleteAll(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendln((java.lang.Object) strBuilder12);
        java.util.Iterator<java.lang.String> strItor18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.appendAll(strItor18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str22 = strTokenizer21.getContent();
        char[] charArray28 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer21.reset(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append("#4#a4#");
        java.lang.String str40 = strBuilder33.leftString((int) (short) 100);
        int int42 = strBuilder33.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder33.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder33.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int61 = strBuilder58.lastIndexOf(strMatcher59, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder33.replaceFirst(strMatcher59, "#4#a4#");
        char[] charArray70 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        int int75 = strBuilder63.lastIndexOf(strMatcher73, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher73);
        int int78 = strBuilder19.lastIndexOf(strMatcher73, (int) (short) 0);
        int int79 = strBuilder7.lastIndexOf(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder7.setCharAt(13, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder7.appendSeparator("100.0\na", 86);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.replace((int) (short) -1, 74, "1false01");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 15 + "'", int75 == 15);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 26 + "'", int79 == 26);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test11850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11850");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(stringBuffer5, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.ensureCapacity(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append((double) 'a');
        java.io.Reader reader18 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.setNullText("4#");
        int int23 = strBuilder17.indexOf('I', 46);
        boolean boolean25 = strBuilder17.startsWith("1111111111");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test11851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11851");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setQuoteChar('#');
        java.util.List<java.lang.String> strList8 = strTokenizer7.getTokenList();
        java.lang.String str9 = strTokenizer7.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test11852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11852");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream8 = strList7.parallelStream();
        boolean boolean9 = strList7.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream10 = strList7.parallelStream();
        java.lang.Object[] objArray11 = strList7.toArray();
        java.lang.String str14 = strList7.set((int) '\000', "1false0\n1.0");
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strStream10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#4#a4#]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
    }

    @Test
    public void test11853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11853");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendSeparator(".IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteCharAt(11);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append("1.0java.");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendSeparator("o.IOExceptio");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test11854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11854");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int14 = strBuilder11.lastIndexOf(strMatcher12, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append("10");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        java.lang.String str20 = strBuilder19.getNullText();
        char[] charArray22 = new char[] { 'a' };
        char[] charArray23 = strBuilder19.getChars(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendPadding((int) (byte) 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder19.replaceFirst('a', '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.replaceFirst("1.0java.io.IOExceptionfalse100", "001eslafnoitpecxEOI.oi.avaj0.11111111111111111111111");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.reverse();
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterString("hi!");
        boolean boolean48 = strTokenizer45.isIgnoreEmptyTokens();
        int int49 = strTokenizer45.nextIndex();
        int int50 = strTokenizer45.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer45.setIgnoreEmptyTokens(false);
        int int53 = strTokenizer45.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer45.reset("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strBuilder56.indexOf(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int71 = strBuilder68.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.deleteFirst(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int76 = strBuilder73.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int87 = strBuilder84.lastIndexOf(strMatcher85, (int) (short) -1);
        int int88 = strBuilder72.indexOf(strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer55.setTrimmerMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer55.setIgnoredMatcher(strMatcher90);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer91.getIgnoredMatcher();
        int int93 = strBuilder36.indexOf(strMatcher92);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder11.replaceAll(strMatcher92, "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE\n1");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test11855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11855");
        org.apache.commons.lang3.text.StrMatcher strMatcher0 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        java.lang.String str4 = strBuilder3.getNullText();
        char[] charArray6 = new char[] { 'a' };
        char[] charArray7 = strBuilder3.getChars(charArray6);
        int int11 = strMatcher0.isMatch(charArray7, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, '#', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray7);
        org.junit.Assert.assertNotNull(strMatcher0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strMatcher15);
    }

    @Test
    public void test11856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11856");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.append(false);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("hi!");
        boolean boolean28 = strTokenizer25.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) strTokenizer25, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendln((int) (short) 10);
        boolean boolean42 = strBuilder12.equalsIgnoreCase(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.append((java.lang.CharSequence) strBuilder12);
        int int45 = strBuilder3.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(" falseStrTokeniz");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder3.replaceFirst(strMatcher47, "1111111111");
        java.io.Reader reader50 = strBuilder3.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder3.setLength(86);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 32 + "'", int45 == 32);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test11857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11857");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) ' ');
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        char[] charArray14 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("hi!");
        boolean boolean19 = strTokenizer16.isIgnoreEmptyTokens();
        java.lang.String str20 = strTokenizer16.next();
        int int21 = strList6.indexOf((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor23 = strList6.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor24 = strList6.iterator();
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        boolean boolean38 = strList6.equals((java.lang.Object) strTokenizer33);
        java.lang.Object[] objArray39 = strList6.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder1.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList6, "1false0\nfalse");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.Object obj44 = strTokenizer43.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset();
        boolean boolean46 = strTokenizer43.hasNext();
        java.util.List<java.lang.String> strList47 = strTokenizer43.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendPadding(47, '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.appendFixedWidthPadLeft(53, 40, '.');
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#4#a4#" + "'", str20, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test11858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11858");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln(10L);
        int int18 = strBuilder12.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append("#4#a4#");
        java.lang.String str29 = strBuilder22.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append(false);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("hi!");
        boolean boolean51 = strTokenizer48.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strTokenizer48, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendln((int) (short) 10);
        boolean boolean65 = strBuilder35.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder35.reverse();
        java.lang.StringBuffer stringBuffer67 = strBuilder66.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder22.append(stringBuffer67, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder21.append(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder6.append((java.lang.Object) stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.deleteAll(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder72.append((java.lang.CharSequence) strBuilder81);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.replace(2, 12, "java.io.IOException:");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder82.appendln((long) 47);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#4#a4#" + "'", str29, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(stringBuffer67);
        org.junit.Assert.assertEquals(stringBuffer67.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test11859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11859");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int12 = strBuilder9.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.append(false);
        boolean boolean20 = strBuilder18.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendln(10L);
        int int29 = strBuilder23.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int36 = strBuilder33.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append("#4#a4#");
        java.lang.String str40 = strBuilder33.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int44 = strBuilder41.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.append(false);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("hi!");
        boolean boolean62 = strTokenizer59.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strTokenizer59, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int69 = strBuilder66.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.appendln((int) (short) 10);
        boolean boolean76 = strBuilder46.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder46.reverse();
        java.lang.StringBuffer stringBuffer78 = strBuilder77.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder33.append(stringBuffer78, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder32.append(stringBuffer78);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder18.appendln(stringBuffer78);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.setLength(1);
        boolean boolean87 = strBuilder83.endsWith(".0jav");
        char[] charArray88 = strBuilder83.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer89.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer90.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder8.replace(strMatcher91, "1false0\nzinekoTrtSeslaf ", 93, 34, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(stringBuffer78);
        org.junit.Assert.assertEquals(stringBuffer78.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[ ]");
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
    }

    @Test
    public void test11860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11860");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength(0);
        char[] charArray21 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterString("hi!");
        boolean boolean26 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList27 = strTokenizer23.getTokenList();
        boolean boolean28 = strTokenizer23.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder12.appendln((java.lang.Object) strTokenizer23);
        int int30 = strTokenizer23.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test11861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11861");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer18.setQuoteChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        java.lang.String str30 = strBuilder29.getNullText();
        char[] charArray32 = new char[] { 'a' };
        char[] charArray33 = strBuilder29.getChars(charArray32);
        char[] charArray38 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray39 = strBuilder29.getChars(charArray38);
        java.io.Reader reader40 = strBuilder29.asReader();
        reader40.reset();
        boolean boolean42 = reader40.ready();
        reader40.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        java.lang.String str47 = strBuilder46.getNullText();
        char[] charArray49 = new char[] { 'a' };
        char[] charArray50 = strBuilder46.getChars(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '#');
        int int57 = reader40.read(charArray49, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer18.reset(charArray49);
        java.util.List<java.lang.String> strList59 = strTokenizer58.getTokenList();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strList59);
    }

    @Test
    public void test11862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11862");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        java.lang.String str22 = strBuilder20.leftString((int) 'a');
        java.lang.String str24 = strBuilder20.leftString(100);
        java.io.Writer writer25 = strBuilder20.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.Throwable throwable33 = null;
        java.io.IOException iOException34 = new java.io.IOException("", throwable33);
        java.io.IOException iOException35 = new java.io.IOException("#4#a4#", throwable33);
        java.io.IOException iOException36 = new java.io.IOException(throwable33);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1.0f, iOException36, false, 100, strBuilder39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendWithSeparators(objArray40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendFixedWidthPadLeft(1, 32, ' ');
        boolean boolean56 = strBuilder20.equalsIgnoreCase(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.replace(26, 66, " false");
        java.lang.String str62 = strBuilder55.substring(0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str22, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1.0java.io.IOExceptionfalse1001.0\n35.0\n" + "'", str24, "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(writer25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1.0java.io.IOExceptionfals false        1" + "'", str62, "1.0java.io.IOExceptionfals false        1");
    }

    @Test
    public void test11863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11863");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(65);
        java.lang.String str2 = strBuilder1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
    }

    @Test
    public void test11864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11864");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int23 = strBuilder20.lastIndexOf(strMatcher21, (int) (short) 10);
        int int25 = strBuilder4.indexOf(strMatcher21, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder4.appendSeparator("a", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder4.append((long) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder4.appendPadding(0, ' ');
        int int34 = strBuilder33.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.reset();
        boolean boolean40 = strTokenizer36.hasPrevious();
        boolean boolean41 = strTokenizer36.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer36.reset(" 10\n");
        java.lang.String[] strArray44 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder33.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test11865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11865");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.write("false");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.deleteFirst(strMatcher42);
        char[] charArray45 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.replaceAll('I', '4');
        java.io.Writer writer51 = writer9.append((java.lang.CharSequence) strBuilder50);
        java.io.Writer writer53 = writer9.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: StrTokenizer[#4#a4#]");
        java.io.Writer writer56 = writer53.append((java.lang.CharSequence) "java.io.IOException: StrTokenizer[#4#a4#]");
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int72 = strBuilder69.indexOf(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int78 = strBuilder75.indexOf(strMatcher77);
        int int79 = strBuilder69.indexOf(strMatcher77);
        char[] charArray86 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, strMatcher90);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer91.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher77, strMatcher92);
        // The following exception was thrown during execution in test generation
        try {
            writer53.write(charArray63, (int) '\000', 91);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 91");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 10\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 10\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 1, 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(writer51);
        org.junit.Assert.assertNotNull(writer53);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strMatcher92);
    }

    @Test
    public void test11866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11866");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.lang.String str47 = strList26.get(1);
        strList26.add(1, "1.0java.io.IOExceptionfalse1001.0\n35.0\n52.02");
        java.util.stream.Stream<java.lang.String> strStream51 = strList26.stream();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strStream51);
    }

    @Test
    public void test11867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11867");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean29 = strBuilder27.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        char[] charArray40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln(charArray40);
        boolean boolean42 = strBuilder39.isEmpty();
        java.lang.String str44 = strBuilder39.rightString((int) 'a');
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.replaceAll(strMatcher57, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder31.appendln((java.lang.Object) strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder31.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln((double) 44);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "10\n\n" + "'", str44, "10\n\n");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test11868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11868");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.append((double) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendSeparator("1a10\n104aa", " a10\n");
        java.lang.String str14 = strBuilder13.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test11869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11869");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[100.0\n]", strMatcher1);
        java.lang.String str3 = strTokenizer2.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setQuoteChar('a');
        java.lang.String str6 = strTokenizer5.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "StrTokenizer[100.0\n]" + "'", str3, "StrTokenizer[100.0\n]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[100.0\n]" + "'", str6, "StrTokenizer[100.0\n]");
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test11870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11870");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList18);
        java.lang.Object[] objArray20 = strList18.toArray();
        boolean boolean21 = strList18.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator22 = strList18.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int37 = strBuilder34.lastIndexOf(strMatcher35, (int) (short) -1);
        java.io.Reader reader38 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendNull();
        int int41 = strBuilder39.lastIndexOf('4');
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        java.lang.String str53 = strTokenizer52.nextToken();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        java.lang.String str58 = strBuilder57.getNullText();
        char[] charArray60 = new char[] { 'a' };
        char[] charArray61 = strBuilder57.getChars(charArray60);
        char[] charArray66 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray67 = strBuilder57.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray67);
        int int69 = strList54.indexOf((java.lang.Object) charArray67);
        strList54.clear();
        java.util.ListIterator<java.lang.String> strItor71 = strList54.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder39.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList54, "1");
        java.util.ListIterator<java.lang.String> strItor74 = strList54.listIterator();
        boolean boolean75 = strList18.removeAll((java.util.Collection<java.lang.String>) strList54);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#4#a4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#4#a4#]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSpliterator22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test11871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11871");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("aa#4\n                                                                                                 ");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("hi!");
        boolean boolean13 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.reset();
        java.util.List<java.lang.String> strList15 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln(10L);
        int int25 = strBuilder19.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(true);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        char[] charArray43 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterString("hi!");
        boolean boolean48 = strTokenizer45.isIgnoreEmptyTokens();
        java.lang.String str49 = strTokenizer45.next();
        int int50 = strList35.indexOf((java.lang.Object) strTokenizer45);
        java.util.stream.Stream<java.lang.String> strStream51 = strList35.stream();
        strList35.add((int) (short) 0, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder28.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList35, "\n");
        boolean boolean57 = strList15.addAll((int) '\000', (java.util.Collection<java.lang.String>) strList35);
        strList15.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList15);
        java.lang.String str61 = strBuilder1.rightString(55);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "#4#a4#" + "'", str49, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "                                                       " + "'", str61, "                                                       ");
    }

    @Test
    public void test11872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11872");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        java.lang.String str6 = strBuilder5.getNewLineText();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        boolean boolean24 = strTokenizer21.isIgnoreEmptyTokens();
        java.lang.String str25 = strTokenizer21.next();
        int int26 = strList11.indexOf((java.lang.Object) strTokenizer21);
        java.util.ListIterator<java.lang.String> strItor28 = strList11.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor29 = strList11.iterator();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        char[] charArray42 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("hi!");
        boolean boolean47 = strTokenizer44.isIgnoreEmptyTokens();
        java.lang.String str48 = strTokenizer44.next();
        int int49 = strList34.indexOf((java.lang.Object) strTokenizer44);
        boolean boolean50 = strList11.addAll((java.util.Collection<java.lang.String>) strList34);
        java.util.ListIterator<java.lang.String> strItor51 = strList34.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        int int62 = strBuilder52.indexOf(strMatcher60);
        int int63 = strList34.indexOf((java.lang.Object) strBuilder52);
        int int64 = strList34.size();
        java.lang.Object[] objArray65 = strList34.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder5.appendAll(objArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.insert(0, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.appendFixedWidthPadRight((int) (byte) 100, 70, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.insert((int) (byte) 10, (long) 46);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#4#a4#" + "'", str25, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#4#a4#" + "'", str48, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[, , ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test11873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11873");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str5 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int17 = strMatcher6.isMatch(charArray13, 0, 0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.replaceAll(strMatcher6, "java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.setTrimmerMatcher(strMatcher6);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int42 = strBuilder37.indexOf(strMatcher40, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer3.setTrimmerMatcher(strMatcher40);
        java.lang.Class<?> wildcardClass45 = strTokenizer44.getClass();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test11874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11874");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(0.0f);
        int int11 = strBuilder9.indexOf("59.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator("StrTokeniz");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test11875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11875");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        java.lang.String str19 = strBuilder18.getNullText();
        char[] charArray21 = new char[] { 'a' };
        char[] charArray22 = strBuilder18.getChars(charArray21);
        char[] charArray27 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray28 = strBuilder18.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        strBuilder13.getChars((int) (byte) 0, 0, charArray27, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        java.lang.Throwable throwable40 = null;
        java.io.IOException iOException41 = new java.io.IOException("", throwable40);
        java.io.IOException iOException42 = new java.io.IOException("#4#a4#", throwable40);
        java.io.IOException iOException43 = new java.io.IOException(throwable40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1.0f, iOException43, false, 100, strBuilder46 };
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendWithSeparators(objArray47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        java.lang.String str55 = strBuilder53.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.append((java.lang.CharSequence) str55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder13.append((java.lang.CharSequence) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNull();
        java.lang.String str68 = strBuilder65.substring((int) (short) 0, (int) (short) 100);
        int int71 = strBuilder65.lastIndexOf("1false0\n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.append(strBuilder65);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceAll('3', 'e');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.insert(66, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 66");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test11876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11876");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        char[] charArray9 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendln(charArray9);
        int int14 = strBuilder11.indexOf('4', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadLeft((int) (byte) 1, 32, '#');
        java.lang.String str19 = strBuilder18.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("10\n\n", "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendSeparator(".0jva.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendSeparator("OExceptionfalse", 22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean34 = strTokenizer33.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder25.appendAll((java.lang.Iterable<java.lang.String>) strList35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((double) (-1L));
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test11877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11877");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        int int17 = strBuilder14.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder20.appendSeparator('4', 0);
        boolean boolean34 = strBuilder14.equals(strBuilder33);
        int int35 = strBuilder33.size();
        java.util.stream.IntStream intStream36 = strBuilder33.codePoints();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 6 + "'", int35 == 6);
        org.junit.Assert.assertNotNull(intStream36);
    }

    @Test
    public void test11878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11878");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.ensureCapacity((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((long) 1);
        int int32 = strBuilder27.lastIndexOf("java.io.IOException: StrTokenizer[not tokenized yet]", 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.replaceFirst("#4#a4#java.io.IOException: zinekoTrtSeslaf \n", "ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        int int36 = strBuilder27.length();
        int int37 = strBuilder27.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
    }

    @Test
    public void test11879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11879");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException("hi!", (java.lang.Throwable) iOException5);
        java.lang.Throwable throwable8 = null;
        java.io.IOException iOException9 = new java.io.IOException("", throwable8);
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException9);
        iOException5.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException("1.0java.io.IOExceptionfalse1001.0\n35.0\n10.0\n", (java.lang.Throwable) iOException5);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendFixedWidthPadRight((java.lang.Object) iOException13, 20, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.appendNewLine();
        java.lang.StringBuffer stringBuffer28 = strBuilder27.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder16.appendln(stringBuffer28, 14, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(stringBuffer28);
        org.junit.Assert.assertEquals(stringBuffer28.toString(), "100.0\n");
    }

    @Test
    public void test11880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11880");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln("4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int12 = strBuilder9.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln(true);
        int int20 = strBuilder14.lastIndexOf("", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendSeparator("0java.io.IOExceptionfalse100", 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.ensureCapacity(55);
        java.lang.StringBuffer stringBuffer30 = strBuilder29.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder8.append(stringBuffer30, 48, 42);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(stringBuffer30);
        org.junit.Assert.assertEquals(stringBuffer30.toString(), "true\n0javaioIOExceptionfalse100true\n");
    }

    @Test
    public void test11881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11881");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "java.io.IOException: StrTokenizer[not tokenized yet]");
        java.lang.String str30 = strTokenizer29.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setEmptyTokenAsNull(false);
        int int33 = strTokenizer29.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#4#a4#" + "'", str30, "#4#a4#");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test11882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11882");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        java.util.Iterator<java.lang.String> strItor8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendAll(strItor8);
        java.util.stream.IntStream intStream10 = strBuilder0.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendln(59);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("java.io.IOException: 1false0\n1.0");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test11883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11883");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((long) 2);
        char[] charArray30 = strBuilder25.toCharArray(31, 65);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.ensureCapacity((int) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder25.append((float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(".oi.ava0.0j0.1");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), ".0\n35.0\n52.02");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), ".0\n35.0\n52.02");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[., 0, \n, 3, 5, ., 0, \n, 5, 2, ., 0, 2]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test11884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11884");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '0', 'a');
        boolean boolean4 = strTokenizer3.hasNext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test11885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11885");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append(100L);
        int int17 = strBuilder14.lastIndexOf('a', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.clear();
        java.lang.Throwable throwable25 = null;
        java.io.IOException iOException26 = new java.io.IOException("", throwable25);
        java.io.IOException iOException27 = new java.io.IOException("#4#a4#", throwable25);
        java.io.IOException iOException28 = new java.io.IOException(throwable25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1.0f, iOException28, false, 100, strBuilder31 };
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendWithSeparators(objArray32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.deleteAll('a');
        boolean boolean46 = strBuilder45.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("hi!");
        java.lang.String str62 = strBuilder61.getNullText();
        char[] charArray64 = new char[] { 'a' };
        char[] charArray65 = strBuilder61.getChars(charArray64);
        char[] charArray70 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray71 = strBuilder61.getChars(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder52.appendln(charArray70, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder45.appendln(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder14.appendln(charArray70);
        java.lang.Object obj79 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder14.appendFixedWidthPadRight(obj79, 0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append((long) 49);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder87.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder88.setNewLineText("1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder82.appendln((java.lang.Object) strBuilder92);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = strBuilder82.substring(112, 38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test11886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11886");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        int int24 = strBuilder18.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.append((java.lang.CharSequence) strBuilder39);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setDelimiterString("hi!");
        boolean boolean58 = strTokenizer55.isIgnoreEmptyTokens();
        java.lang.String str59 = strTokenizer55.next();
        int int60 = strList45.indexOf((java.lang.Object) strTokenizer55);
        java.lang.String str61 = strTokenizer55.toString();
        java.lang.String str62 = strTokenizer55.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer55.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset("eptionfalse1001.0\n35.0\n1false0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder40.append((java.lang.Object) "eptionfalse1001.0\n35.0\n1false0\n\n");
        int int68 = strBuilder40.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "#4#a4#" + "'", str59, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str61, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str62, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 82 + "'", int68 == 82);
    }

    @Test
    public void test11887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11887");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        char[] charArray34 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("hi!");
        boolean boolean39 = strTokenizer36.isIgnoreEmptyTokens();
        java.lang.String str40 = strTokenizer36.next();
        int int41 = strList26.indexOf((java.lang.Object) strTokenizer36);
        java.util.ListIterator<java.lang.String> strItor43 = strList26.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor44 = strList26.iterator();
        boolean boolean45 = strList4.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.util.Spliterator<java.lang.String> strSpliterator46 = strList4.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = strList4.set((int) (short) 1, "eslaf");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strSpliterator46);
    }

    @Test
    public void test11888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11888");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        int int4 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendln(stringBuffer5, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.ensureCapacity(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.append((double) 'a');
        int int18 = strBuilder13.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.append(46);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 6 + "'", int18 == 6);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test11889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11889");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("1.0java.io.IOExceptionfalse1001.0\n35.0\ntrueaaaaaaaaaa 80\n", 'e');
    }

    @Test
    public void test11890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11890");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln("2");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test11891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11891");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.append(false);
        boolean boolean33 = strBuilder31.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.clear();
        java.lang.Throwable throwable41 = null;
        java.io.IOException iOException42 = new java.io.IOException("", throwable41);
        java.io.IOException iOException43 = new java.io.IOException("#4#a4#", throwable41);
        java.io.IOException iOException44 = new java.io.IOException(throwable41);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 1.0f, iOException44, false, 100, strBuilder47 };
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder37.appendWithSeparators(objArray48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendln(10L);
        int int66 = strBuilder60.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder57.appendln(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        boolean boolean76 = strBuilder70.startsWith("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int80 = strBuilder77.indexOf(strMatcher79);
        char[] charArray87 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder77.appendAll((java.util.Iterator<java.lang.String>) strTokenizer89);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        int int93 = strBuilder90.indexOf(strMatcher92);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder70.deleteFirst(strMatcher92);
        int int95 = strBuilder31.indexOf(strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer21.setIgnoredMatcher(strMatcher92);
        boolean boolean97 = strTokenizer96.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer96.set("0\n1false0\n\n#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test11892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11892");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        char[] charArray16 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray17 = strBuilder7.getChars(charArray16);
        java.io.Reader reader18 = strBuilder7.asReader();
        reader18.mark(10);
        reader18.close();
        boolean boolean22 = reader18.markSupported();
        int int23 = reader18.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        java.lang.String str27 = strBuilder26.getNullText();
        char[] charArray29 = new char[] { 'a' };
        char[] charArray30 = strBuilder26.getChars(charArray29);
        char[] charArray35 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray36 = strBuilder26.getChars(charArray35);
        java.io.Reader reader37 = strBuilder26.asReader();
        long long39 = reader37.skip((long) 59);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        int int62 = strBuilder52.indexOf(strMatcher60);
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher60, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray46);
        int int78 = reader37.read(charArray46);
        int int79 = reader18.read(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer4.reset(charArray46);
        int int81 = strTokenizer4.nextIndex();
        java.util.List<java.lang.String> strList82 = strTokenizer4.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder85.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.insert(0, (double) (byte) 100);
        java.io.Reader reader90 = strBuilder89.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.appendln(false);
        int int93 = strList82.lastIndexOf((java.lang.Object) false);
        java.util.stream.Stream<java.lang.String> strStream94 = strList82.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = strList82.remove((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(reader90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(strStream94);
    }

    @Test
    public void test11893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11893");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert((int) '3', "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        char[] charArray25 = strBuilder15.getChars(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.clear();
        java.lang.Throwable throwable33 = null;
        java.io.IOException iOException34 = new java.io.IOException("", throwable33);
        java.io.IOException iOException35 = new java.io.IOException("#4#a4#", throwable33);
        java.io.IOException iOException36 = new java.io.IOException(throwable33);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1.0f, iOException36, false, 100, strBuilder39 };
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendWithSeparators(objArray40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.setNewLineText("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        int int58 = strBuilder56.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        java.util.List<java.lang.String> strList61 = strTokenizer60.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder1.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList61, "2.0 ");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder1.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder1.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test11894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11894");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        int int19 = strTokenizer16.previousIndex();
        java.lang.String str20 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer16.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoredChar('#');
        boolean boolean25 = strTokenizer24.isIgnoreEmptyTokens();
        int int26 = strTokenizer24.previousIndex();
        char[] charArray33 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("hi!");
        boolean boolean38 = strTokenizer35.isIgnoreEmptyTokens();
        int int39 = strTokenizer35.nextIndex();
        int int40 = strTokenizer35.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer35.setIgnoreEmptyTokens(false);
        int int43 = strTokenizer35.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer35.reset("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int61 = strBuilder58.indexOf(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.deleteFirst(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int66 = strBuilder63.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int77 = strBuilder74.lastIndexOf(strMatcher75, (int) (short) -1);
        int int78 = strBuilder62.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer45.setTrimmerMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer45.setIgnoredMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer24.setDelimiterMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.setDelimiterChar('a');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer84);
    }

    @Test
    public void test11895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11895");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        char[] charArray13 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int22 = strBuilder19.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        int int29 = strBuilder19.indexOf(strMatcher27);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher27, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer4.setDelimiterMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer4.setIgnoreEmptyTokens(true);
        java.lang.String str47 = strTokenizer4.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer4.setIgnoredChar(' ');
        java.lang.String str50 = strTokenizer4.toString();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "StrTokenizer[]" + "'", str50, "StrTokenizer[]");
    }

    @Test
    public void test11896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11896");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.reset();
        long long16 = reader13.skip((long) (byte) -1);
        int int17 = reader13.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("hi!");
        java.lang.String str21 = strBuilder20.getNullText();
        char[] charArray23 = new char[] { 'a' };
        char[] charArray24 = strBuilder20.getChars(charArray23);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.append(stringBuffer25);
        java.io.Writer writer27 = strBuilder26.asWriter();
        writer27.write((int) (short) 1);
        writer27.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        writer27.write(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        java.lang.String str43 = strBuilder42.getNullText();
        char[] charArray45 = new char[] { 'a' };
        char[] charArray46 = strBuilder42.getChars(charArray45);
        char[] charArray51 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray52 = strBuilder42.getChars(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a', '\000');
        writer27.write(charArray52);
        int int57 = reader13.read(charArray52);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(writer27);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a, 4,  , 4]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test11897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11897");
        char[] charArray0 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a');
        int int3 = strTokenizer2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = strTokenizer2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test11898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11898");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.reset();
        java.util.List<java.lang.String> strList13 = strTokenizer8.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(10L);
        int int23 = strBuilder17.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln(true);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        java.lang.String str47 = strTokenizer43.next();
        int int48 = strList33.indexOf((java.lang.Object) strTokenizer43);
        java.util.stream.Stream<java.lang.String> strStream49 = strList33.stream();
        strList33.add((int) (short) 0, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList33, "\n");
        boolean boolean55 = strList13.addAll((int) '\000', (java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("hi!");
        java.lang.String str59 = strBuilder58.getNullText();
        char[] charArray61 = new char[] { 'a' };
        char[] charArray62 = strBuilder58.getChars(charArray61);
        char[] charArray67 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray68 = strBuilder58.getChars(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        char[] charArray76 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer69.reset(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        int int82 = strTokenizer81.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer81.getIgnoredMatcher();
        int int84 = strTokenizer81.nextIndex();
        boolean boolean85 = strList33.contains((java.lang.Object) int84);
        java.util.Iterator<java.lang.String> strItor86 = strList33.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList89 = strList33.subList(5, 95);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 95");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strItor86);
    }

    @Test
    public void test11899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11899");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.trim();
        java.lang.Object[] objArray39 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendAll(objArray39);
        char[] charArray41 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder26.append(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.append((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        java.lang.String str48 = strBuilder47.getNullText();
        char[] charArray50 = new char[] { 'a' };
        char[] charArray51 = strBuilder47.getChars(charArray50);
        char[] charArray56 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray57 = strBuilder47.getChars(charArray56);
        java.io.Reader reader58 = strBuilder47.asReader();
        reader58.mark(10);
        reader58.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.clear();
        char[] charArray71 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder64.appendln(charArray71);
        int int74 = reader58.read(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder26.appendln(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray71);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strTokenizer82);
    }

    @Test
    public void test11900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11900");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst('#');
        java.lang.String str22 = strBuilder21.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.append(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.insert(55, "0\nzinekoTrtSeslaf ");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 55");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + " " + "'", str22, " ");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test11901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11901");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder2.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int46 = strBuilder43.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        java.lang.String str58 = strBuilder57.getNullText();
        char[] charArray60 = new char[] { 'a' };
        char[] charArray61 = strBuilder57.getChars(charArray60);
        char[] charArray66 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray67 = strBuilder57.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder48.appendln(charArray66, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder48.appendln((long) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteAll('3');
        boolean boolean77 = strBuilder42.equals((java.lang.Object) strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test11902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11902");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int10 = strBuilder7.indexOf(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.append("#4#a4#");
        java.lang.String str14 = strBuilder7.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.append(false);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strTokenizer33, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int43 = strBuilder40.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln((int) (short) 10);
        boolean boolean50 = strBuilder20.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.reverse();
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder7.append(stringBuffer52, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder0.append(stringBuffer52);
        int int59 = strBuilder0.indexOf("StrTokenizer[not tokenized yet]", (int) (short) -1);
        boolean boolean61 = strBuilder0.contains("1.0java.io.IOEx");
        java.io.Reader reader62 = strBuilder0.asReader();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#4#a4#" + "'", str14, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(reader62);
    }

    @Test
    public void test11903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11903");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        java.util.stream.IntStream intStream16 = strBuilder2.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder2.deleteAll('a');
        java.lang.String[] strArray22 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        char[] charArray31 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("hi!");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        java.lang.String str37 = strTokenizer33.next();
        int int38 = strList23.indexOf((java.lang.Object) strTokenizer33);
        java.util.ListIterator<java.lang.String> strItor40 = strList23.listIterator((int) (byte) 0);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setDelimiterString("hi!");
        boolean boolean58 = strTokenizer55.isIgnoreEmptyTokens();
        java.lang.String str59 = strTokenizer55.next();
        int int60 = strList45.indexOf((java.lang.Object) strTokenizer55);
        java.util.ListIterator<java.lang.String> strItor62 = strList45.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor63 = strList45.iterator();
        boolean boolean64 = strList23.removeAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean65 = strBuilder18.equals((java.lang.Object) strList23);
        int int66 = strBuilder18.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#4#a4#" + "'", str37, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "#4#a4#" + "'", str59, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test11904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11904");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        java.lang.Throwable throwable27 = null;
        java.io.IOException iOException28 = new java.io.IOException("", throwable27);
        java.io.IOException iOException29 = new java.io.IOException("#4#a4#", throwable27);
        java.io.IOException iOException30 = new java.io.IOException(throwable27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1.0f, iOException30, false, 100, strBuilder33 };
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendWithSeparators(objArray34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.setLength((int) ' ');
        int int50 = strList4.lastIndexOf((java.lang.Object) strBuilder38);
        char[] charArray57 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("hi!");
        java.lang.String str62 = strTokenizer61.nextToken();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        boolean boolean65 = strList63.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str68 = strTokenizer67.getContent();
        boolean boolean69 = strList63.equals((java.lang.Object) strTokenizer67);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean71 = strList63.equals((java.lang.Object) strMatcher70);
        java.util.stream.Stream<java.lang.String> strStream72 = strList63.parallelStream();
        boolean boolean73 = strList4.removeAll((java.util.Collection<java.lang.String>) strList63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean77 = strTokenizer76.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList78 = strTokenizer76.getTokenList();
        int int79 = strList78.size();
        boolean boolean80 = strList4.containsAll((java.util.Collection<java.lang.String>) strList78);
        boolean boolean81 = strList78.isEmpty();
        boolean boolean83 = strList78.add("aa4");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#4#a4#" + "'", str62, "#4#a4#");
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test11905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11905");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.deleteAll(strMatcher30);
        boolean boolean32 = strBuilder5.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder5.appendNull();
        java.lang.StringBuffer stringBuffer34 = strBuilder33.toStringBuffer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.reset();
        boolean boolean40 = strTokenizer39.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder33.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, " #4a#4#0.1-0.0");
        int int44 = strTokenizer39.previousIndex();
        boolean boolean45 = strTokenizer39.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(stringBuffer34);
        org.junit.Assert.assertEquals(stringBuffer34.toString(), " 10\n\n");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test11906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11906");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[1.");
        char[] charArray2 = strBuilder1.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append(strBuilder3);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "StrTokenizer[1.");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "StrTokenizer[1.");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[S, t, r, T, o, k, e, n, i, z, e, r, [, 1, .]");
        org.junit.Assert.assertNotNull(strBuilder4);
    }

    @Test
    public void test11907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11907");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        char[] charArray24 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        int int35 = strBuilder25.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder16.replace(strMatcher33, "", 2, (int) (short) 100, 10);
        char[] charArray44 = strBuilder16.toCharArray((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterChar('0');
        boolean boolean48 = strTokenizer47.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strTokenizer49);
    }

    @Test
    public void test11908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11908");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        java.io.Writer writer92 = writer37.append(' ');
        java.io.Writer writer94 = writer37.append('#');
        // The following exception was thrown during execution in test generation
        try {
            writer94.write("[not ", (int) '\000', 61);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(writer92);
        org.junit.Assert.assertNotNull(writer94);
    }

    @Test
    public void test11909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11909");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.String[] strArray7 = strTokenizer4.getTokenArray();
        java.lang.String str8 = strTokenizer4.getContent();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test11910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11910");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        boolean boolean11 = strBuilder9.contains("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.replaceAll("10\n\n", "#4#a4#java.io.IOException: zinekoTrtSeslaf \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.clear();
        int int20 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendln(stringBuffer21, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        char[] charArray33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder40.replace(strMatcher45, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder32.replaceFirst(strMatcher45, "hi!");
        boolean boolean53 = strBuilder24.contains(strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45, strMatcher55);
        int int58 = strBuilder9.lastIndexOf(strMatcher55, 8);
        int int59 = strBuilder9.capacity();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32 + "'", int59 == 32);
    }

    @Test
    public void test11911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11911");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder4.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        int int11 = strBuilder7.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendSeparator("java.io.IOException: ", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln((int) (short) -1);
        int int23 = strBuilder18.lastIndexOf(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder1.append((java.lang.Object) int23);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test11912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11912");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int35 = strBuilder32.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int41 = strBuilder38.indexOf(strMatcher40);
        int int42 = strBuilder32.indexOf(strMatcher40);
        char[] charArray49 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher40, strMatcher55);
        boolean boolean57 = strList4.equals((java.lang.Object) strMatcher55);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setDelimiterString("hi!");
        boolean boolean69 = strTokenizer66.hasNext();
        java.util.List<java.lang.String> strList70 = strTokenizer66.getTokenList();
        java.lang.String[] strArray71 = strTokenizer66.getTokenArray();
        java.lang.CharSequence[] charSequenceArray72 = strList4.toArray((java.lang.CharSequence[]) strArray71);
        java.util.Spliterator<java.lang.String> strSpliterator73 = strList4.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator74 = strList4.spliterator();
        java.io.IOException iOException76 = new java.io.IOException("a10\n");
        java.lang.Throwable[] throwableArray77 = iOException76.getSuppressed();
        boolean boolean78 = strList4.remove((java.lang.Object) iOException76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor80 = strList4.listIterator(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertNotNull(strSpliterator73);
        org.junit.Assert.assertNotNull(strSpliterator74);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test11913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11913");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        char[] charArray9 = strBuilder8.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
    }

    @Test
    public void test11914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11914");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        char[] charArray10 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        int int16 = strBuilder13.lastIndexOf("", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.insert((int) (byte) 0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int30 = strBuilder25.indexOf(strMatcher28, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder19.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer31, "a#4#a4#hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder19.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence37 = strBuilder19.subSequence(27, 45);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 45");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test11915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11915");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.setCharAt(2, '\000');
        boolean boolean78 = strBuilder77.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendSeparator("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln(' ');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test11916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11916");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.ensureCapacity((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((long) 1);
        int int32 = strBuilder27.lastIndexOf("java.io.IOException: StrTokenizer[not tokenized yet]", 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.replaceFirst("#4#a4#java.io.IOException: zinekoTrtSeslaf \n", "ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(true);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '0');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder37.append(charArray44, 3, 2);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test11917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11917");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("", "#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setEmptyTokenAsNull(false);
        char[] charArray15 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int24 = strBuilder21.indexOf(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        int int31 = strBuilder21.indexOf(strMatcher29);
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher29, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer6.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("hi!");
        java.lang.String str50 = strBuilder49.getNullText();
        char[] charArray52 = new char[] { 'a' };
        char[] charArray53 = strBuilder49.getChars(charArray52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append(stringBuffer54);
        java.io.Writer writer56 = strBuilder55.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        java.lang.String str60 = strBuilder59.getNullText();
        char[] charArray62 = new char[] { 'a' };
        char[] charArray63 = strBuilder59.getChars(charArray62);
        char[] charArray68 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray69 = strBuilder59.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        writer56.write(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer46.reset(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder1.append(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder1.append((float) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("aa##");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendPadding(91, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.insert(47, false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test11918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11918");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        char[] charArray22 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder2.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder2.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder2.appendln((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.appendln(9);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test11919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11919");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.clear();
        java.lang.String str22 = strBuilder20.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.append((java.lang.CharSequence) str22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        char[] charArray42 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray43 = strBuilder33.getChars(charArray42);
        java.io.Reader reader44 = strBuilder33.asReader();
        java.lang.String str45 = strBuilder33.toString();
        java.lang.StringBuffer stringBuffer46 = strBuilder33.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder23.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.setLength(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.insert(15, (double) 73);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(stringBuffer46);
        org.junit.Assert.assertEquals(stringBuffer46.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test11920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11920");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendSeparator("100.01210\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append('1');
        java.lang.String str20 = strBuilder16.rightString(102);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        java.lang.Throwable throwable29 = null;
        java.io.IOException iOException30 = new java.io.IOException("", throwable29);
        java.io.IOException iOException31 = new java.io.IOException("#4#a4#", throwable29);
        java.io.IOException iOException32 = new java.io.IOException(throwable29);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1.0f, iOException32, false, 100, strBuilder35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.appendWithSeparators(objArray36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.deleteAll('a');
        boolean boolean50 = strBuilder49.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("hi!");
        java.lang.String str66 = strBuilder65.getNullText();
        char[] charArray68 = new char[] { 'a' };
        char[] charArray69 = strBuilder65.getChars(charArray68);
        char[] charArray74 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray75 = strBuilder65.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder56.appendln(charArray74, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder49.appendln(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray74);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder16.insert(31, charArray74, 74, (int) ':');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 74");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "java.io.IOException: 100.01210\n1" + "'", str20, "java.io.IOException: 100.01210\n1");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test11921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11921");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        java.lang.String str6 = strBuilder4.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.append((java.lang.Object) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.append((java.lang.CharSequence) strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("[not ");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.replaceFirst(strMatcher20, "35\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str25 = strTokenizer24.getContent();
        char[] charArray31 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer24.reset(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, "a");
        java.lang.String[] strArray36 = strTokenizer35.getTokenArray();
        int int37 = strTokenizer35.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        java.io.Reader reader51 = strBuilder40.asReader();
        reader51.mark(10);
        reader51.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        char[] charArray64 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.appendln(charArray64);
        int int67 = reader51.read(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer35.reset(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder0.append(charArray64);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test11922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11922");
        java.io.IOException iOException2 = new java.io.IOException("10\n100.0");
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) iOException2);
    }

    @Test
    public void test11923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11923");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln(false);
        char[] charArray27 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        java.lang.String str32 = strTokenizer31.nextToken();
        java.util.List<java.lang.String> strList33 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer31.setDelimiterString("hi!");
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.append((java.lang.Object) strTokenizer35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.ensureCapacity(19);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setIgnoreEmptyTokens(false);
        boolean boolean45 = strTokenizer42.hasPrevious();
        boolean boolean46 = strTokenizer42.hasNext();
        java.lang.String[] strArray47 = strTokenizer42.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.appendWithSeparators((java.lang.Object[]) strArray47, ".IOExceptionfalse1001.0\n35.0\n1111111111111111111111111111111111111111111111111111");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.insert(97, (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str36, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test11924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11924");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean20 = strList12.equals((java.lang.Object) strMatcher19);
        java.util.stream.Stream<java.lang.String> strStream21 = strList12.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.clear();
        java.lang.Throwable throwable29 = null;
        java.io.IOException iOException30 = new java.io.IOException("", throwable29);
        java.io.IOException iOException31 = new java.io.IOException("#4#a4#", throwable29);
        java.io.IOException iOException32 = new java.io.IOException(throwable29);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1.0f, iOException32, false, 100, strBuilder35 };
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder25.appendWithSeparators(objArray36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert((int) (byte) 0, (int) (short) -1);
        boolean boolean50 = strList12.remove((java.lang.Object) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNull();
        boolean boolean56 = strBuilder54.equals((java.lang.Object) 100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.ensureCapacity(2);
        boolean boolean59 = strBuilder46.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int73 = strBuilder70.indexOf(strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder69.appendln(strBuilder77);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        int int83 = strBuilder69.lastIndexOf(strMatcher81, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder54.replaceAll(strMatcher81, "hi!");
        java.lang.String str87 = strBuilder54.rightString(12);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test11925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11925");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        boolean boolean22 = strBuilder18.contains("StrTokenizer[#4#a4#]");
        int int24 = strBuilder18.lastIndexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.append((java.lang.CharSequence) strBuilder39);
        int int42 = strBuilder39.lastIndexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.replaceAll("1111111111", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendSeparator(" falseafalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceAll('0', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceAll("a", " 10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder47.appendln(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test11926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11926");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(true);
        int int11 = strBuilder5.lastIndexOf("", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendSeparator("0java.io.IOExceptionfalse100", 6);
        boolean boolean16 = strBuilder5.endsWith("StrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.insert(97, ':');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11927");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("hi!");
        java.lang.String str35 = strBuilder34.getNullText();
        char[] charArray37 = new char[] { 'a' };
        char[] charArray38 = strBuilder34.getChars(charArray37);
        char[] charArray43 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray44 = strBuilder34.getChars(charArray43);
        java.io.Reader reader45 = strBuilder34.asReader();
        reader45.mark((int) (byte) 0);
        boolean boolean48 = reader45.markSupported();
        reader45.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray61 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray62 = strBuilder52.getChars(charArray61);
        java.io.Reader reader63 = strBuilder52.asReader();
        reader63.mark(10);
        reader63.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder69.clear();
        char[] charArray76 = new char[] { 'a', 'a', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.appendln(charArray76);
        int int79 = reader63.read(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray76);
        int int84 = reader45.read(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder7.getChars(60, 57, charArray76, (int) 'e');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 57");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "aa4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "aa4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test11928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11928");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.appendSeparator('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendSeparator(' ', '4');
        boolean boolean18 = strBuilder5.equals(strBuilder17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder5.insert(35, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11929");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder32.replace(strMatcher37, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[#4#a4#]", strMatcher37, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder5.deleteAll(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst('0', '\000');
        int int57 = strBuilder55.indexOf(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test11930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11930");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        java.lang.String str40 = strBuilder39.getNullText();
        char[] charArray42 = new char[] { 'a' };
        char[] charArray43 = strBuilder39.getChars(charArray42);
        char[] charArray48 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray49 = strBuilder39.getChars(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder30.appendln(charArray48, 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder24.append(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test11931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11931");
        char[] charArray7 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int11 = strBuilder8.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int17 = strBuilder14.indexOf(strMatcher16);
        int int18 = strBuilder8.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16);
        java.lang.String str20 = strTokenizer19.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer19.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer19.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("hi!");
        java.lang.String str29 = strBuilder27.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("hi!");
        java.lang.String str33 = strBuilder32.getNullText();
        char[] charArray35 = new char[] { 'a' };
        char[] charArray36 = strBuilder32.getChars(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder27.append((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder27.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.replace(0, 46, "se1001.0\n35.0\ntrue");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("1truefalse0\nzinekoTrtSeslaf true");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.replaceAll(strMatcher46, "1a10\n104aa");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("1false0\n1.0", strMatcher24, strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.clear();
        java.lang.Throwable throwable57 = null;
        java.io.IOException iOException58 = new java.io.IOException("", throwable57);
        java.io.IOException iOException59 = new java.io.IOException("#4#a4#", throwable57);
        java.io.IOException iOException60 = new java.io.IOException(throwable57);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1.0f, iOException60, false, 100, strBuilder63 };
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.appendWithSeparators(objArray64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder68.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder68.appendln(100.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteAll("1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        char[] charArray81 = strBuilder78.toCharArray();
        int int85 = strMatcher46.isMatch(charArray81, (int) (byte) -1, 31, 21);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "a4aa# " + "'", str20, "a4aa# ");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "true100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "true100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[t, r, u, e, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test11932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11932");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int5 = strBuilder2.indexOf(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.replace(strMatcher12, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[#4#a4#]", strMatcher12, strMatcher23);
        boolean boolean25 = strTokenizer24.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        int int27 = strTokenizer26.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer26.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strMatcher28);
    }

    @Test
    public void test11933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11933");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.reverse();
        java.lang.StringBuffer stringBuffer75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln(stringBuffer75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendPadding((int) '4', '.');
        int int80 = strBuilder79.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.appendFixedWidthPadRight(12, 0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.append(0.0f);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 77 + "'", int80 == 77);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test11934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11934");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.setCharAt(1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replace(3, 48, "10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.appendFixedWidthPadLeft(91, 112, '\000');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test11935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11935");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.String str5 = strBuilder3.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.insert(0, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int12 = strBuilder9.indexOf(strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append("#4#a4#");
        java.lang.String str16 = strBuilder9.leftString((int) (short) 100);
        int int18 = strBuilder9.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder9.appendSeparator(' ');
        char[] charArray30 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("hi!");
        java.lang.String str35 = strTokenizer34.nextToken();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer34.setTrimmerMatcher(strMatcher37);
        char[] charArray45 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        int int50 = strMatcher37.isMatch(charArray45, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder23.append(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder3.appendln((java.lang.Object) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder23.appendFixedWidthPadRight(48, 53, '0');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = strBuilder56.substring((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#4#a4#" + "'", str16, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#4#a4#" + "'", str35, "#4#a4#");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test11936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11936");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.append(stringBuffer7);
        java.io.Writer writer9 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("hi!");
        java.lang.String str13 = strBuilder12.getNullText();
        char[] charArray15 = new char[] { 'a' };
        char[] charArray16 = strBuilder12.getChars(charArray15);
        char[] charArray21 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray22 = strBuilder12.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        writer9.write(charArray21);
        writer9.close();
        writer9.close();
        writer9.write("#4#a4#", 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("hi!");
        java.lang.String str34 = strBuilder33.getNullText();
        char[] charArray36 = new char[] { 'a' };
        char[] charArray37 = strBuilder33.getChars(charArray36);
        writer9.write(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("hi!");
        java.lang.String str42 = strBuilder41.getNullText();
        char[] charArray44 = new char[] { 'a' };
        char[] charArray45 = strBuilder41.getChars(charArray44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append(stringBuffer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("hi!");
        java.lang.String str53 = strBuilder52.getNullText();
        char[] charArray55 = new char[] { 'a' };
        char[] charArray56 = strBuilder52.getChars(charArray55);
        char[] charArray57 = strBuilder49.getChars(charArray55);
        writer9.write(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterChar('.');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
    }

    @Test
    public void test11937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11937");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strBuilder19.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.setLength(70);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test11938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11938");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("100.0false");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer1.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test11939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11939");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendln("java.io.IOException: ", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.insert(18, "ptionfalse1001.0\n35.0\naaaajava.io.IOException: StrTokenizer[not tokenized yet]");
        int int48 = strBuilder45.lastIndexOf("0.012true104444444444444444444444444444444444444444444444", 102);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append((long) '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test11940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11940");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.clear();
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        int int27 = strMatcher18.isMatch(charArray25, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.append(charArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder7.insert((int) (byte) 1, charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterChar('a');
        int int34 = strTokenizer31.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = strTokenizer36.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test11941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11941");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean28 = strBuilder27.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray31 = strBuilder27.toCharArray(77, 132);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test11942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11942");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("1.0java.io.IOExceptionfalse1001.0\n35.0\n10.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        java.lang.String str6 = strBuilder5.getNullText();
        char[] charArray8 = new char[] { 'a' };
        char[] charArray9 = strBuilder5.getChars(charArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int13 = strBuilder10.indexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.deleteFirst(strMatcher24);
        int int27 = strBuilder5.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("35\n", strMatcher2, strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test11943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11943");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        boolean boolean11 = strTokenizer8.hasNext();
        java.util.List<java.lang.String> strList12 = strTokenizer8.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream13 = strList12.parallelStream();
        boolean boolean15 = strList12.add("#4");
        java.util.stream.Stream<java.lang.String> strStream16 = strList12.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream17 = strList12.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = strList12.set(32, "100.0false\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strStream16);
        org.junit.Assert.assertNotNull(strStream17);
    }

    @Test
    public void test11944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11944");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        int int8 = strBuilder2.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder2.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int15 = strBuilder12.indexOf(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append("#4#a4#");
        java.lang.String str19 = strBuilder12.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int23 = strBuilder20.indexOf(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.append(false);
        char[] charArray36 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("hi!");
        boolean boolean41 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strTokenizer38, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int48 = strBuilder45.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln((int) (short) 10);
        boolean boolean55 = strBuilder25.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder25.reverse();
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.append(stringBuffer57, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder11.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int65 = strBuilder62.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.append((int) (short) -1);
        boolean boolean72 = strBuilder11.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int80 = strBuilder77.indexOf(strMatcher79);
        char[] charArray87 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder77.appendAll((java.util.Iterator<java.lang.String>) strTokenizer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder74.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer89, "");
        int int93 = strBuilder74.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder73.appendln((java.lang.Object) strBuilder74);
        boolean boolean95 = strBuilder73.isEmpty();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strBuilder73.asTokenizer();
        java.lang.String str97 = strTokenizer96.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher98 = strTokenizer96.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#4#a4#" + "'", str19, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "1false0" + "'", str97, "1false0");
        org.junit.Assert.assertNotNull(strMatcher98);
    }

    @Test
    public void test11945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11945");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int4 = strBuilder1.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher3);
        int int6 = strTokenizer5.size();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        java.util.ListIterator<java.lang.String> strItor8 = strList7.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.clear();
        java.lang.String str14 = strBuilder12.rightString((int) (short) -1);
        java.lang.String str16 = strBuilder12.rightString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append((double) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoreEmptyTokens(false);
        int int23 = strTokenizer20.previousIndex();
        java.lang.Object obj24 = strTokenizer20.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.append((java.lang.Object) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.reverse();
        java.io.Reader reader27 = strBuilder26.asReader();
        int int28 = strList7.indexOf((java.lang.Object) strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.setCharAt(18, '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((double) 48);
        java.io.Writer writer36 = strBuilder33.asWriter();
        java.io.Writer writer38 = writer36.append('3');
        java.io.Writer writer40 = writer38.append('3');
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strItor8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(writer38);
        org.junit.Assert.assertNotNull(writer40);
    }

    @Test
    public void test11946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11946");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int14 = strBuilder11.lastIndexOf(strMatcher12, (int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setIgnoreEmptyTokens(false);
        java.lang.String str19 = strTokenizer16.nextToken();
        boolean boolean20 = strTokenizer16.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer21);
        java.lang.String str25 = strBuilder22.midString(21, 4);
        int int27 = strBuilder22.indexOf('0');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test11947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11947");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        int int25 = strTokenizer18.previousIndex();
        boolean boolean26 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer18.reset("#4#a4#");
        java.util.List<java.lang.String> strList29 = strTokenizer28.getTokenList();
        strList29.clear();
        boolean boolean32 = strList29.add("#4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        int int37 = strBuilder35.capacity();
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln(stringBuffer38, (int) (byte) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder35.replaceAll('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.setNewLineText("java.io.IOException: ");
        boolean boolean47 = strList29.contains((java.lang.Object) strBuilder35);
        java.util.ListIterator<java.lang.String> strItor48 = strList29.listIterator();
        java.lang.Object[] objArray49 = strList29.toArray();
        java.util.stream.Stream<java.lang.String> strStream50 = strList29.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("hi!");
        java.lang.String str54 = strBuilder53.getNullText();
        char[] charArray56 = new char[] { 'a' };
        char[] charArray57 = strBuilder53.getChars(charArray56);
        char[] charArray62 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray63 = strBuilder53.getChars(charArray62);
        java.io.Reader reader64 = strBuilder53.asReader();
        java.lang.String str65 = strBuilder53.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.trim();
        char[] charArray74 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int89 = strBuilder84.indexOf(strMatcher87, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("eptionfalse1001.0\n35.0\n1false0\n\n", strMatcher87);
        int int93 = strBuilder53.lastIndexOf(strMatcher87, (int) '3');
        int int94 = strList29.indexOf((java.lang.Object) strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[#4#]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[#4#]");
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test11948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11948");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        char[] charArray23 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int32 = strBuilder29.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int38 = strBuilder35.indexOf(strMatcher37);
        int int39 = strBuilder29.indexOf(strMatcher37);
        char[] charArray46 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher37, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int60 = strBuilder57.indexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.replace(strMatcher67, "StrTokenizer[#4#a4#]", (int) (short) 1, 1, (int) (byte) 10);
        int int74 = strBuilder56.lastIndexOf(strMatcher67, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer54.setTrimmerMatcher(strMatcher67);
        boolean boolean76 = strTokenizer75.hasPrevious();
        int int77 = strTokenizer75.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test11949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11949");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder2.appendln("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append("#4#a4#");
        java.lang.String str24 = strBuilder17.leftString((int) (short) 100);
        int int26 = strBuilder17.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder17.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder17.appendSeparator(' ');
        char[] charArray38 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        java.lang.String str43 = strTokenizer42.nextToken();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setTrimmerMatcher(strMatcher45);
        char[] charArray53 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        int int58 = strMatcher45.isMatch(charArray53, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.append(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder16.replaceAll(strMatcher60, " ");
        char[] charArray69 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setDelimiterString("hi!");
        java.lang.String str74 = strTokenizer73.nextToken();
        java.util.List<java.lang.String> strList75 = strTokenizer73.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer73.setTrimmerMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder62.replaceAll(strMatcher78, "eslaf");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder62.appendSeparator("100.01224.0\n", 5);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#4#a4#" + "'", str43, "#4#a4#");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "#4#a4#" + "'", str74, "#4#a4#");
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test11950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11950");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        char[] charArray28 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterString("hi!");
        java.lang.String str33 = strTokenizer32.nextToken();
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        boolean boolean36 = strList34.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str39 = strTokenizer38.getContent();
        boolean boolean40 = strList34.equals((java.lang.Object) strTokenizer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean42 = strList34.equals((java.lang.Object) strMatcher41);
        java.util.stream.Stream<java.lang.String> strStream43 = strList34.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.insert(0, (double) (byte) 100);
        java.io.Reader reader51 = strBuilder50.asReader();
        boolean boolean52 = strList34.remove((java.lang.Object) reader51);
        strList34.clear();
        boolean boolean54 = strList4.addAll((java.util.Collection<java.lang.String>) strList34);
        java.util.Spliterator<java.lang.String> strSpliterator55 = strList34.spliterator();
        java.util.stream.Stream<java.lang.String> strStream56 = strList34.parallelStream();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator57 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList34.replaceAll(strUnaryOperator57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#4#a4#" + "'", str33, "#4#a4#");
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strSpliterator55);
        org.junit.Assert.assertNotNull(strStream56);
    }

    @Test
    public void test11951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11951");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int21 = strBuilder16.indexOf(strMatcher19, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        boolean boolean23 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        int int25 = strTokenizer22.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer22.setDelimiterString("trTokenizer[not tokenized yet]0\nzinekoTrtSeslaf \n");
        int int28 = strTokenizer22.nextIndex();
        java.lang.String str29 = strTokenizer22.toString();
        int int30 = strTokenizer22.nextIndex();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "StrTokenizer[#4#a4#]" + "'", str29, "StrTokenizer[#4#a4#]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test11952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11952");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append("#4#a4#");
        java.lang.String str7 = strBuilder0.leftString((int) (short) 100);
        int int9 = strBuilder0.lastIndexOf("StrTokenizer[not tokenized yet]");
        java.lang.String str10 = strBuilder0.toString();
        int int13 = strBuilder0.lastIndexOf(' ', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(0);
        int int20 = strBuilder17.indexOf("java.io.IOException: 1false0\n\n#", 20);
        char[] charArray21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.appendln(charArray21, (int) '1', 24);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#4#a4#" + "'", str7, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#4#a4#" + "'", str10, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test11953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11953");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str1 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteAll(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((java.lang.Object) strBuilder2);
        java.util.Iterator<java.lang.String> strItor8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendAll(strItor8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.setNewLineText("0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("-1.0#4#a4# java.io.IOException: ", "\n01 false");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test11954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11954");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int42 = strBuilder39.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int54 = strBuilder51.indexOf(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder36.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder36.replaceFirst("4", "java.io.IOException: StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        java.lang.String str64 = strBuilder63.getNullText();
        char[] charArray66 = new char[] { 'a' };
        char[] charArray67 = strBuilder63.getChars(charArray66);
        char[] charArray72 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray73 = strBuilder63.getChars(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray73);
        char[] charArray81 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer74.reset(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, '#', '4');
        char[] charArray89 = strBuilder60.getChars(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder60.appendln((double) 77);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder91.insert(0, " \n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n 10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "1.0java.io.IOExceptionfalse1001.0\n35.0\n1false0\n\n 10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 1, ., 0, \n, 3, 5, ., 0, \n, 1, f, a, l, s, e, 0, \n, \n,  , 1, 0]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test11955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11955");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int58 = strBuilder55.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append(' ');
        java.util.stream.IntStream intStream61 = strBuilder60.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int64 = strBuilder60.lastIndexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strBuilder65.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int79 = strBuilder76.lastIndexOf(strMatcher77, (int) (short) -1);
        boolean boolean80 = strBuilder60.contains(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.deleteAll('#');
        java.io.Writer writer83 = writer54.append((java.lang.CharSequence) strBuilder60);
        writer83.close();
        writer83.write(39);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(writer83);
    }

    @Test
    public void test11956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11956");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.append((double) '4');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendSeparator("1a10\n104aa", " a10\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str15 = strBuilder14.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.replaceFirst('a', 'a');
        char[] charArray30 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int40 = strBuilder37.indexOf(strMatcher39);
        int int41 = strBuilder31.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int47 = strBuilder44.indexOf(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher46, strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder23.appendln(charArray30);
        int int55 = strBuilder23.indexOf("##a#", (int) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder23.appendNewLine();
        boolean boolean57 = strBuilder10.equalsIgnoreCase(strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder10.insert(6, (long) 32);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test11957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11957");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[a]");
        char[] charArray8 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        java.lang.String str12 = strTokenizer11.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer11.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("hi!");
        java.lang.String str17 = strBuilder16.getNullText();
        char[] charArray19 = new char[] { 'a' };
        char[] charArray20 = strBuilder16.getChars(charArray19);
        char[] charArray25 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray26 = strBuilder16.getChars(charArray25);
        java.io.Reader reader27 = strBuilder16.asReader();
        char[] charArray28 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer11.reset(charArray28);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = strMatcher1.isMatch(charArray28, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#4#a4#" + "'", str12, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(strTokenizer29);
    }

    @Test
    public void test11958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11958");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("", throwable2);
        java.io.IOException iOException4 = new java.io.IOException("hi!", throwable2);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        char[] charArray18 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        boolean boolean23 = strTokenizer20.isIgnoreEmptyTokens();
        java.lang.String str24 = strTokenizer20.next();
        int int25 = strList10.indexOf((java.lang.Object) strTokenizer20);
        java.util.ListIterator<java.lang.String> strItor27 = strList10.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor28 = strList10.iterator();
        java.lang.String[] strArray32 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        java.lang.String str47 = strTokenizer43.next();
        int int48 = strList33.indexOf((java.lang.Object) strTokenizer43);
        boolean boolean49 = strList10.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.ListIterator<java.lang.String> strItor50 = strList33.listIterator();
        boolean boolean52 = strList33.add("");
        int int53 = strList33.size();
        char[] charArray60 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setDelimiterString("hi!");
        boolean boolean65 = strTokenizer62.hasNext();
        java.util.List<java.lang.String> strList66 = strTokenizer62.getTokenList();
        boolean boolean67 = strList33.removeAll((java.util.Collection<java.lang.String>) strList66);
        java.lang.Throwable throwable69 = null;
        java.io.IOException iOException70 = new java.io.IOException("", throwable69);
        java.io.IOException iOException72 = new java.io.IOException("0.012true104444444444444444444444444444444444444444444444  \n");
        iOException70.addSuppressed((java.lang.Throwable) iOException72);
        boolean boolean74 = strList33.contains((java.lang.Object) iOException70);
        java.io.IOException iOException76 = new java.io.IOException("StrTokenizer[not tokenized yet]");
        java.io.IOException iOException77 = new java.io.IOException((java.lang.Throwable) iOException76);
        iOException70.addSuppressed((java.lang.Throwable) iOException76);
        iOException4.addSuppressed((java.lang.Throwable) iOException70);
        java.io.IOException iOException80 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray81 = iOException4.getSuppressed();
        java.lang.Throwable[] throwableArray82 = iOException4.getSuppressed();
        java.lang.Throwable[] throwableArray83 = iOException4.getSuppressed();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strItor28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#4#a4#" + "'", str47, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test11959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11959");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        int int14 = strBuilder12.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst("StrTokenizer[not tokenized yet]", "hi!");
        java.util.stream.IntStream intStream18 = strBuilder17.codePoints();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(intStream18);
    }

    @Test
    public void test11960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11960");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        java.lang.String str2 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer4.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.add("00000000000000000");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test11961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11961");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int30 = strBuilder27.indexOf(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append("#4#a4#");
        java.lang.String str34 = strBuilder27.leftString((int) (short) 100);
        int int36 = strBuilder27.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder27.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder27.appendSeparator(' ');
        char[] charArray48 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("hi!");
        java.lang.String str53 = strTokenizer52.nextToken();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer52.setTrimmerMatcher(strMatcher55);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63);
        int int68 = strMatcher55.isMatch(charArray63, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder41.append(charArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder23.append((java.lang.Object) 0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder23.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendln(10L);
        int int83 = strBuilder77.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder77.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder77.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder77.append("java.io.IOException: ");
        java.lang.StringBuffer stringBuffer90 = strBuilder77.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder77.replaceAll('a', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder77.appendSeparator(" false.IOExceptionfalse1001.0\n35.0\n1false0\n\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder23.append(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#4#a4#" + "'", str34, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(stringBuffer90);
        org.junit.Assert.assertEquals(stringBuffer90.toString(), "java.io.IOException: ");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test11962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11962");
        java.io.IOException iOException2 = new java.io.IOException("0\nzinekoTrtSeslaf ");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("ionfalse1001.0\n\n4\n", (java.lang.Throwable) iOException2);
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test11963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11963");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        boolean boolean4 = strBuilder3.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("hi!");
        java.lang.String str10 = strBuilder9.getNullText();
        char[] charArray12 = new char[] { 'a' };
        char[] charArray13 = strBuilder9.getChars(charArray12);
        int int15 = strMatcher6.isMatch(charArray13, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.append(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int20 = strBuilder17.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append("#4#a4#");
        java.lang.String str24 = strBuilder17.leftString((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(false);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        boolean boolean46 = strTokenizer43.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder30.appendFixedWidthPadRight((java.lang.Object) strTokenizer43, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int53 = strBuilder50.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendln((int) (short) 10);
        boolean boolean60 = strBuilder30.equalsIgnoreCase(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder30.reverse();
        java.lang.StringBuffer stringBuffer62 = strBuilder61.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder17.append(stringBuffer62, (int) (byte) 0, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder3.append(stringBuffer62, 6, (int) (byte) 0);
        int int70 = strBuilder3.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder3.replaceAll('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = strBuilder3.equalsIgnoreCase(strBuilder74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#4#a4#" + "'", str24, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(stringBuffer62);
        org.junit.Assert.assertEquals(stringBuffer62.toString(), "zinekoTrtSeslaf ");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test11964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11964");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.write("10\n\n");
        writer37.write(10);
        writer37.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.Throwable throwable64 = null;
        java.io.IOException iOException65 = new java.io.IOException("", throwable64);
        java.io.IOException iOException66 = new java.io.IOException("#4#a4#", throwable64);
        java.io.IOException iOException67 = new java.io.IOException(throwable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1.0f, iOException67, false, 100, strBuilder70 };
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendWithSeparators(objArray71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.setLength((int) ' ');
        char[] charArray89 = strBuilder86.toCharArray((int) ' ', (int) 'a');
        writer37.write(charArray89);
        writer37.flush();
        writer37.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
    }

    @Test
    public void test11965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11965");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark((int) '4');
        int int16 = reader13.read();
        reader13.reset();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test11966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11966");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln((long) '#');
        java.util.stream.IntStream intStream7 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendSeparator("10\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst('4', ' ');
        java.lang.String str13 = strBuilder4.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder4.append((double) 38);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.setCharAt(0, '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((float) 71);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test11967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11967");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst('#');
        java.lang.String str10 = strBuilder9.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.deleteAll("a");
        int int17 = strBuilder9.lastIndexOf("1.0java.io.IOExceptionfalse1001.0\n35.0\n", 34);
        boolean boolean19 = strBuilder9.contains("1.0java.io.IOExceptionfalse10");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + " " + "'", str10, " ");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test11968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11968");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(charArray8);
        boolean boolean10 = strBuilder7.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int14 = strBuilder11.indexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int26 = strBuilder23.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.deleteFirst(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int42 = strBuilder39.lastIndexOf(strMatcher40, (int) (short) -1);
        int int43 = strBuilder27.indexOf(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder7.appendFixedWidthPadLeft((java.lang.Object) int43, (int) (short) -1, 'a');
        java.lang.String str49 = strBuilder46.substring(1, 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test11969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11969");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.util.stream.IntStream intStream37 = strBuilder35.codePoints();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strBuilder35.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("1false0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
    }

    @Test
    public void test11970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11970");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("hi!");
        java.lang.String str15 = strBuilder14.getNullText();
        char[] charArray17 = new char[] { 'a' };
        char[] charArray18 = strBuilder14.getChars(charArray17);
        char[] charArray23 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray24 = strBuilder14.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(charArray23, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder5.appendln((long) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder5.setLength(100);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        int int55 = strBuilder50.indexOf(strMatcher53, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        char[] charArray66 = new char[] { 'a', '4', 'a', 'a', '#', ' ' };
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int70 = strBuilder67.indexOf(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int76 = strBuilder73.indexOf(strMatcher75);
        int int77 = strBuilder67.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int83 = strBuilder80.indexOf(strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher82, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher59, strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder33.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer88, "0\nzinekoTrtSeslaf ");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.deleteCharAt(59);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder90.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder90.appendSeparator("\000\000\000\0004");
        int int98 = strBuilder96.lastIndexOf(".IOExceptionfalse1001.0\n35.0\n1false0\n\nava.io.IOE");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4aa# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4aa# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4, a, a, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test11971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11971");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor45 = strList27.iterator();
        boolean boolean46 = strList4.remove((java.lang.Object) strItor45);
        java.lang.String str49 = strList4.set(1, "4");
        java.util.ListIterator<java.lang.String> strItor50 = strList4.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher54);
        int int57 = strTokenizer56.size();
        java.util.List<java.lang.String> strList58 = strTokenizer56.getTokenList();
        java.util.ListIterator<java.lang.String> strItor59 = strList58.listIterator();
        int int60 = strList58.size();
        boolean boolean61 = strList4.addAll((java.util.Collection<java.lang.String>) strList58);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test11972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11972");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.append(' ');
        char[] charArray31 = strBuilder28.toCharArray(22, 80);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "onfalse100\n ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "onfalse100\n ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[o, n, f, a, l, s, e, 1, 0, 0, \n,  ]");
    }

    @Test
    public void test11973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11973");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean14 = strList12.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str17 = strTokenizer16.getContent();
        boolean boolean18 = strList12.equals((java.lang.Object) strTokenizer16);
        java.util.ListIterator<java.lang.String> strItor19 = strList12.listIterator();
        int int20 = strList12.size();
        boolean boolean21 = strList12.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor23 = strList12.listIterator(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#4#a4#" + "'", str11, "#4#a4#");
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test11974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11974");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln((double) 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append(false);
        char[] charArray44 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("hi!");
        boolean boolean49 = strTokenizer46.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder33.appendFixedWidthPadRight((java.lang.Object) strTokenizer46, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendln((int) (short) 10);
        boolean boolean63 = strBuilder33.equalsIgnoreCase(strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.insert((int) (byte) 1, 'a');
        char char68 = strBuilder58.charAt(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strBuilder58.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.append('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder23.appendFixedWidthPadLeft((java.lang.Object) '1', 0, '3');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder23.insert((int) 'e', (float) 'c');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 101");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + char68 + "' != '" + ' ' + "'", char68 == ' ');
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test11975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11975");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendln((int) (short) 10);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        int int24 = strBuilder5.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder5.appendln("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.minimizeCapacity();
        int int30 = strBuilder29.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.insert(10, (double) 4L);
        int int36 = strBuilder33.lastIndexOf(' ', 35);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 34 + "'", int30 == 34);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test11976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11976");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("1.0java.io.IOExceptionfalse1001.0\n35.0\n10.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.clear();
        java.lang.Throwable throwable10 = null;
        java.io.IOException iOException11 = new java.io.IOException("", throwable10);
        java.io.IOException iOException12 = new java.io.IOException("#4#a4#", throwable10);
        java.io.IOException iOException13 = new java.io.IOException(throwable10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1.0f, iOException13, false, 100, strBuilder16 };
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder6.appendWithSeparators(objArray17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.clear();
        java.lang.String str25 = strBuilder23.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder6.append((java.lang.CharSequence) str25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((long) (byte) 0);
        char[] charArray29 = strBuilder26.toCharArray();
        java.lang.String str32 = strBuilder26.substring(0, 30);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.appendSeparator(" ", "\naa");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("hi!");
        java.lang.String str39 = strBuilder38.getNullText();
        char[] charArray41 = new char[] { 'a' };
        char[] charArray42 = strBuilder38.getChars(charArray41);
        char[] charArray47 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray48 = strBuilder38.getChars(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder26.appendln(charArray48);
        int int56 = strMatcher2.isMatch(charArray48, 65, 70, (int) '\000');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "1.0java.io.IOExceptionfalse1000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "1.0java.io.IOExceptionfalse1000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[1, ., 0, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n, f, a, l, s, e, 1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1.0java.io.IOExceptionfalse100" + "'", str32, "1.0java.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test11977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11977");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setEmptyTokenAsNull(true);
        boolean boolean28 = strTokenizer25.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer25.setQuoteChar(' ');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer25.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test11978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11978");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.appendNull();
        java.lang.String str6 = strBuilder3.substring((int) (short) 0, (int) (short) 100);
        int int9 = strBuilder3.lastIndexOf("1false0\n", 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.insert((int) '\000', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int18 = strBuilder15.indexOf(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(strBuilder32);
        int int38 = strBuilder24.indexOf("#4#a4#", 27);
        char[] charArray39 = strBuilder24.toCharArray();
        java.lang.StringBuffer stringBuffer40 = strBuilder24.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder14.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("hi!");
        java.lang.String str46 = strBuilder45.getNullText();
        char[] charArray48 = new char[] { 'a' };
        char[] charArray49 = strBuilder45.getChars(charArray48);
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.append(stringBuffer50);
        java.io.Writer writer52 = strBuilder51.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("hi!");
        java.lang.String str56 = strBuilder55.getNullText();
        char[] charArray58 = new char[] { 'a' };
        char[] charArray59 = strBuilder55.getChars(charArray58);
        char[] charArray64 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray65 = strBuilder55.getChars(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        writer52.write(charArray64);
        writer52.write("0java.io.IOExceptionfalse100", 4, 4);
        writer52.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln((long) '#');
        java.util.stream.IntStream intStream80 = strBuilder77.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.appendSeparator("10\n\n");
        java.io.Writer writer83 = writer52.append((java.lang.CharSequence) strBuilder82);
        char[] charArray84 = null;
        writer83.write(charArray84, 37, (int) (byte) 0);
        writer83.write("2.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder14.insert(97, (java.lang.Object) writer83);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "  \n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "  \n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ ,  , \n]");
        org.junit.Assert.assertNotNull(stringBuffer40);
        org.junit.Assert.assertEquals(stringBuffer40.toString(), "  \n");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(writer52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(intStream80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(writer83);
    }

    @Test
    public void test11979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11979");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        java.lang.Throwable throwable47 = null;
        java.io.IOException iOException48 = new java.io.IOException("", throwable47);
        java.io.IOException iOException49 = new java.io.IOException("#4#a4#", throwable47);
        java.io.IOException iOException50 = new java.io.IOException(throwable47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 1.0f, iOException50, false, 100, strBuilder53 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendWithSeparators(objArray54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.String str62 = strBuilder60.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder43.append((java.lang.CharSequence) str62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder39.appendln(strBuilder67, 0, 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder39.trim();
        int int74 = strBuilder39.indexOf('#', 4);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test11980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11980");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a", '3');
    }

    @Test
    public void test11981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11981");
        char[] charArray6 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        int int9 = strTokenizer8.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strTokenizer8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test11982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11982");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.insert((int) (byte) 0, (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.replaceFirst("\n", "59.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int19 = strBuilder16.indexOf(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int25 = strBuilder22.indexOf(strMatcher24);
        int int26 = strBuilder16.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendSeparator("100.01210\n", 32);
        char[] charArray35 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.appendFixedWidthPadRight((java.lang.Object) strBuilder34, 74, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.appendPadding(6, '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.clear();
        java.lang.Throwable throwable49 = null;
        java.io.IOException iOException50 = new java.io.IOException("", throwable49);
        java.io.IOException iOException51 = new java.io.IOException("#4#a4#", throwable49);
        java.io.IOException iOException52 = new java.io.IOException(throwable49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 1.0f, iOException52, false, 100, strBuilder55 };
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.appendWithSeparators(objArray56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.deleteFirst("0java.io.IOExceptionfalse100");
        java.lang.String[] strArray68 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        char[] charArray77 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setDelimiterString("hi!");
        boolean boolean82 = strTokenizer79.isIgnoreEmptyTokens();
        java.lang.String str83 = strTokenizer79.next();
        int int84 = strList69.indexOf((java.lang.Object) strTokenizer79);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder60.appendAll((java.util.Iterator<java.lang.String>) strTokenizer79);
        char char87 = strBuilder85.charAt(15);
        java.io.Writer writer88 = strBuilder85.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = new org.apache.commons.lang3.text.StrBuilder("1false0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        int int93 = strBuilder90.lastIndexOf(strMatcher92);
        int int95 = strBuilder85.lastIndexOf(strMatcher92, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder34.replaceAll(strMatcher92, "java.io.IOException: #4#a4#");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " ###################################5.0\n100.01210\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " ###################################5.0\n100.01210\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, 5, ., 0, \n, 1, 0, 0, ., 0, 1, 2, 1, 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "#4#a4#" + "'", str83, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + char87 + "' != '" + '\000' + "'", char87 == '\000');
        org.junit.Assert.assertNotNull(writer88);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test11983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11983");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("hi!");
        java.lang.String str8 = strBuilder7.getNullText();
        char[] charArray10 = new char[] { 'a' };
        char[] charArray11 = strBuilder7.getChars(charArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.append((java.lang.Object) strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.replaceAll('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append((double) 59);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.trim();
        java.lang.Object[] objArray35 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendAll(objArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder2.appendWithSeparators(objArray35, "1.0java.io.IOExceptionfalse1001.0\nfalse\nfalse");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.clear();
        java.lang.Throwable throwable47 = null;
        java.io.IOException iOException48 = new java.io.IOException("", throwable47);
        java.io.IOException iOException49 = new java.io.IOException("#4#a4#", throwable47);
        java.io.IOException iOException50 = new java.io.IOException(throwable47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 1.0f, iOException50, false, 100, strBuilder53 };
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendWithSeparators(objArray54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.clear();
        java.lang.String str62 = strBuilder60.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder43.append((java.lang.CharSequence) str62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln((double) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder39.appendln(strBuilder67, 0, 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder67.appendFixedWidthPadLeft((int) 'c', (int) (byte) 100, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder84.appendNewLine();
        java.lang.StringBuffer stringBuffer86 = strBuilder85.toStringBuffer();
        java.lang.StringBuffer stringBuffer87 = strBuilder85.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder67.append(stringBuffer87, 8, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(stringBuffer86);
        org.junit.Assert.assertEquals(stringBuffer86.toString(), "100.0\n");
        org.junit.Assert.assertNotNull(stringBuffer87);
        org.junit.Assert.assertEquals(stringBuffer87.toString(), "100.0\n");
    }

    @Test
    public void test11984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11984");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.clear();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("", throwable34);
        java.io.IOException iOException36 = new java.io.IOException("#4#a4#", throwable34);
        java.io.IOException iOException37 = new java.io.IOException(throwable34);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1.0f, iOException37, false, 100, strBuilder40 };
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.appendWithSeparators(objArray41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.deleteFirst("0java.io.IOExceptionfalse100");
        boolean boolean50 = strBuilder18.equals(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder18.appendFixedWidthPadLeft(53, (int) (short) 100, '0');
        int int56 = strBuilder18.indexOf("0\nhi!hi!truehi!");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test11985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11985");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendFixedWidthPadRight(25, 54, '\000');
        char[] charArray41 = strBuilder40.toCharArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "zinekoTrtSeslaf 25\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "zinekoTrtSeslaf 25\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[z, i, n, e, k, o, T, r, t, S, e, s, l, a, f,  , 2, 5, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000]");
    }

    @Test
    public void test11986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11986");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        java.lang.StringBuffer stringBuffer24 = strBuilder18.toStringBuffer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer33.setIgnoreEmptyTokens(false);
        int int39 = strTokenizer33.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(stringBuffer24);
        org.junit.Assert.assertEquals(stringBuffer24.toString(), "1.0java.io.IOExceptionfalse1001.0\n35.0\n");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test11987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11987");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int3 = strBuilder0.indexOf(strMatcher2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append(false);
        char[] charArray16 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setDelimiterString("hi!");
        boolean boolean21 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.appendFixedWidthPadRight((java.lang.Object) strTokenizer18, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int28 = strBuilder25.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln((int) (short) 10);
        boolean boolean35 = strBuilder5.equalsIgnoreCase(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert((int) (byte) 1, 'a');
        char char40 = strBuilder30.charAt(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.append('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.clear();
        java.lang.String str47 = strBuilder43.midString(7, 26);
        char[] charArray55 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("hi!");
        boolean boolean60 = strTokenizer57.isIgnoreEmptyTokens();
        int int61 = strTokenizer57.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer57.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.appendNewLine();
        char[] charArray81 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, ' ');
        char[] charArray84 = strBuilder74.getChars(charArray81);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer63.reset(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray84);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder43.insert((int) '1', charArray84, 21, 54);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 49");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + ' ' + "'", char40 == ' ');
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test11988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11988");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        boolean boolean17 = strTokenizer14.isIgnoreEmptyTokens();
        java.lang.String str18 = strTokenizer14.next();
        int int19 = strList4.indexOf((java.lang.Object) strTokenizer14);
        java.util.ListIterator<java.lang.String> strItor21 = strList4.listIterator((int) (byte) 0);
        java.util.Iterator<java.lang.String> strItor22 = strList4.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strTokenizer37.isIgnoreEmptyTokens();
        java.lang.String str41 = strTokenizer37.next();
        int int42 = strList27.indexOf((java.lang.Object) strTokenizer37);
        boolean boolean43 = strList4.addAll((java.util.Collection<java.lang.String>) strList27);
        java.util.ListIterator<java.lang.String> strItor44 = strList27.listIterator();
        char[] charArray51 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("hi!");
        java.lang.String str56 = strTokenizer55.nextToken();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        boolean boolean59 = strList57.add("hi!");
        boolean boolean60 = strList27.retainAll((java.util.Collection<java.lang.String>) strList57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strBuilder61.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append("#4#a4#");
        java.lang.String str68 = strBuilder61.leftString((int) (short) 100);
        int int70 = strBuilder61.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder61.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder61.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int89 = strBuilder86.lastIndexOf(strMatcher87, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder61.replaceFirst(strMatcher87, "#4#a4#");
        boolean boolean92 = strList27.remove((java.lang.Object) strBuilder91);
        int int93 = strList27.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList96 = strList27.subList(91, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#4#a4#" + "'", str18, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#4#a4#" + "'", str41, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#4#a4#" + "'", str56, "#4#a4#");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "#4#a4#" + "'", str68, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test11989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11989");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[#4#a4#]", "StrTokenizer[not tokenized yet]");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        int int5 = strList4.size();
        char[] charArray12 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setDelimiterString("hi!");
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        boolean boolean20 = strList18.add("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str23 = strTokenizer22.getContent();
        boolean boolean24 = strList18.equals((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        boolean boolean26 = strList18.equals((java.lang.Object) strMatcher25);
        boolean boolean27 = strList4.addAll((java.util.Collection<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int34 = strBuilder31.indexOf(strMatcher33);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "");
        int int47 = strBuilder28.size();
        boolean boolean48 = strList18.remove((java.lang.Object) strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int52 = strBuilder49.indexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst('#');
        java.lang.String str59 = strBuilder58.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.deleteCharAt((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendln(10L);
        int int74 = strBuilder68.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder68.appendSeparator("", 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append(false);
        boolean boolean80 = strBuilder77.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder58.appendln((java.lang.Object) boolean80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder84.clear();
        int int86 = strBuilder84.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.append(strBuilder84);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.deleteFirst('4');
        java.lang.StringBuffer stringBuffer90 = strBuilder89.toStringBuffer();
        boolean boolean91 = strList18.remove((java.lang.Object) stringBuffer90);
        java.util.Spliterator<java.lang.String> strSpliterator92 = strList18.spliterator();
        int int93 = strList18.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#4#a4#" + "'", str17, "#4#a4#");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + " " + "'", str59, " ");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 32 + "'", int86 == 32);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(stringBuffer90);
        org.junit.Assert.assertEquals(stringBuffer90.toString(), " 0\nfalse\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strSpliterator92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 2 + "'", int93 == 2);
    }

    @Test
    public void test11990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11990");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int6 = strBuilder3.indexOf(strMatcher5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.append(false);
        char[] charArray19 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("hi!");
        boolean boolean24 = strTokenizer21.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder8.appendFixedWidthPadRight((java.lang.Object) strTokenizer21, 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int31 = strBuilder28.indexOf(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln((int) (short) 10);
        boolean boolean38 = strBuilder8.equalsIgnoreCase(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.insert((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(false);
        char[] charArray50 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("hi!");
        java.lang.String str55 = strTokenizer54.nextToken();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("hi!");
        java.lang.String str60 = strBuilder59.getNullText();
        char[] charArray62 = new char[] { 'a' };
        char[] charArray63 = strBuilder59.getChars(charArray62);
        char[] charArray68 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray69 = strBuilder59.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray69);
        int int71 = strList56.indexOf((java.lang.Object) charArray69);
        char[] charArray72 = strBuilder43.getChars(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#4#a4#");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.setIgnoreEmptyTokens(false);
        java.lang.String str81 = strTokenizer78.nextToken();
        boolean boolean82 = strTokenizer78.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer78.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer2.setDelimiterMatcher(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setEmptyTokenAsNull(false);
        int int88 = strTokenizer87.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer87.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer87.setDelimiterString("java.io.IOException");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer87.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#4#a4#" + "'", str55, "#4#a4#");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " a10\nfalse\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ , a, 1, 0, \n, f, a, l, s, e, \n]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
    }

    @Test
    public void test11991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11991");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        boolean boolean29 = strBuilder27.endsWith("0java.io.IOExceptionfalse100");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.append('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test11992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11992");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.deleteAll('a');
        int int30 = strBuilder27.lastIndexOf("0java.io.IOExceptionfalse1001.035.0", (int) '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test11993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11993");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(charArray9);
        boolean boolean11 = strBuilder8.isEmpty();
        java.lang.String str13 = strBuilder8.rightString((int) 'a');
        char[] charArray20 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder8.replaceAll(strMatcher26, "a");
        char[] charArray35 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        java.lang.String str40 = strTokenizer39.nextToken();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("hi!");
        java.lang.String str45 = strBuilder44.getNullText();
        char[] charArray47 = new char[] { 'a' };
        char[] charArray48 = strBuilder44.getChars(charArray47);
        char[] charArray53 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray54 = strBuilder44.getChars(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray54);
        int int56 = strList41.indexOf((java.lang.Object) charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '#', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("1.0", strMatcher26, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.setQuoteChar('3');
        int int65 = strTokenizer61.nextIndex();
        java.lang.Object obj66 = strTokenizer61.clone();
        char[] charArray73 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        java.lang.String str77 = strTokenizer76.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer76.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst("hi!");
        java.lang.String str82 = strBuilder81.getNullText();
        char[] charArray84 = new char[] { 'a' };
        char[] charArray85 = strBuilder81.getChars(charArray84);
        char[] charArray90 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray91 = strBuilder81.getChars(charArray90);
        java.io.Reader reader92 = strBuilder81.asReader();
        char[] charArray93 = strBuilder81.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer76.reset(charArray93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer61.reset(charArray93);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10\n\n" + "'", str13, "10\n\n");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#4#a4#" + "'", str40, "#4#a4#");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "#4#a4#" + "'", str77, "#4#a4#");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[a]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader92);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[]");
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer95);
    }

    @Test
    public void test11994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11994");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder0.getNewLineText();
        java.util.stream.IntStream intStream4 = strBuilder0.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int8 = strBuilder5.indexOf(strMatcher7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteAll("#4#a4#");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst('#');
        java.lang.String str15 = strBuilder14.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.deleteAll("a");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.deleteCharAt((int) (byte) 1);
        java.io.Reader reader22 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("StrTokenizer[not tokenized yet]", "StrTokenizer[#4#a4#]");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNewLine();
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        char[] charArray43 = strBuilder33.getChars(charArray40);
        int int44 = reader22.read(charArray40);
        char[] charArray45 = strBuilder0.getChars(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, '1');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(intStream4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + " " + "'", str15, " ");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 0\n.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 0\n.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 0, \n, ., 0, \n]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 0\n.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 0\n.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 0, \n, ., 0, \n]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 0\n.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 0\n.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 0, \n, ., 0, \n]");
    }

    @Test
    public void test11995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11995");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str3 = strBuilder2.getNullText();
        char[] charArray5 = new char[] { 'a' };
        char[] charArray6 = strBuilder2.getChars(charArray5);
        char[] charArray11 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray12 = strBuilder2.getChars(charArray11);
        java.io.Reader reader13 = strBuilder2.asReader();
        reader13.mark(10);
        reader13.close();
        boolean boolean17 = reader13.ready();
        reader13.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("hi!");
        java.lang.String str22 = strBuilder21.getNullText();
        char[] charArray24 = new char[] { 'a' };
        char[] charArray25 = strBuilder21.getChars(charArray24);
        char[] charArray30 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray31 = strBuilder21.getChars(charArray30);
        java.io.Reader reader32 = strBuilder21.asReader();
        long long34 = reader32.skip((long) 59);
        char[] charArray41 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int50 = strBuilder47.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int56 = strBuilder53.indexOf(strMatcher55);
        int int57 = strBuilder47.indexOf(strMatcher55);
        char[] charArray64 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher55, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        int int73 = reader32.read(charArray41);
        int int74 = reader13.read(charArray41);
        reader13.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test11996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11996");
        java.io.IOException iOException2 = new java.io.IOException("10\n\n");
        java.io.IOException iOException3 = new java.io.IOException("1.0java.io.IOExceptionfalse1001.0\n35.0\n", (java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException("");
        java.lang.Throwable throwable8 = null;
        java.io.IOException iOException9 = new java.io.IOException("", throwable8);
        java.io.IOException iOException10 = new java.io.IOException("hi!", throwable8);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        iOException5.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException5);
        iOException3.addSuppressed((java.lang.Throwable) iOException14);
    }

    @Test
    public void test11997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11997");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        java.lang.String str4 = strBuilder2.leftString(32);
        java.util.stream.IntStream intStream5 = strBuilder2.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.setNewLineText("1truefalse0\nzinekoTrtSeslaf true");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.replaceAll("#4", " a10\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendSeparator("n: StrTokenizer[not tokenized yet]", "1false0\nfalse");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        char[] charArray26 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("hi!");
        boolean boolean31 = strTokenizer28.isIgnoreEmptyTokens();
        java.lang.String str32 = strTokenizer28.next();
        int int33 = strList18.indexOf((java.lang.Object) strTokenizer28);
        char[] charArray40 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int55 = strBuilder52.indexOf(strMatcher54);
        int int56 = strBuilder46.indexOf(strMatcher54);
        char[] charArray63 = new char[] { '#', '4', '#', 'a', '4', '#' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher54, strMatcher69);
        boolean boolean71 = strList18.equals((java.lang.Object) strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.insert(0, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendFixedWidthPadRight((java.lang.Object) 100.0d, 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.trim();
        java.lang.Object[] objArray84 = new java.lang.Object[] {};
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.appendAll(objArray84);
        char[] charArray86 = strBuilder82.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray86);
        boolean boolean88 = strList18.equals((java.lang.Object) charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder2.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer90, "false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer90.setDelimiterChar('\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer90.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer90.set("#a4#-1");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#4#a4#" + "'", str32, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "100.01");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "100.01");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[1, 0, 0, ., 0, 1]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strMatcher95);
    }

    @Test
    public void test11998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11998");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln(".IOExceptionfalse1001.0\n35.0\n1false0\n\naa4#4\n###############################1", 3, (int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append(15);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int33 = strBuilder30.indexOf(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("#4#a4#", strMatcher32);
        int int35 = strTokenizer34.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer34.getDelimiterMatcher();
        int int37 = strBuilder26.lastIndexOf(strMatcher36);
        boolean boolean38 = strBuilder14.equals((java.lang.Object) strBuilder26);
        boolean boolean40 = strBuilder14.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder14.append((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder14.appendSeparator("2.02", 34);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int49 = strBuilder46.indexOf(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append("#4#a4#");
        java.lang.String str53 = strBuilder46.leftString((int) (short) 100);
        int int55 = strBuilder46.lastIndexOf("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder46.insert(0, (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder46.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendln(10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder46.append((java.lang.CharSequence) strBuilder68);
        int int74 = strBuilder68.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder68.append(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append((double) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.replaceAll(' ', ' ');
        boolean boolean82 = strBuilder14.equalsIgnoreCase(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#4#a4#" + "'", str53, "#4#a4#");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test11999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11999");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(".0jva.io.IOExceptionfalse100");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test12000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test12000");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.clear();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("", throwable7);
        java.io.IOException iOException9 = new java.io.IOException("#4#a4#", throwable7);
        java.io.IOException iOException10 = new java.io.IOException(throwable7);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1.0f, iOException10, false, 100, strBuilder13 };
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendWithSeparators(objArray14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(10L);
        int int32 = strBuilder26.indexOf("#4#a4#", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.insert(1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln(strBuilder35);
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("hi!");
        java.lang.String str41 = strBuilder40.getNullText();
        char[] charArray43 = new char[] { 'a' };
        char[] charArray44 = strBuilder40.getChars(charArray43);
        char[] charArray49 = new char[] { 'a', '4', ' ', '4' };
        char[] charArray50 = strBuilder40.getChars(charArray49);
        writer37.write(charArray49);
        writer37.close();
        java.io.Writer writer54 = writer37.append('4');
        writer54.write(52);
        writer54.write(28);
        // The following exception was thrown during execution in test generation
        try {
            writer54.write("\000\000\000\000\000\000\000\000\000", 47, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1.0, java.io.IOException, false, 100, ]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4,  , 4]");
        org.junit.Assert.assertNotNull(writer54);
    }
}

